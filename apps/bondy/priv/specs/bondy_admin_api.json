{
    "id": "com.leapsight.bondy",
    "name": "Bondy Admin API",
    "host" : "_",
    "realm_uri" : "com.leapsight.bondy",
    "status_codes" : {
        "bondy.error.badarg" : 400,
        "bondy.error.not_found" : 404,
        "bondy.error.role_exists": 400,
        "bondy.error.unknown_user": 400
    },
    "variables" : {
        "oauth2" : {
            "type" : "oauth2",
            "flow" : "resource_owner_password_credentials",
            "token_path" : "/oauth/token",
            "revoke_token_path" : "/oauth/revoke",
            "schemes" : "{{variables.schemes}}"
        },
        "query_spec" :
            "{{request.query_params |> with([_q,_p,_limit,_sort,_page])}}",
        "query_match" :
            "{{request.query_params |> without([_q,_p,_limit,_sort,_page])}}",
        "schemes" : ["http", "https"],
        "headers": {
            "access-control-allow-origin": "*",
            "access-control-allow-credentials": "true",
            "access-control-allow-methods": "GET,HEAD,PUT,PATCH,POST,DELETE",
            "access-control-allow-headers": "origin,x-requested-with,content-type,accept",
            "access-control-max-age": "86400"
        },
        "wamp_error_body": "{{action.error.arguments_kw |> put(code, {{action.error.error_uri}})}}"
    },
    "defaults" : {
        "retries" : 0,
        "timeout" : 5000,
        "connect_timeout" : 5000,
        "schemes" : "{{variables.schemes}}",
        "headers": "{{variables.headers}}",
        "security":{}
    },
    "versions" :  {
        "1.0.0" : {
            "base_path" : "/[v1.0]",
            "variables" : {},
            "defaults" : {
                "timeout" : 20000
            },
            "languages": ["en", "es-AR"],
            "paths" : {
                "services/call" : {
                    "summary":"Allows to perform an arbitrary WAMP call.",
                    "description":"",
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "{{request.body.procedure}}",
                            "options" : "{{request.body.options}}",
                            "arguments" : "{{request.body.arguments}}",
                            "arguments_kw" : "{{request.body.arguments_kw}}"
                        },
                        "response": {
                            "on_error": {
                                "status_code": "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body": {
                                    "error_uri": "{{action.error.error_uri}}",
                                    "arguments" : "{{action.error.arguments}}",
                                    "arguments_kw" : "{{action.error.arguments_kw}}",
                                    "details": "{{action.error.details}}"
                                }
                            },
                            "on_result": {
                                "body": {
                                    "arguments" : "{{action.result.arguments}}",
                                    "arguments_kw" : "{{action.result.arguments_kw}}",
                                    "details": "{{action.result.details}}"
                                }
                            }
                        }
                    }
                },
                "/services/create_backup" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.backup.create",
                            "options" : {},
                            "arguments" : [
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/services/backup_status" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get": {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.backup.status",
                            "options" : {},
                            "arguments" : ["{{variables.query_match}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/services/restore_backup" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post": {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.backup.restore",
                            "options" : {},
                            "arguments" : ["{{request.body}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/services/load_api_spec" : {
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.http_gateway.api.load",
                            "options" : {},
                            "arguments" : [
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code": "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/api_specs" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.http_gateway.api.list",
                            "options" : {},
                            "arguments" : [],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                               "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" : "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.http_gateway.api.load",
                            "options" : {},
                            "arguments" : [
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code": "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/api_specs/:id" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.http_gateway.api.get",
                            "options" : {},
                            "arguments" : ["{{request.bindings.id}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                               "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" : "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/api_specs/:id/info" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.http_gateway.api.get",
                            "options" : {},
                            "arguments" : ["{{request.bindings.id}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                               "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" : "{{action.result.arguments |> head |> with([id, name, host, realm_uri, meta, ts])}}"
                            }
                        }
                    }
                },
                "/realms": {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get": {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.list",
                            "options" : {},
                            "arguments" : [],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.create",
                            "options" : {},
                            "arguments" : ["{{request.body}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "uri": "\"{{request.path}}/{{action.result.arguments |> head |> get('uri')}}\"",
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get": {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.get",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.update",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.delete",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/security_enabled" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get": {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.security.is_enabled",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.security.enable",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.realm.security.disable",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/clients" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.oauth2.client.add",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/clients/:id" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.oauth2.client.update",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.oauth2.client.delete",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/resource_owners" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.oauth2.resource_owner.add",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/resource_owners/:id" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.oauth2.resource_owner.update",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.oauth2.resource_owner.delete",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/users" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.user.add",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.user.list",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                               "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" : "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/users/:id" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.user.get",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.user.update",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.user.delete",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/users/:id/change_password" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post": {
                        "action": {
                            "type": "wamp_call",
                            "procedure": "bondy.user.change_password",
                            "options": {},
                            "arguments": [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body.new_password}}"
                            ],
                            "arguments_kw": {}
                        },
                        "response": {
                            "on_error": {
                                "status_code": "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body": "{{variables.wamp_error_body}}"
                            },
                            "on_result": {
                                "body": "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/groups" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.group.add",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.group.list",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                               "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" : "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/groups/:id" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.group.get",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.group.update",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.group.delete",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/services/change_password" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "post": {
                        "action": {
                            "type": "wamp_call",
                            "procedure": "bondy.user.change_password",
                            "options": {},
                            "arguments": [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body.username}}",
                                "{{request.body.new_password}}"
                            ],
                            "arguments_kw": {}
                        },
                        "response": {
                            "on_error": {
                                "status_code": "{{status_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body": "{{variables.wamp_error_body}}"
                            },
                            "on_result": {
                                "body": "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/callees" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.wamp.callee.list",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/callees/:session_id" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.wamp.callee.get",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.session_id |> integer}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/registrations" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.registration.list",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/registrations_summary" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "wamp.registration.list",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/registrations/:id" : {
                    "is_collection" : false,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "wamp.registration.get",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id |> integer}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/registrations/:id/callees" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "wamp.registration.list_callees",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id |> integer}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/subscriptions" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "bondy.subscription.list",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/subscriptions_summary" : {
                    "is_collection" : true,
                    "options": {
                        "action": {},
                        "response": {
                            "on_error": {
                                "body": ""
                            },
                            "on_result": {
                                "body": ""
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "wamp.subscription.list",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                }
            }
        }
    }
}