searchNodes=[{"doc":"","ref":"bondy_cache.html","title":"bondy_cache","type":"module"},{"doc":"","ref":"bondy_cache.html#get/2","title":"bondy_cache.get/2","type":"function"},{"doc":"","ref":"bondy_cache.html#put/3","title":"bondy_cache.put/3","type":"function"},{"doc":"","ref":"bondy_cache.html#put/4","title":"bondy_cache.put/4","type":"function"},{"doc":"","ref":"bondy_cache.html#remove/2","title":"bondy_cache.remove/2","type":"function"},{"doc":"","ref":"bondy_cli_table.html","title":"bondy_cli_table","type":"module"},{"doc":"","ref":"bondy_cli_table.html#create_table/2","title":"bondy_cli_table.create_table/2","type":"function"},{"doc":"","ref":"bondy_cli_table.html#print/2","title":"bondy_cli_table.print/2","type":"function"},{"doc":"","ref":"bondy_cli_table.html#print/3","title":"bondy_cli_table.print/3","type":"function"},{"doc":"","ref":"bondy_cluster_wamp_api.html","title":"bondy_cluster_wamp_api","type":"module"},{"doc":"","ref":"bondy_cluster_wamp_api.html#handle_call/3","title":"bondy_cluster_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_cluster_wamp_api.html#t:id/0","title":"bondy_cluster_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_cluster_wamp_api.html#t:uri/0","title":"bondy_cluster_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_cluster_wamp_api.html#t:wamp_call/0","title":"bondy_cluster_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_cluster_wamp_api.html#t:wamp_error/0","title":"bondy_cluster_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_cluster_wamp_api.html#t:wamp_result/0","title":"bondy_cluster_wamp_api.wamp_result/0","type":"type"},{"doc":"An event handler to generates WAMP Meta Events based on internal Bondy events","ref":"bondy_edge_event_handler.html","title":"bondy_edge_event_handler","type":"module"},{"doc":"","ref":"bondy_edge_event_handler.html#code_change/3","title":"bondy_edge_event_handler.code_change/3","type":"function"},{"doc":"","ref":"bondy_edge_event_handler.html#handle_call/2","title":"bondy_edge_event_handler.handle_call/2","type":"function"},{"doc":"","ref":"bondy_edge_event_handler.html#handle_event/2","title":"bondy_edge_event_handler.handle_event/2","type":"function"},{"doc":"","ref":"bondy_edge_event_handler.html#handle_info/2","title":"bondy_edge_event_handler.handle_info/2","type":"function"},{"doc":"","ref":"bondy_edge_event_handler.html#init/1","title":"bondy_edge_event_handler.init/1","type":"function"},{"doc":"","ref":"bondy_edge_event_handler.html#terminate/2","title":"bondy_edge_event_handler.terminate/2","type":"function"},{"doc":"This module implements a parser for the Bondy API Specification Format which is used to dynamically define one or more RESTful APIs. The parser uses maps_utils:validate and a number of validation specifications and as a result is its error reporting is not great but does its job. The plan is to replace this with an ad-hoc parser to give the user more useful error information. ## API Specification Format ### Host Spec ### API Spec ### Version Spec ### Path Spec ### Method Spec ### Action Spec ### Action Spec","ref":"bondy_http_gateway_api_spec_parser.html","title":"bondy_http_gateway_api_spec_parser","type":"module"},{"doc":"Given a valid API Spec or list of Specs returned by parse/1 , dynamically generates a cowboy dispatch table.","ref":"bondy_http_gateway_api_spec_parser.html#dispatch_table/1","title":"bondy_http_gateway_api_spec_parser.dispatch_table/1","type":"function"},{"doc":"Given a list of valid API Specs returned by parse/1 and dynamically generates the cowboy dispatch table. Notice this does not update the cowboy dispatch table. You will need to do that yourself.","ref":"bondy_http_gateway_api_spec_parser.html#dispatch_table/2","title":"bondy_http_gateway_api_spec_parser.dispatch_table/2","type":"function"},{"doc":"Loads a file and calls parse/1 .","ref":"bondy_http_gateway_api_spec_parser.html#from_file/1","title":"bondy_http_gateway_api_spec_parser.from_file/1","type":"function"},{"doc":"Parses the Spec map returning a new valid spec where all defaults have been applied and all variables have been replaced by either a value of a promise. Fails with in case the Spec is invalid. Variable replacepement is performed using our &quot;mop&quot; library.","ref":"bondy_http_gateway_api_spec_parser.html#parse/1","title":"bondy_http_gateway_api_spec_parser.parse/1","type":"function"},{"doc":"","ref":"bondy_http_gateway_api_spec_parser.html#t:route_match/0","title":"bondy_http_gateway_api_spec_parser.route_match/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_api_spec_parser.html#t:route_path/0","title":"bondy_http_gateway_api_spec_parser.route_path/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_api_spec_parser.html#t:route_rule/0","title":"bondy_http_gateway_api_spec_parser.route_rule/0","type":"type"},{"doc":"Cowboy types","ref":"bondy_http_gateway_api_spec_parser.html#t:scheme_rule/0","title":"bondy_http_gateway_api_spec_parser.scheme_rule/0","type":"type"},{"doc":"A utiliy module use to customised the JSON encoding for 3rd-party libs e.g. erlang_jose","ref":"bondy_json.html","title":"bondy_json","type":"module"},{"doc":"","ref":"bondy_json.html#decode/1","title":"bondy_json.decode/1","type":"function"},{"doc":"","ref":"bondy_json.html#encode/1","title":"bondy_json.encode/1","type":"function"},{"doc":"","ref":"bondy_json.html#setup/0","title":"bondy_json.setup/0","type":"function"},{"doc":"","ref":"bondy_lager_logger_backend.html","title":"bondy_lager_logger_backend","type":"module"},{"doc":"","ref":"bondy_lager_logger_backend.html#handle_call/2","title":"bondy_lager_logger_backend.handle_call/2","type":"function"},{"doc":"","ref":"bondy_lager_logger_backend.html#handle_event/2","title":"bondy_lager_logger_backend.handle_event/2","type":"function"},{"doc":"","ref":"bondy_lager_logger_backend.html#init/1","title":"bondy_lager_logger_backend.init/1","type":"function"},{"doc":"This is the main module that exposes custom formatting to the OTP logger library (part of the kernel application since OTP-21). The module honors the standard configuration of the kernel's default logger formatter regarding: max depth, templates.","ref":"bondy_logger_formatter.html","title":"bondy_logger_formatter","type":"module"},{"doc":"","ref":"bondy_logger_formatter.html#format/2","title":"bondy_logger_formatter.format/2","type":"function"},{"doc":"","ref":"bondy_logger_formatter.html#t:metakey/0","title":"bondy_logger_formatter.metakey/0","type":"type"},{"doc":"","ref":"bondy_logger_formatter.html#t:template/0","title":"bondy_logger_formatter.template/0","type":"type"},{"doc":"","ref":"bondy_logger_utils.html","title":"bondy_logger_utils","type":"module"},{"doc":"","ref":"bondy_logger_utils.html#message_and_meta/2","title":"bondy_logger_utils.message_and_meta/2","type":"function"},{"doc":"","ref":"bondy_logger_utils.html#set_primary_metadata/1","title":"bondy_logger_utils.set_primary_metadata/1","type":"function"},{"doc":"","ref":"bondy_logger_utils.html#set_process_metadata/1","title":"bondy_logger_utils.set_process_metadata/1","type":"function"},{"doc":"","ref":"bondy_logger_utils.html#update_primary_metadata/1","title":"bondy_logger_utils.update_primary_metadata/1","type":"function"},{"doc":"","ref":"bondy_logger_utils.html#update_process_metadata/1","title":"bondy_logger_utils.update_process_metadata/1","type":"function"},{"doc":"Based on: github.com/lasp-lang/lasp/...lasp_partisan_peer_service.erl","ref":"bondy_partisan_peer_service.html","title":"bondy_partisan_peer_service","type":"module"},{"doc":"Forward message to registered process on the remote side.","ref":"bondy_partisan_peer_service.html#forward_message/3","title":"bondy_partisan_peer_service.forward_message/3","type":"function"},{"doc":"","ref":"bondy_partisan_peer_service.html#forward_message/4","title":"bondy_partisan_peer_service.forward_message/4","type":"function"},{"doc":"","ref":"bondy_partisan_peer_service.html#forward_message/5","title":"bondy_partisan_peer_service.forward_message/5","type":"function"},{"doc":"Prepare node to join a cluster.","ref":"bondy_partisan_peer_service.html#join/1","title":"bondy_partisan_peer_service.join/1","type":"function"},{"doc":"Convert nodename to atom.","ref":"bondy_partisan_peer_service.html#join/2","title":"bondy_partisan_peer_service.join/2","type":"function"},{"doc":"Initiate join. Nodes cannot join themselves.","ref":"bondy_partisan_peer_service.html#join/3","title":"bondy_partisan_peer_service.join/3","type":"function"},{"doc":"Leave the cluster.","ref":"bondy_partisan_peer_service.html#leave/0","title":"bondy_partisan_peer_service.leave/0","type":"function"},{"doc":"Leave the cluster.","ref":"bondy_partisan_peer_service.html#leave/1","title":"bondy_partisan_peer_service.leave/1","type":"function"},{"doc":"","ref":"bondy_partisan_peer_service.html#manager/0","title":"bondy_partisan_peer_service.manager/0","type":"function"},{"doc":"","ref":"bondy_partisan_peer_service.html#members/0","title":"bondy_partisan_peer_service.members/0","type":"function"},{"doc":"","ref":"bondy_partisan_peer_service.html#mynode/0","title":"bondy_partisan_peer_service.mynode/0","type":"function"},{"doc":"","ref":"bondy_partisan_peer_service.html#myself/0","title":"bondy_partisan_peer_service.myself/0","type":"function"},{"doc":"Stop node.","ref":"bondy_partisan_peer_service.html#stop/0","title":"bondy_partisan_peer_service.stop/0","type":"function"},{"doc":"Stop node for a given reason.","ref":"bondy_partisan_peer_service.html#stop/1","title":"bondy_partisan_peer_service.stop/1","type":"function"},{"doc":"","ref":"bondy_remote_user_events_handler.html","title":"bondy_remote_user_events_handler","type":"module"},{"doc":"","ref":"bondy_remote_user_events_handler.html#code_change/3","title":"bondy_remote_user_events_handler.code_change/3","type":"function"},{"doc":"","ref":"bondy_remote_user_events_handler.html#handle_call/3","title":"bondy_remote_user_events_handler.handle_call/3","type":"function"},{"doc":"","ref":"bondy_remote_user_events_handler.html#handle_cast/2","title":"bondy_remote_user_events_handler.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_remote_user_events_handler.html#handle_info/2","title":"bondy_remote_user_events_handler.handle_info/2","type":"function"},{"doc":"","ref":"bondy_remote_user_events_handler.html#init/1","title":"bondy_remote_user_events_handler.init/1","type":"function"},{"doc":"","ref":"bondy_remote_user_events_handler.html#start_link/0","title":"bondy_remote_user_events_handler.start_link/0","type":"function"},{"doc":"","ref":"bondy_remote_user_events_handler.html#terminate/2","title":"bondy_remote_user_events_handler.terminate/2","type":"function"},{"doc":"","ref":"bondy_session_api.html","title":"bondy_session_api","type":"module"},{"doc":"","ref":"bondy_session_api.html#get/3","title":"bondy_session_api.get/3","type":"function"},{"doc":"","ref":"bondy.html","title":"bondy","type":"module"},{"doc":"","ref":"bondy.html#aae_exchanges/0","title":"bondy.aae_exchanges/0","type":"function"},{"doc":"Acknowledges the reception of a WAMP message. This function should be used by the peer transport module to acknowledge the reception of a message sent with send/3 .","ref":"bondy.html#ack/2","title":"bondy.ack/2","type":"function"},{"doc":"","ref":"bondy.html#add_via/2","title":"bondy.add_via/2","type":"function"},{"doc":"A blocking call.","ref":"bondy.html#call/5","title":"bondy.call/5","type":"function"},{"doc":"A non-blocking call.","ref":"bondy.html#cast/5","title":"bondy.cast/5","type":"function"},{"doc":"","ref":"bondy.html#check_response/4","title":"bondy.check_response/4","type":"function"},{"doc":"Returns the last relay reference of the 'via' option stack. This reference represents the final relay the message will need to go through to be send using send/3 .","ref":"bondy.html#peek_via/1","title":"bondy.peek_via/1","type":"function"},{"doc":"","ref":"bondy.html#prepare_send/2","title":"bondy.prepare_send/2","type":"function"},{"doc":"","ref":"bondy.html#prepare_send/3","title":"bondy.prepare_send/3","type":"function"},{"doc":"","ref":"bondy.html#publish/5","title":"bondy.publish/5","type":"function"},{"doc":"","ref":"bondy.html#publish/6","title":"bondy.publish/6","type":"function"},{"doc":"","ref":"bondy.html#request/3","title":"bondy.request/3","type":"function"},{"doc":"Sends a message to a WAMP peer. It calls send/3 with a an empty map for Options.","ref":"bondy.html#send/2","title":"bondy.send/2","type":"function"},{"doc":"Sends a message to a local WAMP peer. If the transport is not open it fails with an exception. This function is used by the router (dealer | broker) to send WAMP messages to local peers. Opts is a map with the following keys: * timeout - timeout in milliseconds (defaults to 10000) * enqueue (boolean) - if the peer is not reachable and this value is true, bondy will enqueue the message so that the peer can resume the session and consume all enqueued messages.","ref":"bondy.html#send/3","title":"bondy.send/3","type":"function"},{"doc":"Calls bondy_broker:subscribe/3.","ref":"bondy.html#subscribe/3","title":"bondy.subscribe/3","type":"function"},{"doc":"Calls bondy_broker:subscribe/4.","ref":"bondy.html#subscribe/4","title":"bondy.subscribe/4","type":"function"},{"doc":"Removes and returns the first relay reference of the 'via' option stack.","ref":"bondy.html#take_via/1","title":"bondy.take_via/1","type":"function"},{"doc":"","ref":"bondy.html#t:id/0","title":"bondy.id/0","type":"type"},{"doc":"","ref":"bondy.html#t:maybe/1","title":"bondy.maybe/1","type":"type"},{"doc":"","ref":"bondy.html#t:uri/0","title":"bondy.uri/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_abort/0","title":"bondy.wamp_abort/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_authenticate/0","title":"bondy.wamp_authenticate/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_call/0","title":"bondy.wamp_call/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_cancel/0","title":"bondy.wamp_cancel/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_challenge/0","title":"bondy.wamp_challenge/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_error/0","title":"bondy.wamp_error/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_error_map/0","title":"bondy.wamp_error_map/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_event/0","title":"bondy.wamp_event/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_event_received/0","title":"bondy.wamp_event_received/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_goodbye/0","title":"bondy.wamp_goodbye/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_hello/0","title":"bondy.wamp_hello/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_interrupt/0","title":"bondy.wamp_interrupt/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_invocation/0","title":"bondy.wamp_invocation/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_message/0","title":"bondy.wamp_message/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_publish/0","title":"bondy.wamp_publish/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_published/0","title":"bondy.wamp_published/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_register/0","title":"bondy.wamp_register/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_registered/0","title":"bondy.wamp_registered/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_result/0","title":"bondy.wamp_result/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_subscribe/0","title":"bondy.wamp_subscribe/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_subscribed/0","title":"bondy.wamp_subscribed/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_subscriber_received/0","title":"bondy.wamp_subscriber_received/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_unregister/0","title":"bondy.wamp_unregister/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_unregistered/0","title":"bondy.wamp_unregistered/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_unsubscribe/0","title":"bondy.wamp_unsubscribe/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_unsubscribed/0","title":"bondy.wamp_unsubscribed/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_welcome/0","title":"bondy.wamp_welcome/0","type":"type"},{"doc":"","ref":"bondy.html#t:wamp_yield/0","title":"bondy.wamp_yield/0","type":"type"},{"doc":"","ref":"bondy_app.html","title":"bondy_app","type":"module"},{"doc":"Application behaviour callback","ref":"bondy_app.html#prep_stop/1","title":"bondy_app.prep_stop/1","type":"function"},{"doc":"Application behaviour callback","ref":"bondy_app.html#start/2","title":"bondy_app.start/2","type":"function"},{"doc":"","ref":"bondy_app.html#status/0","title":"bondy_app.status/0","type":"function"},{"doc":"A convenience function. Calls init:stop/0","ref":"bondy_app.html#stop/0","title":"bondy_app.stop/0","type":"function"},{"doc":"Application behaviour callback","ref":"bondy_app.html#stop/1","title":"bondy_app.stop/1","type":"function"},{"doc":"","ref":"bondy_app.html#vsn/0","title":"bondy_app.vsn/0","type":"function"},{"doc":"An implementation of app_config behaviour.","ref":"bondy_config.html","title":"bondy_config","type":"module"},{"doc":"","ref":"bondy_config.html#get/1","title":"bondy_config.get/1","type":"function"},{"doc":"","ref":"bondy_config.html#get/2","title":"bondy_config.get/2","type":"function"},{"doc":"","ref":"bondy_config.html#init/1","title":"bondy_config.init/1","type":"function"},{"doc":"","ref":"bondy_config.html#node/0","title":"bondy_config.node/0","type":"function"},{"doc":"","ref":"bondy_config.html#node_spec/0","title":"bondy_config.node_spec/0","type":"function"},{"doc":"","ref":"bondy_config.html#nodestring/0","title":"bondy_config.nodestring/0","type":"function"},{"doc":"","ref":"bondy_config.html#set/2","title":"bondy_config.set/2","type":"function"},{"doc":"","ref":"bondy_config.html#t:channel/0","title":"bondy_config.channel/0","type":"type"},{"doc":"","ref":"bondy_config.html#t:listen_addr/0","title":"bondy_config.listen_addr/0","type":"type"},{"doc":"","ref":"bondy_config.html#t:node_spec/0","title":"bondy_config.node_spec/0","type":"type"},{"doc":"","ref":"bondy_config.html#t:nodestring/0","title":"bondy_config.nodestring/0","type":"type"},{"doc":"It uses Jump Consistent Hash algorithm described in [A Fast, Minimal Memory, Consistent Hash Algorithm](https://arxiv.org/ftp/ arxiv/papers/1406/1406.2294.pdf).","ref":"bondy_consistent_hashing.html","title":"bondy_consistent_hashing","type":"module"},{"doc":"","ref":"bondy_consistent_hashing.html#bucket/2","title":"bondy_consistent_hashing.bucket/2","type":"function"},{"doc":"","ref":"bondy_consistent_hashing.html#bucket/3","title":"bondy_consistent_hashing.bucket/3","type":"function"},{"doc":"","ref":"bondy_data_validators.html","title":"bondy_data_validators","type":"module"},{"doc":"","ref":"bondy_data_validators.html#authorized_key/1","title":"bondy_data_validators.authorized_key/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#cidr/1","title":"bondy_data_validators.cidr/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#existing_atom/1","title":"bondy_data_validators.existing_atom/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#groupname/1","title":"bondy_data_validators.groupname/1","type":"function"},{"doc":"Allows reserved names like &quot;all&quot;, &quot;anonymous&quot;, etc","ref":"bondy_data_validators.html#groupnames/1","title":"bondy_data_validators.groupnames/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#ip_address/1","title":"bondy_data_validators.ip_address/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#password/1","title":"bondy_data_validators.password/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#peer/1","title":"bondy_data_validators.peer/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#port_number/1","title":"bondy_data_validators.port_number/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#realm_uri/1","title":"bondy_data_validators.realm_uri/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#rolename/1","title":"bondy_data_validators.rolename/1","type":"function"},{"doc":"Allows reserved names like &quot;all&quot;, &quot;anonymous&quot;, etc","ref":"bondy_data_validators.html#rolenames/1","title":"bondy_data_validators.rolenames/1","type":"function"},{"doc":"","ref":"bondy_data_validators.html#strict_groupname/1","title":"bondy_data_validators.strict_groupname/1","type":"function"},{"doc":"Does not allow reserved namess","ref":"bondy_data_validators.html#strict_username/1","title":"bondy_data_validators.strict_username/1","type":"function"},{"doc":"Allows reserved names like &quot;all&quot;, &quot;anonymous&quot;, etc","ref":"bondy_data_validators.html#username/1","title":"bondy_data_validators.username/1","type":"function"},{"doc":"Allows reserved names like &quot;all&quot;, &quot;anonymous&quot;, etc","ref":"bondy_data_validators.html#usernames/1","title":"bondy_data_validators.usernames/1","type":"function"},{"doc":"","ref":"bondy_error.html","title":"bondy_error","type":"module"},{"doc":"","ref":"bondy_error.html#code_to_uri/1","title":"bondy_error.code_to_uri/1","type":"function"},{"doc":"","ref":"bondy_error.html#map/1","title":"bondy_error.map/1","type":"function"},{"doc":"","ref":"bondy_error.html#map/2","title":"bondy_error.map/2","type":"function"},{"doc":"A bondy_ref (reference) acts as a fully qualified name for a process or callback function in a Bondy network. The reference is used by Bondy in the bondy_registry when registering procedures and subscriptions so that the bondy_router can forward and/or relay a message to a process, or callback function. ## Types ### Internal ### Relay ### Client ### Callback","ref":"bondy_ref.html","title":"bondy_ref","type":"module"},{"doc":"","ref":"bondy_ref.html#callback/1","title":"bondy_ref.callback/1","type":"function"},{"doc":"","ref":"bondy_ref.html#is_bridge_relay/1","title":"bondy_ref.is_bridge_relay/1","type":"function"},{"doc":"","ref":"bondy_ref.html#is_client/1","title":"bondy_ref.is_client/1","type":"function"},{"doc":"","ref":"bondy_ref.html#is_internal/1","title":"bondy_ref.is_internal/1","type":"function"},{"doc":"Returns whether this is a reference to a local target i.e. located on the caller's node.","ref":"bondy_ref.html#is_local/1","title":"bondy_ref.is_local/1","type":"function"},{"doc":"","ref":"bondy_ref.html#is_relay/1","title":"bondy_ref.is_relay/1","type":"function"},{"doc":"Returns whether this is a reference to the calling process.","ref":"bondy_ref.html#is_self/1","title":"bondy_ref.is_self/1","type":"function"},{"doc":"Returns true if term Term is a reference. Otherwise returns false .","ref":"bondy_ref.html#is_type/1","title":"bondy_ref.is_type/1","type":"function"},{"doc":"","ref":"bondy_ref.html#name/1","title":"bondy_ref.name/1","type":"function"},{"doc":"","ref":"bondy_ref.html#new/2","title":"bondy_ref.new/2","type":"function"},{"doc":"","ref":"bondy_ref.html#new/3","title":"bondy_ref.new/3","type":"function"},{"doc":"","ref":"bondy_ref.html#new/4","title":"bondy_ref.new/4","type":"function"},{"doc":"Creates a new reference.","ref":"bondy_ref.html#new/5","title":"bondy_ref.new/5","type":"function"},{"doc":"Returns the Bondy peer node in which the target of this reference is located and/or connected to. See target/1 for a description of the different targets and the relationship with the node.","ref":"bondy_ref.html#node/1","title":"bondy_ref.node/1","type":"function"},{"doc":"Returns the Bondy peer binary string name of the node in which the target of this reference is located and/or connected to. See target/1 for a description of the different targets and the relationship with the node.","ref":"bondy_ref.html#nodestring/1","title":"bondy_ref.nodestring/1","type":"function"},{"doc":"","ref":"bondy_ref.html#pattern/5","title":"bondy_ref.pattern/5","type":"function"},{"doc":"Returns a pid when target is of type {pid, binary()} , otherwise returns the atom undefined . If the reference is not local it fails with exception not_my_node . This is becuase process identifies can only be used on the node where they were created (this is because we are using Partisan and not Distributed Erlang).","ref":"bondy_ref.html#pid/1","title":"bondy_ref.pid/1","type":"function"},{"doc":"Returns the realm URI of the reference.","ref":"bondy_ref.html#realm_uri/1","title":"bondy_ref.realm_uri/1","type":"function"},{"doc":"Returns the session identifier of the reference or the atom undefined .","ref":"bondy_ref.html#session_id/1","title":"bondy_ref.session_id/1","type":"function"},{"doc":"Returns the target of the reference. A target is a process ( pid() ) a gproc registered name ( {name, GprocName} ) or a callback ( mf() ). If the reference type is client the target refers to the session and/or process owning the network connection to the client. If the reference type is internal the target refers to an internal process acting as one of the Bondy client roles e.g. an internal subscriber. Messages destined to a target located on a different node are relayed by the router through the cluster distribution layer (Partisan). If the reference type is relay the target refers to the session and/or process owning the network connection to the edge or remote cluster (See bondy_edge_uplink_client and bondy_edge_uplink_server respectively). The relay acts as a proxy for the actual edge or remote clients, internal and callback targets.","ref":"bondy_ref.html#target/1","title":"bondy_ref.target/1","type":"function"},{"doc":"Returns the target of the reference. A target is a process ( pid() ) a gproc registered name ( {name, GprocName} ) or a callback ( mf() ). If the reference type is client the target refers to the session and/or process owning the network connection to the client. If the reference type is internal the target refers to an internal process acting as one of the Bondy client roles e.g. an internal subscriber. Messages destined to a target located on a different node are relayed by the router through the cluster distribution layer (Partisan). If the reference type is relay the target refers to the session and/or process owning the network connection to the edge or remote cluster (See bondy_edge_uplink_client and bondy_edge_uplink_server respectively). The relay acts as a proxy for the actual edge or remote clients, internal and callback targets.","ref":"bondy_ref.html#target_type/1","title":"bondy_ref.target_type/1","type":"function"},{"doc":"Returns the reference type.","ref":"bondy_ref.html#type/1","title":"bondy_ref.type/1","type":"function"},{"doc":"Returns all the supported reference types.","ref":"bondy_ref.html#types/0","title":"bondy_ref.types/0","type":"function"},{"doc":"","ref":"bondy_ref.html#t:bridge_relay/0","title":"bondy_ref.bridge_relay/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:client/0","title":"bondy_ref.client/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:id/0","title":"bondy_ref.id/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:internal/0","title":"bondy_ref.internal/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:maybe/1","title":"bondy_ref.maybe/1","type":"type"},{"doc":"","ref":"bondy_ref.html#t:mf/0","title":"bondy_ref.mf/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:name/0","title":"bondy_ref.name/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:nodestring/0","title":"bondy_ref.nodestring/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:ref_type/0","title":"bondy_ref.ref_type/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:relay/0","title":"bondy_ref.relay/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:t/0","title":"bondy_ref.t/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:target/0","title":"bondy_ref.target/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:target_type/0","title":"bondy_ref.target_type/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:uri/0","title":"bondy_ref.uri/0","type":"type"},{"doc":"","ref":"bondy_ref.html#t:wildcard/1","title":"bondy_ref.wildcard/1","type":"type"},{"doc":"","ref":"bondy_sup.html","title":"bondy_sup","type":"module"},{"doc":"","ref":"bondy_sup.html#init/1","title":"bondy_sup.init/1","type":"function"},{"doc":"","ref":"bondy_sup.html#start_link/0","title":"bondy_sup.start_link/0","type":"function"},{"doc":"","ref":"bondy_utils.html","title":"bondy_utils","type":"module"},{"doc":"","ref":"bondy_utils.html#bin_to_pid/1","title":"bondy_utils.bin_to_pid/1","type":"function"},{"doc":"Returns the elapsed time since Timestamp expressed in the desired TimeUnit.","ref":"bondy_utils.html#elapsed_time/2","title":"bondy_utils.elapsed_time/2","type":"function"},{"doc":"","ref":"bondy_utils.html#foreach/2","title":"bondy_utils.foreach/2","type":"function"},{"doc":"","ref":"bondy_utils.html#generate_fragment/1","title":"bondy_utils.generate_fragment/1","type":"function"},{"doc":"IDs in the _global scope_ MUST be drawn _randomly_ from a _uniform distribution_ over the complete range [0, 2^53]","ref":"bondy_utils.html#get_id/1","title":"bondy_utils.get_id/1","type":"function"},{"doc":"Returns a base64 encoded random string","ref":"bondy_utils.html#get_nonce/0","title":"bondy_utils.get_nonce/0","type":"function"},{"doc":"Returns a base64 encoded random string","ref":"bondy_utils.html#get_nonce/1","title":"bondy_utils.get_nonce/1","type":"function"},{"doc":"borrowed from http://blog.teemu.im/2009/11/07/generating-random-strings-in-erlang/","ref":"bondy_utils.html#get_random_string/2","title":"bondy_utils.get_random_string/2","type":"function"},{"doc":"","ref":"bondy_utils.html#is_uuid/1","title":"bondy_utils.is_uuid/1","type":"function"},{"doc":"","ref":"bondy_utils.html#json_consult/1","title":"bondy_utils.json_consult/1","type":"function"},{"doc":"","ref":"bondy_utils.html#json_consult/2","title":"bondy_utils.json_consult/2","type":"function"},{"doc":"","ref":"bondy_utils.html#maybe_encode/2","title":"bondy_utils.maybe_encode/2","type":"function"},{"doc":"","ref":"bondy_utils.html#maybe_slice/3","title":"bondy_utils.maybe_slice/3","type":"function"},{"doc":"The call will fail with a {badkey, any()} exception is any key found in M1 is not present in M2.","ref":"bondy_utils.html#merge_map_flags/2","title":"bondy_utils.merge_map_flags/2","type":"function"},{"doc":"","ref":"bondy_utils.html#pid_to_bin/1","title":"bondy_utils.pid_to_bin/1","type":"function"},{"doc":"Converts a session identifier into a 0-padded binary string.","ref":"bondy_utils.html#session_id_to_uri_part/1","title":"bondy_utils.session_id_to_uri_part/1","type":"function"},{"doc":"","ref":"bondy_utils.html#system_time_to_rfc3339/2","title":"bondy_utils.system_time_to_rfc3339/2","type":"function"},{"doc":"","ref":"bondy_utils.html#tc/3","title":"bondy_utils.tc/3","type":"function"},{"doc":"","ref":"bondy_utils.html#timeout/1","title":"bondy_utils.timeout/1","type":"function"},{"doc":"","ref":"bondy_utils.html#to_binary_keys/1","title":"bondy_utils.to_binary_keys/1","type":"function"},{"doc":"","ref":"bondy_utils.html#to_existing_atom_keys/1","title":"bondy_utils.to_existing_atom_keys/1","type":"function"},{"doc":"","ref":"bondy_utils.html#uuid/0","title":"bondy_utils.uuid/0","type":"function"},{"doc":"","ref":"bondy_utils.html#uuid/1","title":"bondy_utils.uuid/1","type":"function"},{"doc":"","ref":"bondy_utils.html#t:id/0","title":"bondy_utils.id/0","type":"type"},{"doc":"","ref":"bondy_utils.html#t:uri/0","title":"bondy_utils.uri/0","type":"type"},{"doc":"","ref":"bondy_wamp_utils.html","title":"bondy_wamp_utils","type":"module"},{"doc":"","ref":"bondy_wamp_utils.html#error/2","title":"bondy_wamp_utils.error/2","type":"function"},{"doc":"Returns a CALL RESULT or ERROR based on the first Argument","ref":"bondy_wamp_utils.html#maybe_error/2","title":"bondy_wamp_utils.maybe_error/2","type":"function"},{"doc":"Creates a wamp_error() based on a wamp_call().","ref":"bondy_wamp_utils.html#no_such_procedure_error/1","title":"bondy_wamp_utils.no_such_procedure_error/1","type":"function"},{"doc":"","ref":"bondy_wamp_utils.html#no_such_procedure_error/3","title":"bondy_wamp_utils.no_such_procedure_error/3","type":"function"},{"doc":"","ref":"bondy_wamp_utils.html#no_such_registration_error/1","title":"bondy_wamp_utils.no_such_registration_error/1","type":"function"},{"doc":"@throws wamp_message:error()","ref":"bondy_wamp_utils.html#validate_admin_call_args/3","title":"bondy_wamp_utils.validate_admin_call_args/3","type":"function"},{"doc":"@throws wamp_message:error()","ref":"bondy_wamp_utils.html#validate_admin_call_args/4","title":"bondy_wamp_utils.validate_admin_call_args/4","type":"function"},{"doc":"@throws wamp_message:error()","ref":"bondy_wamp_utils.html#validate_call_args/3","title":"bondy_wamp_utils.validate_call_args/3","type":"function"},{"doc":"@throws wamp_message:error()","ref":"bondy_wamp_utils.html#validate_call_args/4","title":"bondy_wamp_utils.validate_call_args/4","type":"function"},{"doc":"","ref":"bondy_wamp_utils.html#t:id/0","title":"bondy_wamp_utils.id/0","type":"type"},{"doc":"","ref":"bondy_wamp_utils.html#t:uri/0","title":"bondy_wamp_utils.uri/0","type":"type"},{"doc":"","ref":"bondy_wamp_utils.html#t:wamp_call/0","title":"bondy_wamp_utils.wamp_call/0","type":"type"},{"doc":"Realms are routing and administrative domains and act as namespaces for all resources in Bondy i.e. all users, groups, permissions, registrations and subscriptions belong to a Realm. Messages and events are routed separately for each individual realm so sessions attached to a realm won’t see message and events occurring on another realm. Overview The realm is a central and fundamental concept in Bondy. It does not only serve as an authentication and authorization domain but also as a message routing domain . Bondy ensures no messages routed in one realm will leak into another realm. Security A realm's security may be checked, enabled, or disabled by an administrator through the WAMP and HTTP APIs. This allows an administrator to change security settings of a realm on the whole cluster quickly without needing to change settings on a node-by-node basis. If you disable security, this means that you have disabled all of the various authentication and authorization checks that take place when establishing a session and executing operations against a Bondy Realm. Users, groups, and other security resources remain available for configuration while security is disabled, and will be applied if and when security is re-enabled. Realm security is enabled by default. Storage Realms (and the associated users, credentials, groups, sources and permissions) are persisted to disk and replicated across the cluster using the plum_db subsystem. Bondy Master Realm When you start Bondy for the first time it creates and stores the Bondy Master realm a.k.a com.leapsight.bondy . This realm is the root realm which allows an admin user to create, list, modify and delete other realms. Realm Properties uri uri() [required, immutable] The realm identifier. description binary() A textual description of the realm. is_prototype boolean()' [immutable] If true' this realm is a realm used as a prototype. Default : false prototype_uri uri() If present, this it the URI of the the realm prototype this realm inherits some of its behaviour and features from. sso_realm_uri uri() If present, this it the URI of the SSO Realm this realm is connected to. is_sso_realm boolean()' [immutable] If true' this realm is an SSO Realm. Default : false . allow_connections boolean()' If true' this realm is allowing connections from clients. It is normally set to false' when the realm is an SSO Realm. Default: true' authmethods list(binary()' The list of the authentication methods allowed by this realm. Default: [anonymous, password, ticket, oauth2, wampcra]' security_status binary()' The string enabled' if security is enabled. Otherwise the string disabled . public_keys list() A list of JWK values. Realm Prototypes A Prototype Realm is a realm that acts as a prototype for the construction of other realms. A prototype realm is a normal realm whose property is_prototype has been set to true. Prototypical inheritance allows us to reuse the properties (including RBAC definitions) from one realm to another through a reference URI configured on the prototype_uri property. Prototypical inheritance is a form of single inheritance as realms are can only be related to a single prototype. The prototype_uri property is defined as an *irreflexive property* i.e. a realm cannot have itself as prototype. In addition *a prototype cannot inherit from another prototype*. This means the inheritance chain is bounded to one level. Inherited properties The following is the list of properties which a realm inherits from a prototype when those properties have not been asigned a value. Setting a value to these properties is equivalente to overriding the prototype's. * **security_enabled** * **allow_connections** * **sso_realm_uri** * **authmethods** In addition realms inherit Groups, Sources and Grants from their prototype. The following are the inheritance rules: 1. Users cannot be defined at the prototype i.e. no user inheritance. 1. A realm has access to all groups defined in the prototype i.e. from a realm perspective the prototype groups operate in the same way as if they have been defined in the realm itself. This enables roles (users and groups) in a realm to be members of groups defined in the prototype. 1. A group defined in a realm overrides any homonymous group in the prototype. This works at all levels of the group membership chain. 1. The previous rule does not apply to the special group all . Permissions granted to all are merged between a realm and its prototype. Same Sign-on (SSO) Bondy SSO (Same Sign-on) is a feature that allows users to access multiple realms using just one set of credentials. It is enabled by setting the realm's sso_realm_uri property during realm creation or during an update operation. * It requires the user to authenticate when opening a session in a realm. * Changing credentials e.g. updating password can be performed while connected to any realm.","ref":"bondy_realm.html","title":"bondy_realm","type":"module"},{"doc":"Returns true if the Realm is allowing connections. Otherwise returns false . If the value is undefined and the realm has a prototype the prototype's value is returned. Otherwise if the realm doesn't have a prototype returns false . Note that a Prototype realm never allows connections irrespective of the value set to this property. This this property is just used as a template for realms to inherit from. This setting is used to either temporarilly restrict new connections to the realm or to avoid connections when the realm is used as a Single Sign-on Realm. When connections are not allowed the only way of managing the resources in the realm is through a connection to the Bondy Master Realm.","ref":"bondy_realm.html#allow_connections/1","title":"bondy_realm.allow_connections/1","type":"function"},{"doc":"Loads a security config file from bondy_config:get([security, config_file]) if defined and applies its definitions.","ref":"bondy_realm.html#apply_config/0","title":"bondy_realm.apply_config/0","type":"function"},{"doc":"Returns the list of supported authentication methods for Realm. If the value is undefined and the realm has a prototype the prototype's value is returned. Otherwise if the realm doesn't have a prototype returns the default list of authentication methods. See is_allowed_authmethod for more information about how this affects the methods available for an authenticating user.","ref":"bondy_realm.html#authmethods/1","title":"bondy_realm.authmethods/1","type":"function"},{"doc":"","ref":"bondy_realm.html#create/1","title":"bondy_realm.create/1","type":"function"},{"doc":"","ref":"bondy_realm.html#delete/1","title":"bondy_realm.delete/1","type":"function"},{"doc":"","ref":"bondy_realm.html#description/1","title":"bondy_realm.description/1","type":"function"},{"doc":"Disables security for realm Realm .","ref":"bondy_realm.html#disable_security/1","title":"bondy_realm.disable_security/1","type":"function"},{"doc":"Enables security for realm Realm .","ref":"bondy_realm.html#enable_security/1","title":"bondy_realm.enable_security/1","type":"function"},{"doc":"","ref":"bondy_realm.html#encryption_keys/1","title":"bondy_realm.encryption_keys/1","type":"function"},{"doc":"","ref":"bondy_realm.html#exists/1","title":"bondy_realm.exists/1","type":"function"},{"doc":"Retrieves the realm identified by Uri from the tuplespace. If the realm does not exist it fails with reason '{badarg, Uri}'.","ref":"bondy_realm.html#fetch/1","title":"bondy_realm.fetch/1","type":"function"},{"doc":"Loads a security config file from Filename .","ref":"bondy_realm.html#from_file/1","title":"bondy_realm.from_file/1","type":"function"},{"doc":"Retrieves the realm identified by Uri from the tuplespace. If the realm does not exist and automatic creation of realms is enabled, it will add a new one for Uri with the default configuration options.","ref":"bondy_realm.html#get/1","title":"bondy_realm.get/1","type":"function"},{"doc":"Retrieves the realm identified by Uri from the tuplespace. If the realm does not exist and automatic creation of realms is enabled, it will create a new one for Uri with configuration options Opts .","ref":"bondy_realm.html#get/2","title":"bondy_realm.get/2","type":"function"},{"doc":"","ref":"bondy_realm.html#get_encryption_key/2","title":"bondy_realm.get_encryption_key/2","type":"function"},{"doc":"","ref":"bondy_realm.html#get_private_key/2","title":"bondy_realm.get_private_key/2","type":"function"},{"doc":"","ref":"bondy_realm.html#get_public_key/2","title":"bondy_realm.get_public_key/2","type":"function"},{"doc":"","ref":"bondy_realm.html#get_random_encryption_kid/1","title":"bondy_realm.get_random_encryption_kid/1","type":"function"},{"doc":"","ref":"bondy_realm.html#get_random_kid/1","title":"bondy_realm.get_random_kid/1","type":"function"},{"doc":"Returns the list of grants belonging to realm Realm . These includes the grants inherited from the prototype (if defined).","ref":"bondy_realm.html#grants/1","title":"bondy_realm.grants/1","type":"function"},{"doc":"Returns the list of grants belonging to realm Realm . These includes the grants inherited from the prototype (if defined).","ref":"bondy_realm.html#grants/2","title":"bondy_realm.grants/2","type":"function"},{"doc":"Returns the list of users belonging to realm Realm . These includes the groups inherited from the prototype (if defined).","ref":"bondy_realm.html#groups/1","title":"bondy_realm.groups/1","type":"function"},{"doc":"Returns the list of groups belonging to realm Realm . These includes the groups inherited from the prototype (if defined).","ref":"bondy_realm.html#groups/2","title":"bondy_realm.groups/2","type":"function"},{"doc":"","ref":"bondy_realm.html#info/1","title":"bondy_realm.info/1","type":"function"},{"doc":"Returns true if Method is an authentication method supported by realm Realm . Otherwise returns false . The fact that method Method is included in the realm's authmethods (See {3link authmethods/1}) is no guarantee that the method will be available for a particular user. The availability is also affected by the source rules defined for the realm and the capabilities of each user e.g. if the user has no password then the password-based authentication methods in this list will not be available.","ref":"bondy_realm.html#is_allowed_authmethod/2","title":"bondy_realm.is_allowed_authmethod/2","type":"function"},{"doc":"Returns true if realm Realm is associated with the SSO Realm identified by uri SSORealmUri`. Otherwise returns `false .","ref":"bondy_realm.html#is_allowed_sso_realm/2","title":"bondy_realm.is_allowed_sso_realm/2","type":"function"},{"doc":"Returns true if realm Realm is a prototype. Otherwise, returns false . **Pre-conditions** * The property prototype_uri MUST be undefined . * This property cannot be set to false once it has been set to true . **Post-conditions** * If this property is true , the prototype_uri cannot be set.","ref":"bondy_realm.html#is_prototype/1","title":"bondy_realm.is_prototype/1","type":"function"},{"doc":"Returns true if security is enabled. Otherwise returns false . If the value is undefined and the realm has a prototype the prototype's value is returned. Otherwise if the realm doesn't have a prototype returns true (default). Security for this realm can be enabled or disabled using the functions enable_security/1 and disable_security/1 respectively. See security_status/1 if you want the security status representation as an atom.","ref":"bondy_realm.html#is_security_enabled/1","title":"bondy_realm.is_security_enabled/1","type":"function"},{"doc":"Returns true if the Realm is a Same Sign-on (SSO) realm. Otherwise returns false . If the value is undefined and the realm has a prototype the prototype's value is returned. Otherwise if the realm doesn't have a prototype returns false .","ref":"bondy_realm.html#is_sso_realm/1","title":"bondy_realm.is_sso_realm/1","type":"function"},{"doc":"Returns true if the property value is inherited from a prototype. Otherwise returns false .","ref":"bondy_realm.html#is_value_inherited/2","title":"bondy_realm.is_value_inherited/2","type":"function"},{"doc":"","ref":"bondy_realm.html#list/0","title":"bondy_realm.list/0","type":"function"},{"doc":"Retrieves the realm identified by Uri from the tuplespace or '{error, not_found}' if it doesn't exist.","ref":"bondy_realm.html#lookup/1","title":"bondy_realm.lookup/1","type":"function"},{"doc":"Returns the password options to be used as default when adding users to this realm. If the options have not been defined returns atom undefined .","ref":"bondy_realm.html#password_opts/1","title":"bondy_realm.password_opts/1","type":"function"},{"doc":"","ref":"bondy_realm.html#private_keys/1","title":"bondy_realm.private_keys/1","type":"function"},{"doc":"Returns the uri of realm Realm prototype if defined. Otherwise returns undefined .","ref":"bondy_realm.html#prototype_uri/1","title":"bondy_realm.prototype_uri/1","type":"function"},{"doc":"","ref":"bondy_realm.html#public_keys/1","title":"bondy_realm.public_keys/1","type":"function"},{"doc":"A util function that returns the security status as an atom. See is_security_enabled/1 .","ref":"bondy_realm.html#security_status/1","title":"bondy_realm.security_status/1","type":"function"},{"doc":"Returns the list of sources belonging to realm Realm . These includes the sources inherited from the prototype (if defined).","ref":"bondy_realm.html#sources/1","title":"bondy_realm.sources/1","type":"function"},{"doc":"Returns the list of sources belonging to realm Realm . These includes the sources inherited from the prototype (if defined).","ref":"bondy_realm.html#sources/2","title":"bondy_realm.sources/2","type":"function"},{"doc":"Returns the same sign on (SSO) realm URI used by the realm. If a value is set, then all authentication and user creation will be done on the the SSO Realm. Groups, permissions and sources are still managed by this realm (or the prototype it inherits from). If the value is undefined and the realm has a prototype the prototype's value is returned. Otherwise if the realm doesn't have a prototype returns undefined .","ref":"bondy_realm.html#sso_realm_uri/1","title":"bondy_realm.sso_realm_uri/1","type":"function"},{"doc":"Returns the external map representation of the realm.","ref":"bondy_realm.html#to_external/1","title":"bondy_realm.to_external/1","type":"function"},{"doc":"","ref":"bondy_realm.html#update/2","title":"bondy_realm.update/2","type":"function"},{"doc":"Returns the URI that identifies the realm Realm .","ref":"bondy_realm.html#uri/1","title":"bondy_realm.uri/1","type":"function"},{"doc":"Returns the list of users belonging to realm Realm . Users are never inherited through prototypes.","ref":"bondy_realm.html#users/1","title":"bondy_realm.users/1","type":"function"},{"doc":"Returns the list of users belonging to realm Realm . Users are never inherited through prototypes.","ref":"bondy_realm.html#users/2","title":"bondy_realm.users/2","type":"function"},{"doc":"","ref":"bondy_realm.html#t:external/0","title":"bondy_realm.external/0","type":"type"},{"doc":"","ref":"bondy_realm.html#t:keyset/0","title":"bondy_realm.keyset/0","type":"type"},{"doc":"","ref":"bondy_realm.html#t:maybe/1","title":"bondy_realm.maybe/1","type":"type"},{"doc":"","ref":"bondy_realm.html#t:t/0","title":"bondy_realm.t/0","type":"opaque"},{"doc":"","ref":"bondy_realm.html#t:uri/0","title":"bondy_realm.uri/0","type":"type"},{"doc":"","ref":"bondy_security.html","title":"bondy_security","type":"module"},{"doc":"","ref":"bondy_security.html#disable/1","title":"bondy_security.disable/1","type":"function"},{"doc":"","ref":"bondy_security.html#enable/1","title":"bondy_security.enable/1","type":"function"},{"doc":"","ref":"bondy_security.html#is_enabled/1","title":"bondy_security.is_enabled/1","type":"function"},{"doc":"","ref":"bondy_security.html#rbac_mod/1","title":"bondy_security.rbac_mod/1","type":"function"},{"doc":"","ref":"bondy_security.html#status/1","title":"bondy_security.status/1","type":"function"},{"doc":"","ref":"bondy_sensitive.html","title":"bondy_sensitive","type":"behaviour"},{"doc":"Returns true is module Mod conforms with this behaviour.","ref":"bondy_sensitive.html#conforms/1","title":"bondy_sensitive.conforms/1","type":"function"},{"doc":"","ref":"bondy_sensitive.html#c:format_status/2","title":"bondy_sensitive.format_status/2","type":"callback"},{"doc":"Formalises and extends the use of the callback format_status/2 gen_server callback ([See documentation here](https://erlang.org/doc/man/gen_server.html#Module:format_status-2)) to modules. gen_server:format_status/2 is called by a gen_server process in the following situations: * One of sys:get_status/1,2 is invoked to get the gen_server status. Opt is set to the atom normal. * The gen_server process terminates abnormally and logs an error. Opt is set to the atom terminate. A callback module managing the status for or on-behalf of a gen_server porocess can use this function to change the return value. State is the internal state of the gen_server process. The function is to return Status, a term that changes the details of the current state State and status of the gen_server process. There are no restrictions on the form Status can take.","ref":"bondy_sensitive.html#format_status/3","title":"bondy_sensitive.format_status/3","type":"function"},{"doc":"","ref":"bondy_sensitive.html#raise/3","title":"bondy_sensitive.raise/3","type":"function"},{"doc":"","ref":"bondy_sensitive.html#unwrap/1","title":"bondy_sensitive.unwrap/1","type":"function"},{"doc":"","ref":"bondy_sensitive.html#wrap/1","title":"bondy_sensitive.wrap/1","type":"function"},{"doc":"","ref":"bondy_sensitive.html#t:sensitive/0","title":"bondy_sensitive.sensitive/0","type":"type"},{"doc":"This module provides the behaviour to be implemented by the authentication methods used by Bondy. The module provides the functions required to setup an authentication context, compute a challenge (in the case of challenge-response methods and authenticate a user based on the selected method out of the available methods offered by the Realm and restricted by the access control system and the user's password capabilities.","ref":"bondy_auth.html","title":"bondy_auth","type":"behaviour"},{"doc":"","ref":"bondy_auth.html#authenticate/4","title":"bondy_auth.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth.html#c:authenticate/4","title":"bondy_auth.authenticate/4","type":"callback"},{"doc":"","ref":"bondy_auth.html#available_methods/1","title":"bondy_auth.available_methods/1","type":"function"},{"doc":"Returns the sublist of List containing only the available authentication methods that can be used with user User in realm Realm when connecting from the current IP Address.","ref":"bondy_auth.html#available_methods/2","title":"bondy_auth.available_methods/2","type":"function"},{"doc":"","ref":"bondy_auth.html#challenge/3","title":"bondy_auth.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth.html#c:challenge/3","title":"bondy_auth.challenge/3","type":"callback"},{"doc":"","ref":"bondy_auth.html#conn_ip/1","title":"bondy_auth.conn_ip/1","type":"function"},{"doc":"","ref":"bondy_auth.html#format_status/2","title":"bondy_auth.format_status/2","type":"function"},{"doc":"","ref":"bondy_auth.html#c:init/1","title":"bondy_auth.init/1","type":"callback"},{"doc":"","ref":"bondy_auth.html#init/5","title":"bondy_auth.init/5","type":"function"},{"doc":"","ref":"bondy_auth.html#method/1","title":"bondy_auth.method/1","type":"function"},{"doc":"","ref":"bondy_auth.html#method_info/0","title":"bondy_auth.method_info/0","type":"function"},{"doc":"","ref":"bondy_auth.html#method_info/1","title":"bondy_auth.method_info/1","type":"function"},{"doc":"","ref":"bondy_auth.html#methods/0","title":"bondy_auth.methods/0","type":"function"},{"doc":"","ref":"bondy_auth.html#provider/1","title":"bondy_auth.provider/1","type":"function"},{"doc":"","ref":"bondy_auth.html#realm_uri/1","title":"bondy_auth.realm_uri/1","type":"function"},{"doc":"","ref":"bondy_auth.html#c:requirements/0","title":"bondy_auth.requirements/0","type":"callback"},{"doc":"","ref":"bondy_auth.html#role/1","title":"bondy_auth.role/1","type":"function"},{"doc":"","ref":"bondy_auth.html#roles/1","title":"bondy_auth.roles/1","type":"function"},{"doc":"","ref":"bondy_auth.html#session_id/1","title":"bondy_auth.session_id/1","type":"function"},{"doc":"","ref":"bondy_auth.html#user/1","title":"bondy_auth.user/1","type":"function"},{"doc":"","ref":"bondy_auth.html#user_id/1","title":"bondy_auth.user_id/1","type":"function"},{"doc":"","ref":"bondy_auth.html#t:context/0","title":"bondy_auth.context/0","type":"type"},{"doc":"","ref":"bondy_auth.html#t:id/0","title":"bondy_auth.id/0","type":"type"},{"doc":"","ref":"bondy_auth.html#t:requirements/0","title":"bondy_auth.requirements/0","type":"type"},{"doc":"","ref":"bondy_auth.html#t:uri/0","title":"bondy_auth.uri/0","type":"type"},{"doc":"This module implements the bondy_auth behaviour to allow access to clients which connect without credentials assigning them the 'anonymous' group.","ref":"bondy_auth_anonymous.html","title":"bondy_auth_anonymous","type":"module"},{"doc":"","ref":"bondy_auth_anonymous.html#authenticate/4","title":"bondy_auth_anonymous.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_anonymous.html#challenge/3","title":"bondy_auth_anonymous.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_anonymous.html#init/1","title":"bondy_auth_anonymous.init/1","type":"function"},{"doc":"","ref":"bondy_auth_anonymous.html#requirements/0","title":"bondy_auth_anonymous.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_anonymous.html#t:state/0","title":"bondy_auth_anonymous.state/0","type":"type"},{"doc":"","ref":"bondy_auth_oauth2.html","title":"bondy_auth_oauth2","type":"module"},{"doc":"","ref":"bondy_auth_oauth2.html#authenticate/4","title":"bondy_auth_oauth2.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_oauth2.html#challenge/3","title":"bondy_auth_oauth2.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_oauth2.html#init/1","title":"bondy_auth_oauth2.init/1","type":"function"},{"doc":"","ref":"bondy_auth_oauth2.html#requirements/0","title":"bondy_auth_oauth2.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_oauth2.html#t:state/0","title":"bondy_auth_oauth2.state/0","type":"type"},{"doc":"","ref":"bondy_auth_password.html","title":"bondy_auth_password","type":"module"},{"doc":"","ref":"bondy_auth_password.html#authenticate/4","title":"bondy_auth_password.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_password.html#challenge/3","title":"bondy_auth_password.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_password.html#init/1","title":"bondy_auth_password.init/1","type":"function"},{"doc":"","ref":"bondy_auth_password.html#requirements/0","title":"bondy_auth_password.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_password.html#t:state/0","title":"bondy_auth_password.state/0","type":"type"},{"doc":"","ref":"bondy_auth_ticket.html","title":"bondy_auth_ticket","type":"module"},{"doc":"","ref":"bondy_auth_ticket.html#authenticate/4","title":"bondy_auth_ticket.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_ticket.html#challenge/3","title":"bondy_auth_ticket.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_ticket.html#init/1","title":"bondy_auth_ticket.init/1","type":"function"},{"doc":"","ref":"bondy_auth_ticket.html#requirements/0","title":"bondy_auth_ticket.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_ticket.html#t:state/0","title":"bondy_auth_ticket.state/0","type":"type"},{"doc":"","ref":"bondy_auth_trust.html","title":"bondy_auth_trust","type":"module"},{"doc":"","ref":"bondy_auth_trust.html#authenticate/4","title":"bondy_auth_trust.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_trust.html#challenge/3","title":"bondy_auth_trust.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_trust.html#init/1","title":"bondy_auth_trust.init/1","type":"function"},{"doc":"","ref":"bondy_auth_trust.html#requirements/0","title":"bondy_auth_trust.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_trust.html#t:state/0","title":"bondy_auth_trust.state/0","type":"type"},{"doc":"","ref":"bondy_auth_wamp_cra.html","title":"bondy_auth_wamp_cra","type":"module"},{"doc":"","ref":"bondy_auth_wamp_cra.html#authenticate/4","title":"bondy_auth_wamp_cra.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cra.html#challenge/3","title":"bondy_auth_wamp_cra.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cra.html#init/1","title":"bondy_auth_wamp_cra.init/1","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cra.html#requirements/0","title":"bondy_auth_wamp_cra.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cra.html#t:challenge_error/0","title":"bondy_auth_wamp_cra.challenge_error/0","type":"type"},{"doc":"","ref":"bondy_auth_wamp_cra.html#t:state/0","title":"bondy_auth_wamp_cra.state/0","type":"type"},{"doc":"## References * [BrowserAuth](http://www.browserauth.net) * [Binding Security Tokens to TLS Channels](https://www.ietf.org/proceedings/90/slides/slides-90-uta-0.pdf)","ref":"bondy_auth_wamp_cryptosign.html","title":"bondy_auth_wamp_cryptosign","type":"module"},{"doc":"","ref":"bondy_auth_wamp_cryptosign.html#authenticate/4","title":"bondy_auth_wamp_cryptosign.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cryptosign.html#challenge/3","title":"bondy_auth_wamp_cryptosign.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cryptosign.html#init/1","title":"bondy_auth_wamp_cryptosign.init/1","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cryptosign.html#requirements/0","title":"bondy_auth_wamp_cryptosign.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_wamp_cryptosign.html#t:challenge_error/0","title":"bondy_auth_wamp_cryptosign.challenge_error/0","type":"type"},{"doc":"","ref":"bondy_auth_wamp_cryptosign.html#t:state/0","title":"bondy_auth_wamp_cryptosign.state/0","type":"type"},{"doc":"","ref":"bondy_auth_wamp_scram.html","title":"bondy_auth_wamp_scram","type":"module"},{"doc":"","ref":"bondy_auth_wamp_scram.html#authenticate/4","title":"bondy_auth_wamp_scram.authenticate/4","type":"function"},{"doc":"","ref":"bondy_auth_wamp_scram.html#challenge/3","title":"bondy_auth_wamp_scram.challenge/3","type":"function"},{"doc":"","ref":"bondy_auth_wamp_scram.html#init/1","title":"bondy_auth_wamp_scram.init/1","type":"function"},{"doc":"","ref":"bondy_auth_wamp_scram.html#requirements/0","title":"bondy_auth_wamp_scram.requirements/0","type":"function"},{"doc":"","ref":"bondy_auth_wamp_scram.html#t:state/0","title":"bondy_auth_wamp_scram.state/0","type":"type"},{"doc":"The following table documents the storage layout in plum_db of the token data and its indices: |Datum|Prefix|Key|Value| |---|---|---|---| |Refresh Token|{oauth2_refresh_tokens, Realm ++ &quot;,&quot; ++ Issuer}|Token| TokenData| |Refresh Token Index|{oauth2_refresh_tokens, Realm ++ &quot;,&quot; ++ Issuer}|Token|Issuer| |Refresh Token Index|{oauth2_refresh_tokens, Realm ++ &quot;,&quot; ++ Issuer ++ &quot;,&quot; ++ Username}|DeviceId| Token|","ref":"bondy_oauth2.html","title":"bondy_oauth2","type":"module"},{"doc":"","ref":"bondy_oauth2.html#decode_jwt/1","title":"bondy_oauth2.decode_jwt/1","type":"function"},{"doc":"Generates an access token and a refresh token. The access token is a JWT whereas the refresh token is a binary. The function stores the refresh token in the store and creates a number of store indices.","ref":"bondy_oauth2.html#issue_token/6","title":"bondy_oauth2.issue_token/6","type":"function"},{"doc":"Returns the timestamp for the token data.","ref":"bondy_oauth2.html#issued_at/1","title":"bondy_oauth2.issued_at/1","type":"function"},{"doc":"Returns the issuer a.k.a. ClientId of the token data.","ref":"bondy_oauth2.html#issuer/1","title":"bondy_oauth2.issuer/1","type":"function"},{"doc":"Returns the data token_data() associated with Token or the tuple {error, not_found} .","ref":"bondy_oauth2.html#lookup_token/3","title":"bondy_oauth2.lookup_token/3","type":"function"},{"doc":"Rebuilds refresh_token indices. This function is used for db maintenance.","ref":"bondy_oauth2.html#rebuild_token_indices/2","title":"bondy_oauth2.rebuild_token_indices/2","type":"function"},{"doc":"After refreshing a token, the previous refresh token will be revoked","ref":"bondy_oauth2.html#refresh_token/3","title":"bondy_oauth2.refresh_token/3","type":"function"},{"doc":"Removes all refresh tokens whose user has been removed. This function is used for db maintenance.","ref":"bondy_oauth2.html#revoke_dangling_tokens/2","title":"bondy_oauth2.revoke_dangling_tokens/2","type":"function"},{"doc":"Removes a refresh token from store using an index to match the function arguments. This also removes all store indices.","ref":"bondy_oauth2.html#revoke_refresh_token/3","title":"bondy_oauth2.revoke_refresh_token/3","type":"function"},{"doc":"Removes a refresh token from store using an index to match the function arguments. This also removes all store indices.","ref":"bondy_oauth2.html#revoke_refresh_token/4","title":"bondy_oauth2.revoke_refresh_token/4","type":"function"},{"doc":"","ref":"bondy_oauth2.html#revoke_refresh_tokens/2","title":"bondy_oauth2.revoke_refresh_tokens/2","type":"function"},{"doc":"","ref":"bondy_oauth2.html#revoke_refresh_tokens/3","title":"bondy_oauth2.revoke_refresh_tokens/3","type":"function"},{"doc":"","ref":"bondy_oauth2.html#revoke_token/4","title":"bondy_oauth2.revoke_token/4","type":"function"},{"doc":"","ref":"bondy_oauth2.html#revoke_token/5","title":"bondy_oauth2.revoke_token/5","type":"function"},{"doc":"","ref":"bondy_oauth2.html#revoke_tokens/3","title":"bondy_oauth2.revoke_tokens/3","type":"function"},{"doc":"","ref":"bondy_oauth2.html#revoke_tokens/4","title":"bondy_oauth2.revoke_tokens/4","type":"function"},{"doc":"","ref":"bondy_oauth2.html#verify_jwt/2","title":"bondy_oauth2.verify_jwt/2","type":"function"},{"doc":"","ref":"bondy_oauth2.html#verify_jwt/3","title":"bondy_oauth2.verify_jwt/3","type":"function"},{"doc":"","ref":"bondy_oauth2.html#t:error/0","title":"bondy_oauth2.error/0","type":"type"},{"doc":"","ref":"bondy_oauth2.html#t:grant_type/0","title":"bondy_oauth2.grant_type/0","type":"type"},{"doc":"","ref":"bondy_oauth2.html#t:token_data/0","title":"bondy_oauth2.token_data/0","type":"type"},{"doc":"","ref":"bondy_oauth2.html#t:token_type/0","title":"bondy_oauth2.token_type/0","type":"type"},{"doc":"A Password object stores a fixed size salted hash of a user's password and all the metadata required to re-compute the salted hash for comparing a user input and for implementing several password-based authentication protocols. At the moment this module supports two protocols: * WAMP Challenge-Response Authentication (CRA), and * Salted Challenge-Response Authentication Mechanism (SCRAM)","ref":"bondy_password.html","title":"bondy_password","type":"module"},{"doc":"","ref":"bondy_password.html#data/1","title":"bondy_password.data/1","type":"function"},{"doc":"","ref":"bondy_password.html#default_opts/0","title":"bondy_password.default_opts/0","type":"function"},{"doc":"","ref":"bondy_password.html#default_opts/1","title":"bondy_password.default_opts/1","type":"function"},{"doc":"","ref":"bondy_password.html#from_term/1","title":"bondy_password.from_term/1","type":"function"},{"doc":"Creates a functional object that takes a single argument Opts :: opts() that when applied calls new(Password, Opts) . This is used for two reasons: 1. to encapsulate the string value of the password avoiding exposure i.e. via logs; and 2. To delay the processing of the password until the value for Opts is known. Password must be a binary with a minimum size of 6 bytes and a maximum size of 256 bytes, otherwise fails with error invalid_password . Example: erlang &gt; F = bondy_password : future ( &lt;&lt; &quot;MyBestKeptSecret&quot; &gt;&gt; ) . &gt; bondy_password : new ( F , Opts ) .","ref":"bondy_password.html#future/1","title":"bondy_password.future/1","type":"function"},{"doc":"","ref":"bondy_password.html#hash_length/1","title":"bondy_password.hash_length/1","type":"function"},{"doc":"","ref":"bondy_password.html#is_type/1","title":"bondy_password.is_type/1","type":"function"},{"doc":"Hash a plaintext password Password and the protocol and protocol params defined in options Opts , returning t(). Password must be a binary with a minimum size of 6 bytes and a maximum size of 256 bytes, otherwise fails with error invalid_password .","ref":"bondy_password.html#new/2","title":"bondy_password.new/2","type":"function"},{"doc":"","ref":"bondy_password.html#opts_validator/0","title":"bondy_password.opts_validator/0","type":"function"},{"doc":"","ref":"bondy_password.html#params/1","title":"bondy_password.params/1","type":"function"},{"doc":"","ref":"bondy_password.html#protocol/1","title":"bondy_password.protocol/1","type":"function"},{"doc":"Returns a new password object from String applying the same protocol and params found in password PWD .","ref":"bondy_password.html#replace/2","title":"bondy_password.replace/2","type":"function"},{"doc":"","ref":"bondy_password.html#upgrade/2","title":"bondy_password.upgrade/2","type":"function"},{"doc":"","ref":"bondy_password.html#verify_hash/2","title":"bondy_password.verify_hash/2","type":"function"},{"doc":"","ref":"bondy_password.html#verify_string/2","title":"bondy_password.verify_string/2","type":"function"},{"doc":"","ref":"bondy_password.html#t:data/0","title":"bondy_password.data/0","type":"type"},{"doc":"","ref":"bondy_password.html#t:future/0","title":"bondy_password.future/0","type":"type"},{"doc":"","ref":"bondy_password.html#t:opts/0","title":"bondy_password.opts/0","type":"type"},{"doc":"","ref":"bondy_password.html#t:params/0","title":"bondy_password.params/0","type":"type"},{"doc":"","ref":"bondy_password.html#t:protocol/0","title":"bondy_password.protocol/0","type":"type"},{"doc":"","ref":"bondy_password.html#t:t/0","title":"bondy_password.t/0","type":"type"},{"doc":"","ref":"bondy_password_cra.html","title":"bondy_password_cra","type":"module"},{"doc":"","ref":"bondy_password_cra.html#compare/2","title":"bondy_password_cra.compare/2","type":"function"},{"doc":"","ref":"bondy_password_cra.html#hash_function/0","title":"bondy_password_cra.hash_function/0","type":"function"},{"doc":"","ref":"bondy_password_cra.html#hash_length/0","title":"bondy_password_cra.hash_length/0","type":"function"},{"doc":"","ref":"bondy_password_cra.html#new/3","title":"bondy_password_cra.new/3","type":"function"},{"doc":"A base64 encoded 128-bit random value.","ref":"bondy_password_cra.html#nonce/0","title":"bondy_password_cra.nonce/0","type":"function"},{"doc":"","ref":"bondy_password_cra.html#nonce_length/0","title":"bondy_password_cra.nonce_length/0","type":"function"},{"doc":"A base64 encoded 128-bit random value.","ref":"bondy_password_cra.html#salt/0","title":"bondy_password_cra.salt/0","type":"function"},{"doc":"","ref":"bondy_password_cra.html#salt_length/0","title":"bondy_password_cra.salt_length/0","type":"function"},{"doc":"Returns the 64 encoded salted password.","ref":"bondy_password_cra.html#salted_password/3","title":"bondy_password_cra.salted_password/3","type":"function"},{"doc":"","ref":"bondy_password_cra.html#validate_params/1","title":"bondy_password_cra.validate_params/1","type":"function"},{"doc":"","ref":"bondy_password_cra.html#verify_string/3","title":"bondy_password_cra.verify_string/3","type":"function"},{"doc":"","ref":"bondy_password_cra.html#t:data/0","title":"bondy_password_cra.data/0","type":"type"},{"doc":"","ref":"bondy_password_cra.html#t:hash_fun/0","title":"bondy_password_cra.hash_fun/0","type":"type"},{"doc":"","ref":"bondy_password_cra.html#t:kdf/0","title":"bondy_password_cra.kdf/0","type":"type"},{"doc":"","ref":"bondy_password_cra.html#t:params/0","title":"bondy_password_cra.params/0","type":"type"},{"doc":"This module provides the functions and algorithms to operate with the Salted Challenge-Reponse Mechanism data structures.","ref":"bondy_password_scram.html","title":"bondy_password_scram","type":"module"},{"doc":"","ref":"bondy_password_scram.html#auth_message/5","title":"bondy_password_scram.auth_message/5","type":"function"},{"doc":"","ref":"bondy_password_scram.html#auth_message/7","title":"bondy_password_scram.auth_message/7","type":"function"},{"doc":"","ref":"bondy_password_scram.html#check_proof/4","title":"bondy_password_scram.check_proof/4","type":"function"},{"doc":"","ref":"bondy_password_scram.html#client_key/1","title":"bondy_password_scram.client_key/1","type":"function"},{"doc":"computes the client proof out of the client key Key and the client signature Signature . See client_key/2 and client_signature/2 respectively.","ref":"bondy_password_scram.html#client_proof/2","title":"bondy_password_scram.client_proof/2","type":"function"},{"doc":"","ref":"bondy_password_scram.html#client_signature/2","title":"bondy_password_scram.client_signature/2","type":"function"},{"doc":"","ref":"bondy_password_scram.html#hash_function/0","title":"bondy_password_scram.hash_function/0","type":"function"},{"doc":"","ref":"bondy_password_scram.html#hash_length/0","title":"bondy_password_scram.hash_length/0","type":"function"},{"doc":"","ref":"bondy_password_scram.html#new/3","title":"bondy_password_scram.new/3","type":"function"},{"doc":"","ref":"bondy_password_scram.html#recovered_client_key/2","title":"bondy_password_scram.recovered_client_key/2","type":"function"},{"doc":"","ref":"bondy_password_scram.html#recovered_stored_key/1","title":"bondy_password_scram.recovered_stored_key/1","type":"function"},{"doc":"","ref":"bondy_password_scram.html#salt/0","title":"bondy_password_scram.salt/0","type":"function"},{"doc":"","ref":"bondy_password_scram.html#salt_length/0","title":"bondy_password_scram.salt_length/0","type":"function"},{"doc":"","ref":"bondy_password_scram.html#salted_password/3","title":"bondy_password_scram.salted_password/3","type":"function"},{"doc":"","ref":"bondy_password_scram.html#server_key/1","title":"bondy_password_scram.server_key/1","type":"function"},{"doc":"","ref":"bondy_password_scram.html#server_nonce/1","title":"bondy_password_scram.server_nonce/1","type":"function"},{"doc":"","ref":"bondy_password_scram.html#server_signature/2","title":"bondy_password_scram.server_signature/2","type":"function"},{"doc":"","ref":"bondy_password_scram.html#stored_key/1","title":"bondy_password_scram.stored_key/1","type":"function"},{"doc":"","ref":"bondy_password_scram.html#validate_params/1","title":"bondy_password_scram.validate_params/1","type":"function"},{"doc":"","ref":"bondy_password_scram.html#verify_string/3","title":"bondy_password_scram.verify_string/3","type":"function"},{"doc":"","ref":"bondy_password_scram.html#t:data/0","title":"bondy_password_scram.data/0","type":"type"},{"doc":"","ref":"bondy_password_scram.html#t:hash_fun/0","title":"bondy_password_scram.hash_fun/0","type":"type"},{"doc":"","ref":"bondy_password_scram.html#t:kdf/0","title":"bondy_password_scram.kdf/0","type":"type"},{"doc":"","ref":"bondy_password_scram.html#t:params/0","title":"bondy_password_scram.params/0","type":"type"},{"doc":"This module implements the functions to issue and manage authentication tickets. An authentication ticket (**ticket**) is a signed (and possibly encrypted) assertion of a user's identity, that a client can use to authenticate the user without the need to ask it to re-enter its credentials. Tickets MUST be issued by a session that was opened using an authentication method that is neither ticket nor anonymous authentication. ### Claims * id: provides a unique identifier for the ticket. * issued_by: identifies the principal that issued the ticket. Most of the time this is an application identifier (a.k.asl username or client_id) but sometimes can be the WAMP session's username (a.k.a authid ). * authid: identifies the principal that is the subject of the ticket. The Claims in a ticket are normally statements. This is the WAMP session's username (a.k.a authid ). * authrealm: identifies the recipients that the ticket is intended for. The value is RealmUri . * expires_at: identifies the expiration time on or after which the ticket MUST NOT be accepted for processing. The processing of the &quot;exp&quot; claim requires that the current date/time MUST be before the expiration date/ time listed in the &quot;exp&quot; claim. Bondy considers a small leeway of 2 mins by default. * issued_at: identifies the time at which the ticket was issued. This claim can be used to determine the age of the ticket. Its value is a timestamp in seconds. * issued_on: the bondy nodename in which the ticket was issued. * scope: the scope of the ticket, consisting of * realm: If undefined the ticket grants access to all realms the user has access to by the authrealm (an SSO realm). Otherwise, the value is the realm this ticket is valid on. ## Claims Storage Claims for a ticket are stored in PlumDB using the prefix {bondy_ticket, Suffix :: binary()} where Suffix is the concatenation of the authentication realm's URI and the user's username (a.k.a authid ) and a key which is derived by the ticket's scope. The scope itself is the result of the combination of the different options provided by the issue/2 function. Thes decision to use this key as opposed to the ticket's unique identifier is to bounds the number of tickets a user can have at any point in time in order to reduce data storage and traffic. ### Ticket Scopes A ticket can be issued using different scopes. The scope is determined based on the options used to issue the ticket. #### Local scope The ticket was issued with allow_sso option set to false or when set to true the user did not have SSO credentials, and the option client_ticket was not provided. The ticket can be used to authenticate on the session's realm only. **Authorization** To be able to issue this ticket, the session must have been granted the permission &lt;&lt;&quot;bondy.issue&quot;&gt;&gt; on the &lt;&lt;&quot;bondy.ticket.scope.local&quot;&gt;&gt; resource. #### SSO Scope The ticket was issued with allow_sso option set to true and the user has SSO credentials, and the option client_ticket was not provided. The ticket can be used to authenticate on any realm the user has access to through SSO. **Authorization** To be able to issue this ticket, the session must have been granted the permission &lt;&lt;&quot;bondy.issue&quot;&gt;&gt; on the &lt;&lt;&quot;bondy.ticket.scope.sso&quot;&gt;&gt; resource. #### Client-Local scope The ticket was issued with allow_sso option set to false or when set to true the user did not have SSO credentials, and the option client_ticket was provided having a valid ticket issued by a client (a local or sso ticket). The ticket can be used to authenticate on the session's realm only. **Authorization** To be able to issue this ticket, the session must have been granted the permission &lt;&lt;&quot;bondy.issue&quot;&gt;&gt; on the &lt;&lt;&quot;bondy.ticket.scope.client_local&quot;&gt;&gt; resource. #### Client-SSO scope The ticket was issued with allow_sso option set to true and the user has SSO credentials, and the option client_ticket was provided having a valid ticket issued by a client ( a local or sso ticket). The ticket can be used to authenticate on any realm the user has access to through SSO. **Authorization** To be able to issue this ticket, the session must have been granted the permission &lt;&lt;&quot;bondy.issue&quot;&gt;&gt; on the &lt;&lt;&quot;bondy.ticket.scope.client_local&quot;&gt;&gt; resource. ### Scope Summary * uri() in the following table refers to the scope realm (not the Authentication realm which is used in the prefix) |SCOPE|Allow SSO|Client Ticket|Client Instance ID|Key|Value| |---|---|---|---|---|---| |Local|no|no|no| uri() | claims() | |SSO|yes|no|no| username() | claims() | |Client-Local|no|yes|no| client_id() | [{uri(), claims()}] | |Client-Local|no|yes|yes| client_id() | [{{uri(), instance_id()}, claims()}] | |Client-SSO|yes|yes|no| client_id() | [{undefined, claims()}] | |Client-SSO|yes|yes|yes| client_id() | [{{undefined, instance_id()}, claims()}] | ### Permissions Summary Issuing tickets requires the user to be granted certain permissions beyond the WAMP permission required to call the procedures. |Scope|Permission|Resource| |---|---|---| |Local| bondy.issue | bondy.ticket.scope.local | |SSO| bondy.issue | bondy.ticket.scope.sso | |Client-Local| bondy.issue | bondy.ticket.scope.client_local | |Client-SSO| bondy.issue | bondy.ticket.scope.client_sso |","ref":"bondy_ticket.html","title":"bondy_ticket","type":"module"},{"doc":"Issues a ticket to be used with the WAMP Ticket authentication method. The function stores the ticket claims data and replicates it across all nodes in the cluster. The session Session must have been opened using an authentication method that is neither ticket nor anonymous authentication. The function takes an options map opts() that can contain the following keys: * expiry_time_secs : the expiration time on or after which the ticket MUST NOT be accepted for processing. This is a request that might not be honoured by the router as it depends on the router configuration, so the returned value might defer. To issue a client-scoped ticket, either the option client_ticket or client_id must be present. The client_ticket option takes a valid ticket issued by a different user (normally a client). Otherwise the call will return the error tuple with reason invalid_request .","ref":"bondy_ticket.html#issue/2","title":"bondy_ticket.issue/2","type":"function"},{"doc":"","ref":"bondy_ticket.html#lookup/3","title":"bondy_ticket.lookup/3","type":"function"},{"doc":"","ref":"bondy_ticket.html#revoke/1","title":"bondy_ticket.revoke/1","type":"function"},{"doc":"Revokes all tickets issued to user with Username in realm RealmUri . Notice that the ticket could have been issued by itself or by a client application.","ref":"bondy_ticket.html#revoke_all/2","title":"bondy_ticket.revoke_all/2","type":"function"},{"doc":"Revokes all tickets issued to user with Username in realm RealmUri matching the scope Scope .","ref":"bondy_ticket.html#revoke_all/3","title":"bondy_ticket.revoke_all/3","type":"function"},{"doc":"","ref":"bondy_ticket.html#verify/1","title":"bondy_ticket.verify/1","type":"function"},{"doc":"","ref":"bondy_ticket.html#t:authid/0","title":"bondy_ticket.authid/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:claims/0","title":"bondy_ticket.claims/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:issue_error/0","title":"bondy_ticket.issue_error/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:maybe/1","title":"bondy_ticket.maybe/1","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:opts/0","title":"bondy_ticket.opts/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:scope/0","title":"bondy_ticket.scope/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:t/0","title":"bondy_ticket.t/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:ticket_id/0","title":"bondy_ticket.ticket_id/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:uri/0","title":"bondy_ticket.uri/0","type":"type"},{"doc":"","ref":"bondy_ticket.html#t:verify_opts/0","title":"bondy_ticket.verify_opts/0","type":"type"},{"doc":"","ref":"bondy_cidr.html","title":"bondy_cidr","type":"module"},{"doc":"returns the real bottom of a netmask. Eg if 192.168.1.1/16 is provided, return 192.168.0.0/16","ref":"bondy_cidr.html#anchor_mask/1","title":"bondy_cidr.anchor_mask/1","type":"function"},{"doc":"Returns true if term Term is a valid CIDR notation representation in erlang. Otherwise returns false .","ref":"bondy_cidr.html#is_type/1","title":"bondy_cidr.is_type/1","type":"function"},{"doc":"","ref":"bondy_cidr.html#mask/1","title":"bondy_cidr.mask/1","type":"function"},{"doc":"Returns true if Left and Right are CIDR notation representations in erlang and they match. Otherwise returns false.","ref":"bondy_cidr.html#match/2","title":"bondy_cidr.match/2","type":"function"},{"doc":"Parses a binary string representation of a CIDR notation and returns its erlang representation as a tuple t() . Fails with a badarg exception if the binary Bin is not a valid input.","ref":"bondy_cidr.html#parse/1","title":"bondy_cidr.parse/1","type":"function"},{"doc":"","ref":"bondy_cidr.html#t:t/0","title":"bondy_cidr.t/0","type":"type"},{"doc":"### WAMP Permissions: * &quot;wamp.register&quot; * &quot;wamp.unregister&quot; * &quot;wamp.call&quot; * &quot;wamp.cancel&quot; * &quot;wamp.subscribe&quot; * &quot;wamp.unsubscribe&quot; * &quot;wamp.publish&quot; * &quot;wamp.disclose_caller&quot; * &quot;wamp.disclose_publisher&quot; ### Reserved Names Reserved names are role (user or group) or resource names that act as keywords in RBAC in either binary or atom forms and thus cannot be used. The following is the list of all reserved names. * all - group * anonymous - the anonymous user and group * any - use to denote a resource * from - use to denote a resource * on - not used * to - use to denote a resource %% **Note:** Usernames and group names are stored in lower case. All functions in this module are case sensitice so when using the functions in this module make sure the inputs you provide are in lowercase to. If you need to convert your input to lowercase use string:casefold/1 .","ref":"bondy_rbac.html","title":"bondy_rbac","type":"module"},{"doc":"Returns 'ok' or an exception.","ref":"bondy_rbac.html#authorize/2","title":"bondy_rbac.authorize/2","type":"function"},{"doc":"Returns 'ok' or an exception.","ref":"bondy_rbac.html#authorize/3","title":"bondy_rbac.authorize/3","type":"function"},{"doc":"","ref":"bondy_rbac.html#get_anonymous_context/1","title":"bondy_rbac.get_anonymous_context/1","type":"function"},{"doc":"","ref":"bondy_rbac.html#get_anonymous_context/2","title":"bondy_rbac.get_anonymous_context/2","type":"function"},{"doc":"","ref":"bondy_rbac.html#get_context/1","title":"bondy_rbac.get_context/1","type":"function"},{"doc":"Contexts are only valid until the GRANT epoch changes, and it will change whenever a GRANT or a REVOKE is performed. This is a little coarse grained right now, but it'll do for the moment.","ref":"bondy_rbac.html#get_context/2","title":"bondy_rbac.get_context/2","type":"function"},{"doc":"**Use cases** grant &lt; permissions &gt; on any to all | { &lt; user &gt; | &lt; group &gt; [ , . . . ] } grant &lt; permissions &gt; on { &lt; resource &gt; , &lt; exact | prefix | wildcard &gt; } to all | { &lt; user &gt; | &lt; group &gt; [ , . . . ] }","ref":"bondy_rbac.html#grant/2","title":"bondy_rbac.grant/2","type":"function"},{"doc":"Returns the local grants assigned in realm RealmUri . This function does not use protypical inheritance.","ref":"bondy_rbac.html#grants/2","title":"bondy_rbac.grants/2","type":"function"},{"doc":"","ref":"bondy_rbac.html#grants/3","title":"bondy_rbac.grants/3","type":"function"},{"doc":"","ref":"bondy_rbac.html#group_grants/2","title":"bondy_rbac.group_grants/2","type":"function"},{"doc":"Returns true if term is a reserved name in binary or atom form. **Reserved names:** * all * anonymous * any * from * on * to","ref":"bondy_rbac.html#is_reserved_name/1","title":"bondy_rbac.is_reserved_name/1","type":"function"},{"doc":"Normalizes the utf8 binary Bin into a Normalized Form of compatibly equivalent Decomposed characters according to the Unicode standard and converts it to a case-agnostic comparable string.","ref":"bondy_rbac.html#normalize_name/1","title":"bondy_rbac.normalize_name/1","type":"function"},{"doc":"","ref":"bondy_rbac.html#refresh_context/1","title":"bondy_rbac.refresh_context/1","type":"function"},{"doc":"Validates the data for a grant or revoke request.","ref":"bondy_rbac.html#request/1","title":"bondy_rbac.request/1","type":"function"},{"doc":"","ref":"bondy_rbac.html#revoke/2","title":"bondy_rbac.revoke/2","type":"function"},{"doc":"","ref":"bondy_rbac.html#revoke_group/2","title":"bondy_rbac.revoke_group/2","type":"function"},{"doc":"","ref":"bondy_rbac.html#revoke_user/2","title":"bondy_rbac.revoke_user/2","type":"function"},{"doc":"","ref":"bondy_rbac.html#user_grants/2","title":"bondy_rbac.user_grants/2","type":"function"},{"doc":"","ref":"bondy_rbac.html#t:context/0","title":"bondy_rbac.context/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:grant/0","title":"bondy_rbac.grant/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:normalised_resource/0","title":"bondy_rbac.normalised_resource/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:permission/0","title":"bondy_rbac.permission/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:request/0","title":"bondy_rbac.request/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:request_data/0","title":"bondy_rbac.request_data/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:resource/0","title":"bondy_rbac.resource/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:rolename/0","title":"bondy_rbac.rolename/0","type":"type"},{"doc":"","ref":"bondy_rbac.html#t:uri/0","title":"bondy_rbac.uri/0","type":"type"},{"doc":"**Note:** Usernames and group names are stored in lower case. All functions in this module are case sensitice so when using the functions in this module make sure the inputs you provide are in lowercase to. If you need to convert your input to lowercase use string:casefold/1 .","ref":"bondy_rbac_group.html","title":"bondy_rbac_group","type":"module"},{"doc":"","ref":"bondy_rbac_group.html#add/2","title":"bondy_rbac_group.add/2","type":"function"},{"doc":"Adds group named Groupname to gropus Groups in realm with uri RealmUri .","ref":"bondy_rbac_group.html#add_group/3","title":"bondy_rbac_group.add_group/3","type":"function"},{"doc":"Adds groups Groupnames to gropus Groups in realm with uri RealmUri .","ref":"bondy_rbac_group.html#add_groups/3","title":"bondy_rbac_group.add_groups/3","type":"function"},{"doc":"Adds a new user or updates an existing one. This change is globally replicated.","ref":"bondy_rbac_group.html#add_or_update/2","title":"bondy_rbac_group.add_or_update/2","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#exists/2","title":"bondy_rbac_group.exists/2","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#fetch/2","title":"bondy_rbac_group.fetch/2","type":"function"},{"doc":"Returns the group names the user User is member of.","ref":"bondy_rbac_group.html#groups/1","title":"bondy_rbac_group.groups/1","type":"function"},{"doc":"Returns true if group Group is a member of the group named Name . Otherwise returns false .","ref":"bondy_rbac_group.html#is_member/2","title":"bondy_rbac_group.is_member/2","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#list/1","title":"bondy_rbac_group.list/1","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#list/2","title":"bondy_rbac_group.list/2","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#lookup/2","title":"bondy_rbac_group.lookup/2","type":"function"},{"doc":"Returns the metadata map associated with the group Group .","ref":"bondy_rbac_group.html#meta/1","title":"bondy_rbac_group.meta/1","type":"function"},{"doc":"Returns the group names the user's username.","ref":"bondy_rbac_group.html#name/1","title":"bondy_rbac_group.name/1","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#new/1","title":"bondy_rbac_group.new/1","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#normalise_name/1","title":"bondy_rbac_group.normalise_name/1","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#remove/2","title":"bondy_rbac_group.remove/2","type":"function"},{"doc":"Removes groups Groupnames from gropus Groups in realm with uri RealmUri .","ref":"bondy_rbac_group.html#remove_group/3","title":"bondy_rbac_group.remove_group/3","type":"function"},{"doc":"Removes groups Groupnames from gropus Groups in realm with uri RealmUri .","ref":"bondy_rbac_group.html#remove_groups/3","title":"bondy_rbac_group.remove_groups/3","type":"function"},{"doc":"Returns the external representation of the user User .","ref":"bondy_rbac_group.html#to_external/1","title":"bondy_rbac_group.to_external/1","type":"function"},{"doc":"Creates a directed graph of the groups Groups by traversing the group membership relationship and computes the topological ordering of the groups if such ordering exists. Otherwise returns Groups unmodified. Fails with {cycle, Path :: [name()]} exception if the graph directed graph has cycles of length two or more. This function doesn't fetch the definition of the groups in each group groups property.","ref":"bondy_rbac_group.html#topsort/1","title":"bondy_rbac_group.topsort/1","type":"function"},{"doc":"Takes a list of groupnames and returns any that can't be found on the realm identified by RealmUri or in its prototype (if set).","ref":"bondy_rbac_group.html#unknown/2","title":"bondy_rbac_group.unknown/2","type":"function"},{"doc":"Name cannot be a reserved name. See bondy_rbac:is_reserved_name/1 .","ref":"bondy_rbac_group.html#update/3","title":"bondy_rbac_group.update/3","type":"function"},{"doc":"","ref":"bondy_rbac_group.html#t:add_error/0","title":"bondy_rbac_group.add_error/0","type":"type"},{"doc":"","ref":"bondy_rbac_group.html#t:external/0","title":"bondy_rbac_group.external/0","type":"type"},{"doc":"","ref":"bondy_rbac_group.html#t:list_opts/0","title":"bondy_rbac_group.list_opts/0","type":"type"},{"doc":"","ref":"bondy_rbac_group.html#t:name/0","title":"bondy_rbac_group.name/0","type":"type"},{"doc":"","ref":"bondy_rbac_group.html#t:t/0","title":"bondy_rbac_group.t/0","type":"type"},{"doc":"","ref":"bondy_rbac_group.html#t:uri/0","title":"bondy_rbac_group.uri/0","type":"type"},{"doc":"**Note:** Usernames and group names are stored in lower case. All functions in this module are case sensitice so when using the functions in this module make sure the inputs you provide are in lowercase to. If you need to convert your input to lowercase use string:casefold/1 .","ref":"bondy_rbac_source.html","title":"bondy_rbac_source","type":"module"},{"doc":"Adds a source to the realm identified by RealmUri using assignment or map Assignment .","ref":"bondy_rbac_source.html#add/2","title":"bondy_rbac_source.add/2","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#add/3","title":"bondy_rbac_source.add/3","type":"function"},{"doc":"Returns the authmethod associated withe the source","ref":"bondy_rbac_source.html#authmethod/1","title":"bondy_rbac_source.authmethod/1","type":"function"},{"doc":"Returns the source's CIDR.","ref":"bondy_rbac_source.html#cidr/1","title":"bondy_rbac_source.cidr/1","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#list/1","title":"bondy_rbac_source.list/1","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#list/2","title":"bondy_rbac_source.list/2","type":"function"},{"doc":"Returns all the sources for user including the ones for speacial use 'all'.","ref":"bondy_rbac_source.html#match/2","title":"bondy_rbac_source.match/2","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#match/3","title":"bondy_rbac_source.match/3","type":"function"},{"doc":"Returns the first matching source of all the sources available for username Username .","ref":"bondy_rbac_source.html#match_first/3","title":"bondy_rbac_source.match_first/3","type":"function"},{"doc":"Returns the metadata associated with the source","ref":"bondy_rbac_source.html#meta/1","title":"bondy_rbac_source.meta/1","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#new_assignment/1","title":"bondy_rbac_source.new_assignment/1","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#remove/3","title":"bondy_rbac_source.remove/3","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#remove_all/2","title":"bondy_rbac_source.remove_all/2","type":"function"},{"doc":"Returns the external representation of the source Source .","ref":"bondy_rbac_source.html#to_external/1","title":"bondy_rbac_source.to_external/1","type":"function"},{"doc":"","ref":"bondy_rbac_source.html#t:assignment/0","title":"bondy_rbac_source.assignment/0","type":"type"},{"doc":"","ref":"bondy_rbac_source.html#t:external/0","title":"bondy_rbac_source.external/0","type":"type"},{"doc":"","ref":"bondy_rbac_source.html#t:list_opts/0","title":"bondy_rbac_source.list_opts/0","type":"type"},{"doc":"","ref":"bondy_rbac_source.html#t:t/0","title":"bondy_rbac_source.t/0","type":"type"},{"doc":"","ref":"bondy_rbac_source.html#t:uri/0","title":"bondy_rbac_source.uri/0","type":"type"},{"doc":"","ref":"bondy_rbac_source.html#t:user_source/0","title":"bondy_rbac_source.user_source/0","type":"type"},{"doc":"A user is a role that is able to log into a Bondy Realm. Users have attributes associated with themelves like username, credentials (password or authorized keys) and metadata determined by the client applications. Users can be assigned group memberships.","ref":"bondy_rbac_user.html","title":"bondy_rbac_user","type":"module"},{"doc":"Adds a new user to the RBAC store. User MUST have been created using new/1 or new/2 . This record is globally replicated.","ref":"bondy_rbac_user.html#add/2","title":"bondy_rbac_user.add/2","type":"function"},{"doc":"Adds group named Groupname to users Users in realm with uri RealmUri .","ref":"bondy_rbac_user.html#add_group/3","title":"bondy_rbac_user.add_group/3","type":"function"},{"doc":"Adds groups Groupnames to users Users in realm with uri RealmUri .","ref":"bondy_rbac_user.html#add_groups/3","title":"bondy_rbac_user.add_groups/3","type":"function"},{"doc":"Adds a new user or updates an existing one. This change is globally replicated.","ref":"bondy_rbac_user.html#add_or_update/2","title":"bondy_rbac_user.add_or_update/2","type":"function"},{"doc":"Adds a new user or updates an existing one. This change is globally replicated.","ref":"bondy_rbac_user.html#add_or_update/3","title":"bondy_rbac_user.add_or_update/3","type":"function"},{"doc":"Returns the list of authorized keys for this user. These keys are used with the WAMP Cryptosign authentication method or equivalent.","ref":"bondy_rbac_user.html#authorized_keys/1","title":"bondy_rbac_user.authorized_keys/1","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#change_password/3","title":"bondy_rbac_user.change_password/3","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#change_password/4","title":"bondy_rbac_user.change_password/4","type":"function"},{"doc":"Sets the value of the enabled property to false . See is_enabled/2 .","ref":"bondy_rbac_user.html#disable/2","title":"bondy_rbac_user.disable/2","type":"function"},{"doc":"Sets the value of the enabled property to true . See is_enabled/2 .","ref":"bondy_rbac_user.html#enable/2","title":"bondy_rbac_user.enable/2","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#exists/2","title":"bondy_rbac_user.exists/2","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#fetch/2","title":"bondy_rbac_user.fetch/2","type":"function"},{"doc":"Returns the group names the user User is member of.","ref":"bondy_rbac_user.html#groups/1","title":"bondy_rbac_user.groups/1","type":"function"},{"doc":"Returns true if user User has a authorized keys. Otherwise returns false . See authorized_keys/1 .","ref":"bondy_rbac_user.html#has_authorized_keys/1","title":"bondy_rbac_user.has_authorized_keys/1","type":"function"},{"doc":"Returns true if user User has a password. Otherwise returns false .","ref":"bondy_rbac_user.html#has_password/1","title":"bondy_rbac_user.has_password/1","type":"function"},{"doc":"Returns true if user User is active. Otherwise returns false . A user that is not active cannot establish a session. See enable/3 and disable/3 .","ref":"bondy_rbac_user.html#is_enabled/1","title":"bondy_rbac_user.is_enabled/1","type":"function"},{"doc":"Returns true if user identified with Username is enabled. Otherwise returns false . A user that is not enabled cannot establish a session. See enable/2 and disable/3 .","ref":"bondy_rbac_user.html#is_enabled/2","title":"bondy_rbac_user.is_enabled/2","type":"function"},{"doc":"Returns true if user User is a member of the group named Name . Otherwise returns false .","ref":"bondy_rbac_user.html#is_member/2","title":"bondy_rbac_user.is_member/2","type":"function"},{"doc":"Returns true if user User is managed in a SSO Realm, false if it is locally managed.","ref":"bondy_rbac_user.html#is_sso_user/1","title":"bondy_rbac_user.is_sso_user/1","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#list/1","title":"bondy_rbac_user.list/1","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#list/2","title":"bondy_rbac_user.list/2","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#lookup/2","title":"bondy_rbac_user.lookup/2","type":"function"},{"doc":"Returns the metadata map associated with the user User .","ref":"bondy_rbac_user.html#meta/1","title":"bondy_rbac_user.meta/1","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#new/1","title":"bondy_rbac_user.new/1","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#new/2","title":"bondy_rbac_user.new/2","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#normalise_username/1","title":"bondy_rbac_user.normalise_username/1","type":"function"},{"doc":"Returns the password object or undefined if the user does not have a password. See bondy_password .","ref":"bondy_rbac_user.html#password/1","title":"bondy_rbac_user.password/1","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#remove/2","title":"bondy_rbac_user.remove/2","type":"function"},{"doc":"Removes groups Groupnames from users Users in realm with uri RealmUri .","ref":"bondy_rbac_user.html#remove_group/3","title":"bondy_rbac_user.remove_group/3","type":"function"},{"doc":"Removes groups Groupnames from users Users in realm with uri RealmUri .","ref":"bondy_rbac_user.html#remove_groups/3","title":"bondy_rbac_user.remove_groups/3","type":"function"},{"doc":"If the user User is not sso-managed, returns User unmodified. Otherwise, fetches the user's credentials, the enabled status and additional metadata from the SSO Realm and merges it into User using the following procedure: * Copies the password and authorized_keys from the SSO user into User . * Adds the meta` contents from the SSO user to a key names `sso to the User meta map. * Sets the enabled property by performing the conjunction (logical AND) of both user records. The call fails with an exception if the SSO user associated with User was not found.","ref":"bondy_rbac_user.html#resolve/1","title":"bondy_rbac_user.resolve/1","type":"function"},{"doc":"Returns the URI of the Same Sign-on Realm in case the user is a SSO user. Otherwise, returns undefined .","ref":"bondy_rbac_user.html#sso_realm_uri/1","title":"bondy_rbac_user.sso_realm_uri/1","type":"function"},{"doc":"Returns the external representation of the user User .","ref":"bondy_rbac_user.html#to_external/1","title":"bondy_rbac_user.to_external/1","type":"function"},{"doc":"Takes a list of usernames and returns any that can't be found.","ref":"bondy_rbac_user.html#unknown/2","title":"bondy_rbac_user.unknown/2","type":"function"},{"doc":"Updates an existing user. This change is globally replicated.","ref":"bondy_rbac_user.html#update/3","title":"bondy_rbac_user.update/3","type":"function"},{"doc":"Updates an existing user. This change is globally replicated.","ref":"bondy_rbac_user.html#update/4","title":"bondy_rbac_user.update/4","type":"function"},{"doc":"Returns the group names the user's username.","ref":"bondy_rbac_user.html#username/1","title":"bondy_rbac_user.username/1","type":"function"},{"doc":"","ref":"bondy_rbac_user.html#t:add_error/0","title":"bondy_rbac_user.add_error/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:add_opts/0","title":"bondy_rbac_user.add_opts/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:external/0","title":"bondy_rbac_user.external/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:list_opts/0","title":"bondy_rbac_user.list_opts/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:maybe/1","title":"bondy_rbac_user.maybe/1","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:new_opts/0","title":"bondy_rbac_user.new_opts/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:t/0","title":"bondy_rbac_user.t/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:update_error/0","title":"bondy_rbac_user.update_error/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:update_opts/0","title":"bondy_rbac_user.update_opts/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:uri/0","title":"bondy_rbac_user.uri/0","type":"type"},{"doc":"","ref":"bondy_rbac_user.html#t:username/0","title":"bondy_rbac_user.username/0","type":"type"},{"doc":"This module implements the capabilities of a Broker. It is used by bondy_router .","ref":"bondy_broker.html","title":"bondy_broker","type":"module"},{"doc":"","ref":"bondy_broker.html#close_context/1","title":"bondy_broker.close_context/1","type":"function"},{"doc":"","ref":"bondy_broker.html#features/0","title":"bondy_broker.features/0","type":"function"},{"doc":"Handles a wamp message. This function is called by the bondy_router module. The message might be handled synchronously (it is performed by the calling process i.e. the transport handler) or asynchronously (by sending the message to the broker worker pool).","ref":"bondy_broker.html#handle_message/2","title":"bondy_broker.handle_message/2","type":"function"},{"doc":"Handles a message sent by a peer node through the bondy_peer_wamp_relay.","ref":"bondy_broker.html#handle_message/3","title":"bondy_broker.handle_message/3","type":"function"},{"doc":"Returns true if feature F is enabled by the broker.","ref":"bondy_broker.html#is_feature_enabled/1","title":"bondy_broker.is_feature_enabled/1","type":"function"},{"doc":"","ref":"bondy_broker.html#publish/5","title":"bondy_broker.publish/5","type":"function"},{"doc":"","ref":"bondy_broker.html#publish/6","title":"bondy_broker.publish/6","type":"function"},{"doc":"","ref":"bondy_broker.html#subscribe/3","title":"bondy_broker.subscribe/3","type":"function"},{"doc":"For internal use. If the last argument is a function, spawns a supervised instance of a bondy_subscriber by calling bondy_subscribers_sup:start_subscriber/4. The new process, calls subscribe/4 passing its pid as last argument. If the last argument is a pid, it registers the pid as a subscriber (a.k.a a local subscription)","ref":"bondy_broker.html#subscribe/4","title":"bondy_broker.subscribe/4","type":"function"},{"doc":"For internal Bondy use. Terminates the process identified by Pid by bondy_subscribers_sup:terminate_subscriber/1","ref":"bondy_broker.html#unsubscribe/1","title":"bondy_broker.unsubscribe/1","type":"function"},{"doc":"","ref":"bondy_broker.html#unsubscribe/2","title":"bondy_broker.unsubscribe/2","type":"function"},{"doc":"","ref":"bondy_broker.html#t:id/0","title":"bondy_broker.id/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:uri/0","title":"bondy_broker.uri/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_abort/0","title":"bondy_broker.wamp_abort/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_authenticate/0","title":"bondy_broker.wamp_authenticate/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_call/0","title":"bondy_broker.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_cancel/0","title":"bondy_broker.wamp_cancel/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_challenge/0","title":"bondy_broker.wamp_challenge/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_error/0","title":"bondy_broker.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_event/0","title":"bondy_broker.wamp_event/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_event_received/0","title":"bondy_broker.wamp_event_received/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_goodbye/0","title":"bondy_broker.wamp_goodbye/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_hello/0","title":"bondy_broker.wamp_hello/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_interrupt/0","title":"bondy_broker.wamp_interrupt/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_invocation/0","title":"bondy_broker.wamp_invocation/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_message/0","title":"bondy_broker.wamp_message/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_publish/0","title":"bondy_broker.wamp_publish/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_published/0","title":"bondy_broker.wamp_published/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_register/0","title":"bondy_broker.wamp_register/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_registered/0","title":"bondy_broker.wamp_registered/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_result/0","title":"bondy_broker.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_subscribe/0","title":"bondy_broker.wamp_subscribe/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_subscribed/0","title":"bondy_broker.wamp_subscribed/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_subscriber_received/0","title":"bondy_broker.wamp_subscriber_received/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_unregister/0","title":"bondy_broker.wamp_unregister/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_unregistered/0","title":"bondy_broker.wamp_unregistered/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_unsubscribe/0","title":"bondy_broker.wamp_unsubscribe/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_unsubscribed/0","title":"bondy_broker.wamp_unsubscribed/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_welcome/0","title":"bondy_broker.wamp_welcome/0","type":"type"},{"doc":"","ref":"bondy_broker.html#t:wamp_yield/0","title":"bondy_broker.wamp_yield/0","type":"type"},{"doc":"A Bondy Context lets you access information that defines the state of an interaction. In a typical interacion, several actors or objects have a hand in what is going on e.g. bondy_session, wamp_realm, etc. The Bondy Context is passed as an argument through the whole request-response loop to provide access to that information.","ref":"bondy_context.html","title":"bondy_context","type":"module"},{"doc":"Returns the agent of the provided context or 'undefined' if there is none.","ref":"bondy_context.html#agent/1","title":"bondy_context.agent/1","type":"function"},{"doc":"","ref":"bondy_context.html#authid/1","title":"bondy_context.authid/1","type":"function"},{"doc":"","ref":"bondy_context.html#authrole/1","title":"bondy_context.authrole/1","type":"function"},{"doc":"","ref":"bondy_context.html#authroles/1","title":"bondy_context.authroles/1","type":"function"},{"doc":"Returns the current WAMP call timeout.","ref":"bondy_context.html#call_timeout/1","title":"bondy_context.call_timeout/1","type":"function"},{"doc":"Returns a copy of Details` where the disclose_caller feature properties have been added from context `Ctxt .","ref":"bondy_context.html#caller_details/2","title":"bondy_context.caller_details/2","type":"function"},{"doc":"Closes the context. This function calls close/2 with normal as reason.","ref":"bondy_context.html#close/1","title":"bondy_context.close/1","type":"function"},{"doc":"Closes the context. This function calls bondy_session:close/1 and bondy_router:close_context/1 .","ref":"bondy_context.html#close/2","title":"bondy_context.close/2","type":"function"},{"doc":"Returns the encoding used by the peer of the provided context.","ref":"bondy_context.html#encoding/1","title":"bondy_context.encoding/1","type":"function"},{"doc":"","ref":"bondy_context.html#format_status/2","title":"bondy_context.format_status/2","type":"function"},{"doc":"Returns an ID based on scope. If context does not have a session the global sceop is used.","ref":"bondy_context.html#get_id/2","title":"bondy_context.get_id/2","type":"function"},{"doc":"Returns true if the context is associated with a session, false otherwise.","ref":"bondy_context.html#has_session/1","title":"bondy_context.has_session/1","type":"function"},{"doc":"Returns the context identifier.","ref":"bondy_context.html#id/1","title":"bondy_context.id/1","type":"function"},{"doc":"Returns true if the user is anonymous. In that case authid would be a random identifier assigned by Bondy.","ref":"bondy_context.html#is_anonymous/1","title":"bondy_context.is_anonymous/1","type":"function"},{"doc":"Returns true if the feature Feature is enabled for role Role.","ref":"bondy_context.html#is_feature_enabled/3","title":"bondy_context.is_feature_enabled/3","type":"function"},{"doc":"","ref":"bondy_context.html#is_security_enabled/1","title":"bondy_context.is_security_enabled/1","type":"function"},{"doc":"","ref":"bondy_context.html#local_context/1","title":"bondy_context.local_context/1","type":"function"},{"doc":"Initialises a new context.","ref":"bondy_context.html#new/0","title":"bondy_context.new/0","type":"function"},{"doc":"","ref":"bondy_context.html#new/2","title":"bondy_context.new/2","type":"function"},{"doc":"Returns the peer of the provided context.","ref":"bondy_context.html#node/1","title":"bondy_context.node/1","type":"function"},{"doc":"Returns the peer of the provided context.","ref":"bondy_context.html#peer/1","title":"bondy_context.peer/1","type":"function"},{"doc":"Returns the peer of the provided context.","ref":"bondy_context.html#peername/1","title":"bondy_context.peername/1","type":"function"},{"doc":"Returns a copy of Details` where the disclose_publisher feature properties have been added from context `Ctxt .","ref":"bondy_context.html#publisher_details/2","title":"bondy_context.publisher_details/2","type":"function"},{"doc":"Returns the sessionId of the provided context or 'undefined' if there is none.","ref":"bondy_context.html#rbac_context/1","title":"bondy_context.rbac_context/1","type":"function"},{"doc":"Returns the realm uri of the provided context.","ref":"bondy_context.html#realm_uri/1","title":"bondy_context.realm_uri/1","type":"function"},{"doc":"","ref":"bondy_context.html#ref/1","title":"bondy_context.ref/1","type":"function"},{"doc":"Returns the current request details","ref":"bondy_context.html#request_details/1","title":"bondy_context.request_details/1","type":"function"},{"doc":"Returns the current request id.","ref":"bondy_context.html#request_id/1","title":"bondy_context.request_id/1","type":"function"},{"doc":"Returns the current request timeout.","ref":"bondy_context.html#request_timeout/1","title":"bondy_context.request_timeout/1","type":"function"},{"doc":"Returns the current request timestamp.","ref":"bondy_context.html#request_timestamp/1","title":"bondy_context.request_timestamp/1","type":"function"},{"doc":"Resets the context. Returns a copy of Ctxt where the following attributes have been reset: request_id, request_timeout, request_timestamp","ref":"bondy_context.html#reset/1","title":"bondy_context.reset/1","type":"function"},{"doc":"Returns the roles of the provided context.","ref":"bondy_context.html#roles/1","title":"bondy_context.roles/1","type":"function"},{"doc":"Fetches and returns the bondy_session for the associated sessionId.","ref":"bondy_context.html#session/1","title":"bondy_context.session/1","type":"function"},{"doc":"Returns the sessionId of the provided context or 'undefined' if there is none.","ref":"bondy_context.html#session_id/1","title":"bondy_context.session_id/1","type":"function"},{"doc":"","ref":"bondy_context.html#set_authid/2","title":"bondy_context.set_authid/2","type":"function"},{"doc":"Sets the current WAMP call timeout to the provided context.","ref":"bondy_context.html#set_call_timeout/2","title":"bondy_context.set_call_timeout/2","type":"function"},{"doc":"","ref":"bondy_context.html#set_is_anonymous/2","title":"bondy_context.set_is_anonymous/2","type":"function"},{"doc":"Set the peer to the provided context.","ref":"bondy_context.html#set_peer/2","title":"bondy_context.set_peer/2","type":"function"},{"doc":"Sets the realm uri of the provided context.","ref":"bondy_context.html#set_realm_uri/2","title":"bondy_context.set_realm_uri/2","type":"function"},{"doc":"Sets the current request details to the provided context.","ref":"bondy_context.html#set_request_details/2","title":"bondy_context.set_request_details/2","type":"function"},{"doc":"Sets the current request id to the provided context.","ref":"bondy_context.html#set_request_id/2","title":"bondy_context.set_request_id/2","type":"function"},{"doc":"Sets the current request timeout to the provided context.","ref":"bondy_context.html#set_request_timeout/2","title":"bondy_context.set_request_timeout/2","type":"function"},{"doc":"Sets the current request timeout to the provided context.","ref":"bondy_context.html#set_request_timestamp/2","title":"bondy_context.set_request_timestamp/2","type":"function"},{"doc":"Sets the sessionId to the provided context.","ref":"bondy_context.html#set_session/2","title":"bondy_context.set_session/2","type":"function"},{"doc":"Set the peer to the provided context.","ref":"bondy_context.html#set_subprotocol/2","title":"bondy_context.set_subprotocol/2","type":"function"},{"doc":"Returns the subprotocol of the provided context.","ref":"bondy_context.html#subprotocol/1","title":"bondy_context.subprotocol/1","type":"function"},{"doc":"","ref":"bondy_context.html#t:encoding/0","title":"bondy_context.encoding/0","type":"type"},{"doc":"","ref":"bondy_context.html#t:frame_type/0","title":"bondy_context.frame_type/0","type":"type"},{"doc":"","ref":"bondy_context.html#t:id/0","title":"bondy_context.id/0","type":"type"},{"doc":"","ref":"bondy_context.html#t:maybe/1","title":"bondy_context.maybe/1","type":"type"},{"doc":"","ref":"bondy_context.html#t:subprotocol/0","title":"bondy_context.subprotocol/0","type":"type"},{"doc":"","ref":"bondy_context.html#t:subprotocol_2/0","title":"bondy_context.subprotocol_2/0","type":"type"},{"doc":"","ref":"bondy_context.html#t:t/0","title":"bondy_context.t/0","type":"type"},{"doc":"","ref":"bondy_context.html#t:transport/0","title":"bondy_context.transport/0","type":"type"},{"doc":"","ref":"bondy_context.html#t:uri/0","title":"bondy_context.uri/0","type":"type"},{"doc":"This module implements the capabilities of a Dealer. It is used by bondy_router . A Dealer is one of the two roles a Router plays. In particular a Dealer is the middleman between an Caller and a Callee in an RPC interaction, i.e. it works as a generic router for remote procedure calls decoupling Callers and Callees. Callees register the procedures they provide with Dealers. Callers initiate procedure calls first to Dealers. Dealers route calls incoming from Callers to Callees implementing the procedure called, and route call results back from Callees to Callers. A Caller issues calls to remote procedures by providing the procedure URI and any arguments for the call. The Callee will execute the procedure using the supplied arguments to the call and return the result of the call to the Caller. The Caller and Callee will usually implement all business logic, while the Dealer works as a generic router for remote procedure calls decoupling Callers and Callees. Bondy does not provide message transformations to ensure stability and safety. As such, any required transformations should be handled by Callers and Callees directly (notice that a Callee can act as a middleman implementing the required transformations). The message flow between _Callees_ and a _Dealer_ for registering and unregistering endpoints to be called over RPC involves the following messages: REGISTER REGISTERED UNREGISTER UNREGISTERED ERROR , -- -- -- . , -- -- -- . , -- -- -- . | Caller | | Dealer | | Callee | ` -- + -- - &#39; `--+---&#39; ` -- + -- - &#39; | | | | | | | | REGISTER | | | &lt;--------------------- | | | | | REGISTERED or ERROR | | | ---------------------&gt; | | | | | | | | | | | | | | | | | UNREGISTER | | | &lt;--------------------- | | | | | UNREGISTERED or ERROR| | | ---------------------&gt; ,--+---. ,--+---. ,--+---. |Caller| |Dealer| |Callee| `------&#39; ` -- -- -- &#39; `------&#39; # Calling and Invocations The message flow between _Callers_, a _Dealer_ and _Callees_ for calling procedures and invoking endpoints involves the following messages: 1. &quot;CALL&quot; 2. &quot;RESULT&quot; 3. &quot;INVOCATION&quot; 4. &quot;YIELD&quot; 5. &quot;ERROR&quot; sequenceDiagram %%{init: {'theme': 'neutral'} }%% Caller-&gt;&gt;+Dealer: CALL Dealer-&gt;&gt;Callee: INVOCATION Callee-&gt;&gt;Dealer: YIELD | ERROR Dealer-&gt;&gt;Caller: RESULT | ERROR The execution of remote procedure calls is asynchronous, and there may be more than one call outstanding. A call is called outstanding (from the point of view of the _Caller_), when a (final) result or error has not yet been received by the _Caller_. # Remote Procedure Call Ordering Regarding *Remote Procedure Calls*, the ordering guarantees are as follows: If _Callee A_ has registered endpoints for both *Procedure 1* and *Procedure 2*, and _Caller B_ first issues a *Call 1* to *Procedure 1* and then a *Call 2* to *Procedure 2*, and both calls are routed to _Callee A_, then _Callee A_ will first receive an invocation corresponding to *Call 1* and then *Call 2*. This also holds if *Procedure 1* and *Procedure 2* are identical. In other words, WAMP guarantees ordering of invocations between any given _pair_ of _Caller_ and _Callee_. The current implementation relies on Distributed Erlang which guarantees message ordering betweeen processes in different nodes. There are no guarantees on the order of call results and errors in relation to _different_ calls, since the execution of calls upon different invocations of endpoints in _Callees_ are running independently. A first call might require an expensive, long-running computation, whereas a second, subsequent call might finish immediately. Further, if _Callee A_ registers for *Procedure 1*, the &quot;REGISTERED&quot; message will be sent by _Dealer_ to _Callee A_ before any &quot;INVOCATION&quot; message for *Procedure 1*. There is no guarantee regarding the order of return for multiple subsequent register requests. A register request might require the _Dealer_ to do a time-consuming lookup in some database, whereas another register request second might be permissible immediately.","ref":"bondy_dealer.html","title":"bondy_dealer","type":"module"},{"doc":"","ref":"bondy_dealer.html#callees/1","title":"bondy_dealer.callees/1","type":"function"},{"doc":"","ref":"bondy_dealer.html#callees/2","title":"bondy_dealer.callees/2","type":"function"},{"doc":"","ref":"bondy_dealer.html#callees/3","title":"bondy_dealer.callees/3","type":"function"},{"doc":"","ref":"bondy_dealer.html#close_context/1","title":"bondy_dealer.close_context/1","type":"function"},{"doc":"","ref":"bondy_dealer.html#features/0","title":"bondy_dealer.features/0","type":"function"},{"doc":"","ref":"bondy_dealer.html#handle_message/2","title":"bondy_dealer.handle_message/2","type":"function"},{"doc":"Handles inbound messages received from a relay i.e. a cluster peer node or bridge_relay i.e. edge client or server.","ref":"bondy_dealer.html#handle_message/3","title":"bondy_dealer.handle_message/3","type":"function"},{"doc":"","ref":"bondy_dealer.html#is_feature_enabled/1","title":"bondy_dealer.is_feature_enabled/1","type":"function"},{"doc":"Creates a local registration. If the registration is done using a callback module, only the invoke single strategy can be used (i.e. shared_registration and sharded_registration are also disabled). Also the callback module needs to conform to the wamp_api_callback behaviour, otherwise the call fails with a badarg exception.","ref":"bondy_dealer.html#register/3","title":"bondy_dealer.register/3","type":"function"},{"doc":"For internal Bondy use. Terminates the process identified by Pid by bondy_subscribers_sup:terminate_subscriber/1","ref":"bondy_dealer.html#unregister/1","title":"bondy_dealer.unregister/1","type":"function"},{"doc":"","ref":"bondy_dealer.html#unregister/2","title":"bondy_dealer.unregister/2","type":"function"},{"doc":"","ref":"bondy_dealer.html#t:id/0","title":"bondy_dealer.id/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:invoke_opts/0","title":"bondy_dealer.invoke_opts/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:maybe/1","title":"bondy_dealer.maybe/1","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:uri/0","title":"bondy_dealer.uri/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_abort/0","title":"bondy_dealer.wamp_abort/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_authenticate/0","title":"bondy_dealer.wamp_authenticate/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_call/0","title":"bondy_dealer.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_cancel/0","title":"bondy_dealer.wamp_cancel/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_challenge/0","title":"bondy_dealer.wamp_challenge/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_error/0","title":"bondy_dealer.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_event/0","title":"bondy_dealer.wamp_event/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_event_received/0","title":"bondy_dealer.wamp_event_received/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_goodbye/0","title":"bondy_dealer.wamp_goodbye/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_hello/0","title":"bondy_dealer.wamp_hello/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_interrupt/0","title":"bondy_dealer.wamp_interrupt/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_invocation/0","title":"bondy_dealer.wamp_invocation/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_message/0","title":"bondy_dealer.wamp_message/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_publish/0","title":"bondy_dealer.wamp_publish/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_published/0","title":"bondy_dealer.wamp_published/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_register/0","title":"bondy_dealer.wamp_register/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_registered/0","title":"bondy_dealer.wamp_registered/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_result/0","title":"bondy_dealer.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_subscribe/0","title":"bondy_dealer.wamp_subscribe/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_subscribed/0","title":"bondy_dealer.wamp_subscribed/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_subscriber_received/0","title":"bondy_dealer.wamp_subscriber_received/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_unregister/0","title":"bondy_dealer.wamp_unregister/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_unregistered/0","title":"bondy_dealer.wamp_unregistered/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_unsubscribe/0","title":"bondy_dealer.wamp_unsubscribe/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_unsubscribed/0","title":"bondy_dealer.wamp_unsubscribed/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_welcome/0","title":"bondy_dealer.wamp_welcome/0","type":"type"},{"doc":"","ref":"bondy_dealer.html#t:wamp_yield/0","title":"bondy_dealer.wamp_yield/0","type":"type"},{"doc":"An in-memory registry for PubSub subscriptions and Routed RPC registrations, providing pattern matching capabilities including support for WAMP's version 2.0 match policies (exact, prefix and wildcard). The registry is stored both in an in-memory distributed table (plum_db). Also an in-memory trie-based indexed (materialised vieq) is used for exact and prefix matching. Note: support for wildcard matching is soon to be supported. This module also provides a singleton server to perform the initialisation of the trie from the plum_db tables.","ref":"bondy_registry.html","title":"bondy_registry","type":"module"},{"doc":"Adds an existing entry to the registry. Adding an already existing entry is treated differently based on whether the entry is a registration or a subscription. According to the WAMP specification, in the case of a subscription that was already added before by the same _Subscriber_, the _Broker_ should not fail and answer with a &quot;SUBSCRIBED&quot; message, containing the existing &quot;Subscription|id&quot;. So in this case this function returns {ok, bondy_registry_entry:t(), boolean()}. In case of a registration, as a default, only a single Callee may register a procedure for an URI. However, when shared registrations are supported, then the first Callee to register a procedure for a particular URI MAY determine that additional registrations for this URI are allowed, and what Invocation Rules to apply in case such additional registrations are made. This is configured through the 'invoke' options. When invoke is not 'single', Dealer MUST fail all subsequent attempts to register a procedure for the URI where the value for the invoke option does not match that of the initial registration. Accordingly this function might return an error tuple.","ref":"bondy_registry.html#add/1","title":"bondy_registry.add/1","type":"function"},{"doc":"Adds an entry to the registry. Adding an already existing entry is treated differently based on whether the entry is a registration or a subscription. According to the WAMP specification, in the case of a subscription that was already added before by the same _Subscriber_, the _Broker_ should not fail and answer with a &quot;SUBSCRIBED&quot; message, containing the existing &quot;Subscription|id&quot;. So in this case this function returns {ok, bondy_registry_entry:t(), boolean()}. In case of a registration, as a default, only a single Callee may register a procedure for an URI. However, when shared registrations are supported, then the first Callee to register a procedure for a particular URI MAY determine that additional registrations for this URI are allowed, and what Invocation Rules to apply in case such additional registrations are made. This is configured through the 'invoke' options. When invoke is not 'single', Dealer MUST fail all subsequent attempts to register a procedure for the URI where the value for the invoke option does not match that of the initial registration. Accordingly this function might return an error tuple.","ref":"bondy_registry.html#add/4","title":"bondy_registry.add/4","type":"function"},{"doc":"","ref":"bondy_registry.html#code_change/3","title":"bondy_registry.code_change/3","type":"function"},{"doc":"Continues returning the list of entries owned by a session started with entries/4 . The next chunk of the size specified in the initial entries/4 call is returned together with a new Continuation, which can be used in subsequent calls to this function. When there are no more objects in the table, {[], '$end_of_table'} is returned.","ref":"bondy_registry.html#entries/1","title":"bondy_registry.entries/1","type":"function"},{"doc":"Returns the list of entries owned by the active session. This function is equivalent to calling entries/2 with the RealmUri and SessionId extracted from the Context.","ref":"bondy_registry.html#entries/2","title":"bondy_registry.entries/2","type":"function"},{"doc":"Returns the complete list of entries owned by a session matching RealmUri and SessionId. Use entries/3 and entries/1 to limit the number of entries returned.","ref":"bondy_registry.html#entries/4","title":"bondy_registry.entries/4","type":"function"},{"doc":"Works like entries/3 , but only returns a limited (Limit) number of entries. Term Continuation can then be used in subsequent calls to entries/1 to get the next chunk of entries.","ref":"bondy_registry.html#entries/5","title":"bondy_registry.entries/5","type":"function"},{"doc":"","ref":"bondy_registry.html#handle_call/3","title":"bondy_registry.handle_call/3","type":"function"},{"doc":"","ref":"bondy_registry.html#handle_cast/2","title":"bondy_registry.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_registry.html#handle_info/2","title":"bondy_registry.handle_info/2","type":"function"},{"doc":"Returns information about the registry","ref":"bondy_registry.html#info/0","title":"bondy_registry.info/0","type":"function"},{"doc":"","ref":"bondy_registry.html#info/1","title":"bondy_registry.info/1","type":"function"},{"doc":"","ref":"bondy_registry.html#init/1","title":"bondy_registry.init/1","type":"function"},{"doc":"","ref":"bondy_registry.html#init_tries/0","title":"bondy_registry.init_tries/0","type":"function"},{"doc":"","ref":"bondy_registry.html#lookup/1","title":"bondy_registry.lookup/1","type":"function"},{"doc":"","ref":"bondy_registry.html#lookup/3","title":"bondy_registry.lookup/3","type":"function"},{"doc":"","ref":"bondy_registry.html#lookup/4","title":"bondy_registry.lookup/4","type":"function"},{"doc":"","ref":"bondy_registry.html#match/1","title":"bondy_registry.match/1","type":"function"},{"doc":"Calls match/4 .","ref":"bondy_registry.html#match/3","title":"bondy_registry.match/3","type":"function"},{"doc":"Returns the entries matching either a topic or procedure Uri according to each entry's configured match specification. This function is used by the Broker to return all subscriptions that match a topic. And in case of registrations it is used by the Dealer to return all registrations matching a procedure.","ref":"bondy_registry.html#match/4","title":"bondy_registry.match/4","type":"function"},{"doc":"","ref":"bondy_registry.html#remove/1","title":"bondy_registry.remove/1","type":"function"},{"doc":"","ref":"bondy_registry.html#remove/3","title":"bondy_registry.remove/3","type":"function"},{"doc":"","ref":"bondy_registry.html#remove/4","title":"bondy_registry.remove/4","type":"function"},{"doc":"Removes all entries matching the context's realm and session_id (if any).","ref":"bondy_registry.html#remove_all/2","title":"bondy_registry.remove_all/2","type":"function"},{"doc":"Removes all entries matching the context's realm and session_id (if any).","ref":"bondy_registry.html#remove_all/3","title":"bondy_registry.remove_all/3","type":"function"},{"doc":"Removes all registry entries of type Type, for a {RealmUri, Node SessionId} relation.","ref":"bondy_registry.html#remove_all/4","title":"bondy_registry.remove_all/4","type":"function"},{"doc":"Starts the registry server. The server maintains the in-memory tries we use for matching and it is also a subscriber for plum_db broadcast and AAE events in order to keep the trie up-to-date with plum_db.","ref":"bondy_registry.html#start_link/0","title":"bondy_registry.start_link/0","type":"function"},{"doc":"","ref":"bondy_registry.html#terminate/2","title":"bondy_registry.terminate/2","type":"function"},{"doc":"","ref":"bondy_registry.html#t:continuation/0","title":"bondy_registry.continuation/0","type":"type"},{"doc":"","ref":"bondy_registry.html#t:continuation_or_eot/0","title":"bondy_registry.continuation_or_eot/0","type":"type"},{"doc":"","ref":"bondy_registry.html#t:eot/0","title":"bondy_registry.eot/0","type":"type"},{"doc":"","ref":"bondy_registry.html#t:id/0","title":"bondy_registry.id/0","type":"type"},{"doc":"","ref":"bondy_registry.html#t:task/0","title":"bondy_registry.task/0","type":"type"},{"doc":"","ref":"bondy_registry.html#t:uri/0","title":"bondy_registry.uri/0","type":"type"},{"doc":"An entry is a record of a RPC registration or PubSub subscription. It is stored in-memory in the Registry bondy_registry and replicated globally and is immutable.","ref":"bondy_registry_entry.html","title":"bondy_registry_entry","type":"module"},{"doc":"Returns the callback module when target is a callback, otherwise returns undefined or the wilcard value '_' when the entry was used as a pattern (See pattern/5 ).","ref":"bondy_registry_entry.html#callback/1","title":"bondy_registry_entry.callback/1","type":"function"},{"doc":"Returns the callback arguments when target is a callback, otherwise returns undefined or the wilcard value '_' when the entry was used as a pattern (See pattern/5 ).","ref":"bondy_registry_entry.html#callback_args/1","title":"bondy_registry_entry.callback_args/1","type":"function"},{"doc":"Returns the time when this entry was created. Its value is a timestamp in seconds.","ref":"bondy_registry_entry.html#created/1","title":"bondy_registry_entry.created/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#get_option/3","title":"bondy_registry_entry.get_option/3","type":"function"},{"doc":"Returns the value of the subscription's or registration's id property.","ref":"bondy_registry_entry.html#id/1","title":"bondy_registry_entry.id/1","type":"function"},{"doc":"Returns true if the entry target is a callback registration. Callback registrations are only used by Bondy itself to provide some of the admin and meta APIs.","ref":"bondy_registry_entry.html#is_callback/1","title":"bondy_registry_entry.is_callback/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#is_entry/1","title":"bondy_registry_entry.is_entry/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#is_key/1","title":"bondy_registry_entry.is_key/1","type":"function"},{"doc":"Returns true if the entry represents a handler local to the caller's node and false when the target is located in a cluster peer.","ref":"bondy_registry_entry.html#is_local/1","title":"bondy_registry_entry.is_local/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#is_proxy/1","title":"bondy_registry_entry.is_proxy/1","type":"function"},{"doc":"Returns the value of the subscription's or registration's realm_uri property.","ref":"bondy_registry_entry.html#key/1","title":"bondy_registry_entry.key/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#key_field/1","title":"bondy_registry_entry.key_field/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#key_pattern/2","title":"bondy_registry_entry.key_pattern/2","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#key_pattern/4","title":"bondy_registry_entry.key_pattern/4","type":"function"},{"doc":"Returns the match_policy used by this subscription or regitration.","ref":"bondy_registry_entry.html#match_policy/1","title":"bondy_registry_entry.match_policy/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#new/4","title":"bondy_registry_entry.new/4","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#new/5","title":"bondy_registry_entry.new/5","type":"function"},{"doc":"Returns the value of the subscription's or registration's node property. This is always the Bondy cluster peer node where the handler exists.","ref":"bondy_registry_entry.html#node/1","title":"bondy_registry_entry.node/1","type":"function"},{"doc":"Returns the value of the subscription's or registration's node property. This is always the Bondy cluster peer node where the handler exists.","ref":"bondy_registry_entry.html#nodestring/1","title":"bondy_registry_entry.nodestring/1","type":"function"},{"doc":"Returns the value of the 'options' property of the entry.","ref":"bondy_registry_entry.html#options/1","title":"bondy_registry_entry.options/1","type":"function"},{"doc":"Returns the origin ref() of the subscription or registration. This value is only present when the entry is a proxy.","ref":"bondy_registry_entry.html#origin_id/1","title":"bondy_registry_entry.origin_id/1","type":"function"},{"doc":"Returns the origin ref() of the subscription or registration This value is only present when the entry is a proxy.","ref":"bondy_registry_entry.html#origin_ref/1","title":"bondy_registry_entry.origin_ref/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#pattern/4","title":"bondy_registry_entry.pattern/4","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#pattern/5","title":"bondy_registry_entry.pattern/5","type":"function"},{"doc":"Returns the value of the subscription's or registration's pid property when target is a pid() or a session identifier. Otherwise returns undefined or the wilcard value '_' when the entry was used as a pattern (See pattern/5 ).","ref":"bondy_registry_entry.html#pid/1","title":"bondy_registry_entry.pid/1","type":"function"},{"doc":"Returns a copy of the entry where the node component of the ref has been replaced with the node of the calling process, the session identifier replaced with SessionId and the pid with Pid . The entry is used by a router node to create a proxy of an entry originated in an edge router.","ref":"bondy_registry_entry.html#proxy/2","title":"bondy_registry_entry.proxy/2","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#proxy_details/1","title":"bondy_registry_entry.proxy_details/1","type":"function"},{"doc":"Returns the value of the subscription's or registration's realm_uri property.","ref":"bondy_registry_entry.html#realm_uri/1","title":"bondy_registry_entry.realm_uri/1","type":"function"},{"doc":"Returns the ref() of the subscription or registration","ref":"bondy_registry_entry.html#ref/1","title":"bondy_registry_entry.ref/1","type":"function"},{"doc":"Returns the value of the subscription's or registration's session_id property.","ref":"bondy_registry_entry.html#session_id/1","title":"bondy_registry_entry.session_id/1","type":"function"},{"doc":"Returns either a session identifier, a pid() or a callback module depending on the type of entry. I can also return the wilcard '_' when the entry is used as a pattern (See pattern/5 ).","ref":"bondy_registry_entry.html#target/1","title":"bondy_registry_entry.target/1","type":"function"},{"doc":"Converts the entry into a map according to the WAMP protocol Details dictionary format.","ref":"bondy_registry_entry.html#to_details_map/1","title":"bondy_registry_entry.to_details_map/1","type":"function"},{"doc":"Converts the entry into a map. Certain values of type atom such as node are turned into binaries. This is to avoid exhausting a remote node atoms table for use cases where the entries are replicated e.g. edge-remote connections.","ref":"bondy_registry_entry.html#to_external/1","title":"bondy_registry_entry.to_external/1","type":"function"},{"doc":"Returns the type of the entry, the atom 'registration' or 'subscription'.","ref":"bondy_registry_entry.html#type/1","title":"bondy_registry_entry.type/1","type":"function"},{"doc":"Returns the uri this entry is about i.e. either a subscription topic_uri or a registration procedure_uri.","ref":"bondy_registry_entry.html#uri/1","title":"bondy_registry_entry.uri/1","type":"function"},{"doc":"","ref":"bondy_registry_entry.html#t:details_map/0","title":"bondy_registry_entry.details_map/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:entry_type/0","title":"bondy_registry_entry.entry_type/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:external/0","title":"bondy_registry_entry.external/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:id/0","title":"bondy_registry_entry.id/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:key/0","title":"bondy_registry_entry.key/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:maybe/1","title":"bondy_registry_entry.maybe/1","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:mfargs/0","title":"bondy_registry_entry.mfargs/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:nodestring/0","title":"bondy_registry_entry.nodestring/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:t/0","title":"bondy_registry_entry.t/0","type":"opaque"},{"doc":"","ref":"bondy_registry_entry.html#t:t_or_key/0","title":"bondy_registry_entry.t_or_key/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:uri/0","title":"bondy_registry_entry.uri/0","type":"type"},{"doc":"","ref":"bondy_registry_entry.html#t:wildcard/1","title":"bondy_registry_entry.wildcard/1","type":"type"},{"doc":"This is experimental and does not scale with high traffic at the moment.","ref":"bondy_retained_message.html","title":"bondy_retained_message","type":"module"},{"doc":"Evict expired retained messages from all realms.","ref":"bondy_retained_message.html#evict_expired/0","title":"bondy_retained_message.evict_expired/0","type":"function"},{"doc":"Evict expired retained messages from realm Realm .","ref":"bondy_retained_message.html#evict_expired/1","title":"bondy_retained_message.evict_expired/1","type":"function"},{"doc":"Evict expired retained messages from realm Realm or all realms if wildcard '_' is used. Evaluates function Fun for each entry passing Realm and Entry as arguments.","ref":"bondy_retained_message.html#evict_expired/2","title":"bondy_retained_message.evict_expired/2","type":"function"},{"doc":"","ref":"bondy_retained_message.html#get/2","title":"bondy_retained_message.get/2","type":"function"},{"doc":"","ref":"bondy_retained_message.html#match/1","title":"bondy_retained_message.match/1","type":"function"},{"doc":"","ref":"bondy_retained_message.html#match/4","title":"bondy_retained_message.match/4","type":"function"},{"doc":"","ref":"bondy_retained_message.html#match/5","title":"bondy_retained_message.match/5","type":"function"},{"doc":"","ref":"bondy_retained_message.html#put/4","title":"bondy_retained_message.put/4","type":"function"},{"doc":"","ref":"bondy_retained_message.html#put/5","title":"bondy_retained_message.put/5","type":"function"},{"doc":"","ref":"bondy_retained_message.html#size/1","title":"bondy_retained_message.size/1","type":"function"},{"doc":"","ref":"bondy_retained_message.html#take/2","title":"bondy_retained_message.take/2","type":"function"},{"doc":"","ref":"bondy_retained_message.html#to_event/2","title":"bondy_retained_message.to_event/2","type":"function"},{"doc":"","ref":"bondy_retained_message.html#t:continuation/0","title":"bondy_retained_message.continuation/0","type":"type"},{"doc":"","ref":"bondy_retained_message.html#t:eot/0","title":"bondy_retained_message.eot/0","type":"type"},{"doc":"","ref":"bondy_retained_message.html#t:evict_fun/0","title":"bondy_retained_message.evict_fun/0","type":"type"},{"doc":"","ref":"bondy_retained_message.html#t:id/0","title":"bondy_retained_message.id/0","type":"type"},{"doc":"","ref":"bondy_retained_message.html#t:match_opts/0","title":"bondy_retained_message.match_opts/0","type":"type"},{"doc":"","ref":"bondy_retained_message.html#t:t/0","title":"bondy_retained_message.t/0","type":"type"},{"doc":"","ref":"bondy_retained_message.html#t:uri/0","title":"bondy_retained_message.uri/0","type":"type"},{"doc":"","ref":"bondy_retained_message.html#t:wamp_event/0","title":"bondy_retained_message.wamp_event/0","type":"type"},{"doc":"Implements Eviction amogst other things","ref":"bondy_retained_message_manager.html","title":"bondy_retained_message_manager","type":"module"},{"doc":"","ref":"bondy_retained_message_manager.html#code_change/3","title":"bondy_retained_message_manager.code_change/3","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#counters/1","title":"bondy_retained_message_manager.counters/1","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#decr_counters/3","title":"bondy_retained_message_manager.decr_counters/3","type":"function"},{"doc":"Default TTL for retained messages.","ref":"bondy_retained_message_manager.html#default_ttl/0","title":"bondy_retained_message_manager.default_ttl/0","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#get/2","title":"bondy_retained_message_manager.get/2","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#handle_call/3","title":"bondy_retained_message_manager.handle_call/3","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#handle_cast/2","title":"bondy_retained_message_manager.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#handle_info/2","title":"bondy_retained_message_manager.handle_info/2","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#incr_counters/3","title":"bondy_retained_message_manager.incr_counters/3","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#init/1","title":"bondy_retained_message_manager.init/1","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#match/1","title":"bondy_retained_message_manager.match/1","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#match/4","title":"bondy_retained_message_manager.match/4","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#match/5","title":"bondy_retained_message_manager.match/5","type":"function"},{"doc":"Maximum space in memory used by retained messages. Once the max has been reached no more events will be stored. A value of 0 means no limit is enforced.","ref":"bondy_retained_message_manager.html#max_memory/0","title":"bondy_retained_message_manager.max_memory/0","type":"function"},{"doc":"The max size for an event message. All events whose size exceeds this value will not be retained.","ref":"bondy_retained_message_manager.html#max_message_size/0","title":"bondy_retained_message_manager.max_message_size/0","type":"function"},{"doc":"Maximum number of messages that can be store in a Bondy node. Once the max has been reached no more events will be stored. A value of 0 means no limit is enforced.","ref":"bondy_retained_message_manager.html#max_messages/0","title":"bondy_retained_message_manager.max_messages/0","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#put/4","title":"bondy_retained_message_manager.put/4","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#put/5","title":"bondy_retained_message_manager.put/5","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#start_link/0","title":"bondy_retained_message_manager.start_link/0","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#take/2","title":"bondy_retained_message_manager.take/2","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#terminate/2","title":"bondy_retained_message_manager.terminate/2","type":"function"},{"doc":"","ref":"bondy_retained_message_manager.html#t:id/0","title":"bondy_retained_message_manager.id/0","type":"type"},{"doc":"","ref":"bondy_retained_message_manager.html#t:uri/0","title":"bondy_retained_message_manager.uri/0","type":"type"},{"doc":"","ref":"bondy_retained_message_manager.html#t:wamp_event/0","title":"bondy_retained_message_manager.wamp_event/0","type":"type"},{"doc":"bondy_router provides the routing logic for all interactions. In general bondy_router tries to handle all messages asynchronously. It does it by using either a static or a dynamic pool of workers based on configuration. This module implements both type of workers as a gen_server (this module). A static pool uses a set of supervised processes whereas a dynamic pool spawns a new erlang process for each message. In both cases, sidejob supervises the processes. By default bondy_router uses a dynamic pool. The pools are implemented using the sidejob library in order to provide load regulation. Inn case a maximum pool capacity has been reached, the router will handle the message synchronously i.e. blocking the calling processes (usually the one that handles the transport connection e.g. bondy_wamp_ws_connection_handler ). The router also handles messages synchronously in those cases where it needs to preserve message ordering guarantees. This module handles only the concurrency and basic routing logic, delegating the rest to either bondy_broker or bondy_dealer , which implement the actual PubSub and RPC logic respectively. , -- -- -- . , -- -- -- . | Peer | | Peer | ` -- + -- - &#39; `--+---&#39; | | | TCP established | | &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; | | | | TLS established | | + &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; + | | + + | | + WebSocket established + | | + | &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; | + | | + | | + | | + | WAMP established | + | | + | + &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; + | + | | + | + + | + | | + | + + | + | | + | + WAMP closed + | + | | + | + &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; + | + | | + | | + | | + | | + | | + | WAMP established | + | | + | + &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; + | + | | + | + + | + | | + | + + | + | | + | + WAMP closed + | + | | + | + &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; + | + | | + | | + | | + | WebSocket closed | + | | + | &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; | + | | + + | | + TLS closed + | | + &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; + | | | | TCP closed | | &lt;- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- &gt; | | | , -- + -- - . , -- + -- - . | Peer | | Peer | ` -- -- -- &#39; `------&#39; (Diagram copied from WAMP RFC Draft)","ref":"bondy_router.html","title":"bondy_router","type":"module"},{"doc":"Returns the Bondy agent identification string","ref":"bondy_router.html#agent/0","title":"bondy_router.agent/0","type":"function"},{"doc":"","ref":"bondy_router.html#close_context/1","title":"bondy_router.close_context/1","type":"function"},{"doc":"Forwards a WAMP message to the Dealer or Broker based on message type. The message might end up being handled synchronously (performed by the calling process i.e. the transport handler) or asynchronously (by sending the message to the router load regulated worker pool).","ref":"bondy_router.html#forward/2","title":"bondy_router.forward/2","type":"function"},{"doc":"","ref":"bondy_router.html#forward/3","title":"bondy_router.forward/3","type":"function"},{"doc":"Sends a GOODBYE message to all existing client connections. The client should reply with another GOODBYE within the configured time and when it does or on timeout, Bondy will close the connection triggering the cleanup of all the client sessions.","ref":"bondy_router.html#pre_stop/0","title":"bondy_router.pre_stop/0","type":"function"},{"doc":"","ref":"bondy_router.html#roles/0","title":"bondy_router.roles/0","type":"function"},{"doc":"","ref":"bondy_router.html#stop/0","title":"bondy_router.stop/0","type":"function"},{"doc":"","ref":"bondy_router.html#t:event/0","title":"bondy_router.event/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:id/0","title":"bondy_router.id/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:uri/0","title":"bondy_router.uri/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_abort/0","title":"bondy_router.wamp_abort/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_authenticate/0","title":"bondy_router.wamp_authenticate/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_call/0","title":"bondy_router.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_cancel/0","title":"bondy_router.wamp_cancel/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_challenge/0","title":"bondy_router.wamp_challenge/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_error/0","title":"bondy_router.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_event/0","title":"bondy_router.wamp_event/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_event_received/0","title":"bondy_router.wamp_event_received/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_goodbye/0","title":"bondy_router.wamp_goodbye/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_hello/0","title":"bondy_router.wamp_hello/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_interrupt/0","title":"bondy_router.wamp_interrupt/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_invocation/0","title":"bondy_router.wamp_invocation/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_message/0","title":"bondy_router.wamp_message/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_publish/0","title":"bondy_router.wamp_publish/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_published/0","title":"bondy_router.wamp_published/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_register/0","title":"bondy_router.wamp_register/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_registered/0","title":"bondy_router.wamp_registered/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_result/0","title":"bondy_router.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_subscribe/0","title":"bondy_router.wamp_subscribe/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_subscribed/0","title":"bondy_router.wamp_subscribed/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_subscriber_received/0","title":"bondy_router.wamp_subscriber_received/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_unregister/0","title":"bondy_router.wamp_unregister/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_unregistered/0","title":"bondy_router.wamp_unregistered/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_unsubscribe/0","title":"bondy_router.wamp_unsubscribe/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_unsubscribed/0","title":"bondy_router.wamp_unsubscribed/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_welcome/0","title":"bondy_router.wamp_welcome/0","type":"type"},{"doc":"","ref":"bondy_router.html#t:wamp_yield/0","title":"bondy_router.wamp_yield/0","type":"type"},{"doc":"","ref":"bondy_router_worker.html","title":"bondy_router_worker","type":"module"},{"doc":"","ref":"bondy_router_worker.html#cast/1","title":"bondy_router_worker.cast/1","type":"function"},{"doc":"","ref":"bondy_router_worker.html#code_change/3","title":"bondy_router_worker.code_change/3","type":"function"},{"doc":"","ref":"bondy_router_worker.html#handle_call/3","title":"bondy_router_worker.handle_call/3","type":"function"},{"doc":"","ref":"bondy_router_worker.html#handle_cast/2","title":"bondy_router_worker.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_router_worker.html#handle_info/2","title":"bondy_router_worker.handle_info/2","type":"function"},{"doc":"","ref":"bondy_router_worker.html#init/1","title":"bondy_router_worker.init/1","type":"function"},{"doc":"Starts a sidejob pool of workers according to the configuration for the entry named 'router_pool'.","ref":"bondy_router_worker.html#start_pool/0","title":"bondy_router_worker.start_pool/0","type":"function"},{"doc":"","ref":"bondy_router_worker.html#terminate/2","title":"bondy_router_worker.terminate/2","type":"function"},{"doc":"This module implements a distributed load balancer, providing the different load balancing strategies used by bondy_dealer to choose the Callee and Procedure to invoke when handling a WAMP Call. At the moment the load balancing state is local and not replicated across the nodes in the cluster. However, each node has access to a local replica of the global registry and thus can load balance between local and remote Callees. ## Supported Load Balancing Strategies Bondy supports all WAMP Basic and Advanced Profile load balancing strategies for Shared Registrations and extends those with additional strategies. ### Single ### First ### Last ### Random ### Round Robin ### Jump Consistent Hash ### Queue Least Loaded ### Queue Least Loaded Sample In the future we will explore implementing distributed load balancing algorithms such as Ant Colony, Particle Swarm Optimization and Biased Random Sampling [See references](https://pdfs.semanticscholar.org/b9a9/52ed1b8bfae2e976b5c0106e894bd4c41d89.pdf)","ref":"bondy_rpc_load_balancer.html","title":"bondy_rpc_load_balancer","type":"module"},{"doc":"","ref":"bondy_rpc_load_balancer.html#get/2","title":"bondy_rpc_load_balancer.get/2","type":"function"},{"doc":"","ref":"bondy_rpc_load_balancer.html#iterate/1","title":"bondy_rpc_load_balancer.iterate/1","type":"function"},{"doc":"","ref":"bondy_rpc_load_balancer.html#iterate/2","title":"bondy_rpc_load_balancer.iterate/2","type":"function"},{"doc":"","ref":"bondy_rpc_load_balancer.html#t:entries/0","title":"bondy_rpc_load_balancer.entries/0","type":"type"},{"doc":"","ref":"bondy_rpc_load_balancer.html#t:iterator/0","title":"bondy_rpc_load_balancer.iterator/0","type":"opaque"},{"doc":"","ref":"bondy_rpc_load_balancer.html#t:opts/0","title":"bondy_rpc_load_balancer.opts/0","type":"type"},{"doc":"","ref":"bondy_rpc_load_balancer.html#t:strategy/0","title":"bondy_rpc_load_balancer.strategy/0","type":"type"},{"doc":"","ref":"bondy_rpc_load_balancer.html#t:uri/0","title":"bondy_rpc_load_balancer.uri/0","type":"type"},{"doc":"A promise is used to implement a capability and a feature: - the capability to match the callee response (wamp_yield() or wamp_error()) back to the origin wamp_call() and Caller - the call_timeout feature at the dealer level","ref":"bondy_rpc_promise.html","title":"bondy_rpc_promise","type":"module"},{"doc":"Returns the call request identifier","ref":"bondy_rpc_promise.html#call_id/1","title":"bondy_rpc_promise.call_id/1","type":"function"},{"doc":"Returns the callee ( bondy_ref:t() ) that is the target of this invocation promise.","ref":"bondy_rpc_promise.html#callee/1","title":"bondy_rpc_promise.callee/1","type":"function"},{"doc":"Returns the caller ( bondy_ref:t() ) who made the call request associated with this invocation promise.","ref":"bondy_rpc_promise.html#caller/1","title":"bondy_rpc_promise.caller/1","type":"function"},{"doc":"Dequeues the promise that matches key pattern","ref":"bondy_rpc_promise.html#dequeue/1","title":"bondy_rpc_promise.dequeue/1","type":"function"},{"doc":"Dequeues the promise that matches key pattern","ref":"bondy_rpc_promise.html#dequeue/2","title":"bondy_rpc_promise.dequeue/2","type":"function"},{"doc":"Adds the invocation promise P to the promise queue for realm RealmUri using a timeout of Timeout . If the promise is not dequeued before Timeout milliseconds, the caller will receive an error with reason &quot;wamp.error.timeout&quot;.","ref":"bondy_rpc_promise.html#enqueue/3","title":"bondy_rpc_promise.enqueue/3","type":"function"},{"doc":"Removes all pending promises from the queue for the reference","ref":"bondy_rpc_promise.html#flush/1","title":"bondy_rpc_promise.flush/1","type":"function"},{"doc":"Returns the invocation request identifier","ref":"bondy_rpc_promise.html#invocation_id/1","title":"bondy_rpc_promise.invocation_id/1","type":"function"},{"doc":"Pattern for dequeueing","ref":"bondy_rpc_promise.html#key_pattern/5","title":"bondy_rpc_promise.key_pattern/5","type":"function"},{"doc":"Creates a new promise for a remote invocation. In this case the caller lives in a different node and has recorded a promise using new/5 in its node.","ref":"bondy_rpc_promise.html#new/3","title":"bondy_rpc_promise.new/3","type":"function"},{"doc":"Creates a new promise for a remote invocation. In this case the caller lives in a different node and has recorded a promise using new/5 in its node.","ref":"bondy_rpc_promise.html#new/4","title":"bondy_rpc_promise.new/4","type":"function"},{"doc":"Reads the promise that matches the key pattern","ref":"bondy_rpc_promise.html#peek/1","title":"bondy_rpc_promise.peek/1","type":"function"},{"doc":"","ref":"bondy_rpc_promise.html#procedure_uri/1","title":"bondy_rpc_promise.procedure_uri/1","type":"function"},{"doc":"","ref":"bondy_rpc_promise.html#queue_size/0","title":"bondy_rpc_promise.queue_size/0","type":"function"},{"doc":"","ref":"bondy_rpc_promise.html#timestamp/1","title":"bondy_rpc_promise.timestamp/1","type":"function"},{"doc":"Returns the queue of relays that are needed to forward an invocation result to the caller.","ref":"bondy_rpc_promise.html#via/1","title":"bondy_rpc_promise.via/1","type":"function"},{"doc":"","ref":"bondy_rpc_promise.html#t:dequeue_fun/0","title":"bondy_rpc_promise.dequeue_fun/0","type":"type"},{"doc":"","ref":"bondy_rpc_promise.html#t:id/0","title":"bondy_rpc_promise.id/0","type":"type"},{"doc":"","ref":"bondy_rpc_promise.html#t:key/0","title":"bondy_rpc_promise.key/0","type":"type"},{"doc":"","ref":"bondy_rpc_promise.html#t:match_opts/0","title":"bondy_rpc_promise.match_opts/0","type":"type"},{"doc":"","ref":"bondy_rpc_promise.html#t:nodestring/0","title":"bondy_rpc_promise.nodestring/0","type":"type"},{"doc":"","ref":"bondy_rpc_promise.html#t:opts/0","title":"bondy_rpc_promise.opts/0","type":"type"},{"doc":"","ref":"bondy_rpc_promise.html#t:t/0","title":"bondy_rpc_promise.t/0","type":"opaque"},{"doc":"","ref":"bondy_rpc_promise.html#t:uri/0","title":"bondy_rpc_promise.uri/0","type":"type"},{"doc":"","ref":"bondy_rpc_promise.html#t:wildcard/1","title":"bondy_rpc_promise.wildcard/1","type":"type"},{"doc":"This module implements a supervised process (gen_server) that acts as a local (internal) WAMP subscriber that when received an EVENT applies the user provided function. It is used by bondy_broker:subscribe/4 and bondy_broker:unsubscribe/1.","ref":"bondy_subscriber.html","title":"bondy_subscriber","type":"module"},{"doc":"","ref":"bondy_subscriber.html#code_change/3","title":"bondy_subscriber.code_change/3","type":"function"},{"doc":"","ref":"bondy_subscriber.html#handle_call/3","title":"bondy_subscriber.handle_call/3","type":"function"},{"doc":"","ref":"bondy_subscriber.html#handle_cast/2","title":"bondy_subscriber.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_subscriber.html#handle_event/2","title":"bondy_subscriber.handle_event/2","type":"function"},{"doc":"","ref":"bondy_subscriber.html#handle_event_sync/2","title":"bondy_subscriber.handle_event_sync/2","type":"function"},{"doc":"","ref":"bondy_subscriber.html#handle_info/2","title":"bondy_subscriber.handle_info/2","type":"function"},{"doc":"","ref":"bondy_subscriber.html#info/1","title":"bondy_subscriber.info/1","type":"function"},{"doc":"","ref":"bondy_subscriber.html#init/1","title":"bondy_subscriber.init/1","type":"function"},{"doc":"","ref":"bondy_subscriber.html#pid/1","title":"bondy_subscriber.pid/1","type":"function"},{"doc":"","ref":"bondy_subscriber.html#start_link/5","title":"bondy_subscriber.start_link/5","type":"function"},{"doc":"","ref":"bondy_subscriber.html#terminate/2","title":"bondy_subscriber.terminate/2","type":"function"},{"doc":"","ref":"bondy_subscriber.html#t:id/0","title":"bondy_subscriber.id/0","type":"type"},{"doc":"","ref":"bondy_subscriber.html#t:uri/0","title":"bondy_subscriber.uri/0","type":"type"},{"doc":"","ref":"bondy_subscribers_sup.html","title":"bondy_subscribers_sup","type":"module"},{"doc":"","ref":"bondy_subscribers_sup.html#init/1","title":"bondy_subscribers_sup.init/1","type":"function"},{"doc":"","ref":"bondy_subscribers_sup.html#start_link/0","title":"bondy_subscribers_sup.start_link/0","type":"function"},{"doc":"","ref":"bondy_subscribers_sup.html#start_subscriber/5","title":"bondy_subscribers_sup.start_subscriber/5","type":"function"},{"doc":"","ref":"bondy_subscribers_sup.html#terminate_subscriber/1","title":"bondy_subscribers_sup.terminate_subscriber/1","type":"function"},{"doc":"","ref":"bondy_subscribers_sup.html#t:id/0","title":"bondy_subscribers_sup.id/0","type":"type"},{"doc":"","ref":"bondy_subscribers_sup.html#t:uri/0","title":"bondy_subscribers_sup.uri/0","type":"type"},{"doc":"","ref":"bondy_wamp_callback.html","title":"bondy_wamp_callback","type":"behaviour"},{"doc":"Returns true is module Mod conforms with this behaviour.","ref":"bondy_wamp_callback.html#conforms/1","title":"bondy_wamp_callback.conforms/1","type":"function"},{"doc":"","ref":"bondy_wamp_callback.html#c:handle_call/2","title":"bondy_wamp_callback.handle_call/2","type":"callback"},{"doc":"","ref":"bondy_wamp_callback.html#validate_target/1","title":"bondy_wamp_callback.validate_target/1","type":"function"},{"doc":"","ref":"bondy_wamp_callback.html#validate_target/2","title":"bondy_wamp_callback.validate_target/2","type":"function"},{"doc":"","ref":"bondy_wamp_callback.html#t:maybe/1","title":"bondy_wamp_callback.maybe/1","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html","title":"bondy_wamp_protocol","type":"module"},{"doc":"","ref":"bondy_wamp_protocol.html#agent/1","title":"bondy_wamp_protocol.agent/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#context/1","title":"bondy_wamp_protocol.context/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#format_status/2","title":"bondy_wamp_protocol.format_status/2","type":"function"},{"doc":"Handles wamp frames, decoding 1 or more messages, routing them and replying when required.","ref":"bondy_wamp_protocol.html#handle_inbound/2","title":"bondy_wamp_protocol.handle_inbound/2","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#handle_outbound/2","title":"bondy_wamp_protocol.handle_outbound/2","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#init/3","title":"bondy_wamp_protocol.init/3","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#peer/1","title":"bondy_wamp_protocol.peer/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#realm_uri/1","title":"bondy_wamp_protocol.realm_uri/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#ref/1","title":"bondy_wamp_protocol.ref/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#session_id/1","title":"bondy_wamp_protocol.session_id/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#terminate/1","title":"bondy_wamp_protocol.terminate/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#validate_subprotocol/1","title":"bondy_wamp_protocol.validate_subprotocol/1","type":"function"},{"doc":"","ref":"bondy_wamp_protocol.html#t:encoding/0","title":"bondy_wamp_protocol.encoding/0","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html#t:frame_type/0","title":"bondy_wamp_protocol.frame_type/0","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html#t:id/0","title":"bondy_wamp_protocol.id/0","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html#t:raw_wamp_message/0","title":"bondy_wamp_protocol.raw_wamp_message/0","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html#t:state/0","title":"bondy_wamp_protocol.state/0","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html#t:state_name/0","title":"bondy_wamp_protocol.state_name/0","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html#t:subprotocol/0","title":"bondy_wamp_protocol.subprotocol/0","type":"type"},{"doc":"","ref":"bondy_wamp_protocol.html#t:transport/0","title":"bondy_wamp_protocol.transport/0","type":"type"},{"doc":"A Session (wamp session) is a transient conversation between two WAMP Peers attached to a Realm and running over a Transport. Bondy implementation ties the lifetime of the underlying transport connection for a WAMP connection to that of a WAMP Session i.e. establish a new transport-layer connection as part of each new session establishment. A Bondy Session is a not an application Session and is not a store for application specific content (an application session store should be implemented as a service i.e. a Callee). Currently sessions are not persistent i.e. if the connection closes the session data will be lost.","ref":"bondy_session.html","title":"bondy_session","type":"module"},{"doc":"","ref":"bondy_session.html#agent/1","title":"bondy_session.agent/1","type":"function"},{"doc":"","ref":"bondy_session.html#authid/1","title":"bondy_session.authid/1","type":"function"},{"doc":"","ref":"bondy_session.html#authmethod/1","title":"bondy_session.authmethod/1","type":"function"},{"doc":"","ref":"bondy_session.html#authrole/1","title":"bondy_session.authrole/1","type":"function"},{"doc":"","ref":"bondy_session.html#authroles/1","title":"bondy_session.authroles/1","type":"function"},{"doc":"","ref":"bondy_session.html#close/1","title":"bondy_session.close/1","type":"function"},{"doc":"Returns the time at which the session was created, Its value is a timestamp in seconds.","ref":"bondy_session.html#created/1","title":"bondy_session.created/1","type":"function"},{"doc":"Retrieves the session identified by Id from the tuplespace. If the session does not exist it fails with reason '{badarg, Id}'.","ref":"bondy_session.html#fetch/1","title":"bondy_session.fetch/1","type":"function"},{"doc":"","ref":"bondy_session.html#format_status/2","title":"bondy_session.format_status/2","type":"function"},{"doc":"","ref":"bondy_session.html#id/1","title":"bondy_session.id/1","type":"function"},{"doc":"","ref":"bondy_session.html#incr_seq/1","title":"bondy_session.incr_seq/1","type":"function"},{"doc":"","ref":"bondy_session.html#info/1","title":"bondy_session.info/1","type":"function"},{"doc":"","ref":"bondy_session.html#is_security_enabled/1","title":"bondy_session.is_security_enabled/1","type":"function"},{"doc":"","ref":"bondy_session.html#list/0","title":"bondy_session.list/0","type":"function"},{"doc":"","ref":"bondy_session.html#list/1","title":"bondy_session.list/1","type":"function"},{"doc":"","ref":"bondy_session.html#list_refs/1","title":"bondy_session.list_refs/1","type":"function"},{"doc":"","ref":"bondy_session.html#list_refs/2","title":"bondy_session.list_refs/2","type":"function"},{"doc":"Retrieves the session identified by Id from the tuplespace or 'not_found' if it doesn't exist.","ref":"bondy_session.html#lookup/1","title":"bondy_session.lookup/1","type":"function"},{"doc":"Retrieves the session identified by Id from the tuplespace or 'not_found' if it doesn't exist.","ref":"bondy_session.html#lookup/2","title":"bondy_session.lookup/2","type":"function"},{"doc":"Creates a new transient session (not persisted)","ref":"bondy_session.html#new/2","title":"bondy_session.new/2","type":"function"},{"doc":"","ref":"bondy_session.html#new/3","title":"bondy_session.new/3","type":"function"},{"doc":"Returns the node of the process managing the transport that the session identified by Id runs on.","ref":"bondy_session.html#node/1","title":"bondy_session.node/1","type":"function"},{"doc":"Returns the node of the process managing the transport that the session identified by Id runs on.","ref":"bondy_session.html#nodestring/1","title":"bondy_session.nodestring/1","type":"function"},{"doc":"","ref":"bondy_session.html#peer/1","title":"bondy_session.peer/1","type":"function"},{"doc":"Returns the pid of the process managing the transport that the session identified by Id runs on.","ref":"bondy_session.html#pid/1","title":"bondy_session.pid/1","type":"function"},{"doc":"","ref":"bondy_session.html#rbac_context/1","title":"bondy_session.rbac_context/1","type":"function"},{"doc":"","ref":"bondy_session.html#realm_uri/1","title":"bondy_session.realm_uri/1","type":"function"},{"doc":"Returns the identifier for the owner of this session","ref":"bondy_session.html#ref/1","title":"bondy_session.ref/1","type":"function"},{"doc":"","ref":"bondy_session.html#refresh_rbac_context/1","title":"bondy_session.refresh_rbac_context/1","type":"function"},{"doc":"","ref":"bondy_session.html#roles/1","title":"bondy_session.roles/1","type":"function"},{"doc":"Returns the number of sessions in the tuplespace.","ref":"bondy_session.html#size/0","title":"bondy_session.size/0","type":"function"},{"doc":"Creates a new session provided the RealmUri exists or can be dynamically created. It calls bondy_utils:get_realm/1 which will fail with an exception if the realm does not exist or cannot be created -----------------------------------------------------------------------------","ref":"bondy_session.html#store/1","title":"bondy_session.store/1","type":"function"},{"doc":"","ref":"bondy_session.html#to_external/1","title":"bondy_session.to_external/1","type":"function"},{"doc":"","ref":"bondy_session.html#type/1","title":"bondy_session.type/1","type":"function"},{"doc":"","ref":"bondy_session.html#update/1","title":"bondy_session.update/1","type":"function"},{"doc":"","ref":"bondy_session.html#user/1","title":"bondy_session.user/1","type":"function"},{"doc":"","ref":"bondy_session.html#t:details/0","title":"bondy_session.details/0","type":"type"},{"doc":"","ref":"bondy_session.html#t:id/0","title":"bondy_session.id/0","type":"type"},{"doc":"","ref":"bondy_session.html#t:maybe/1","title":"bondy_session.maybe/1","type":"type"},{"doc":"","ref":"bondy_session.html#t:nodestring/0","title":"bondy_session.nodestring/0","type":"type"},{"doc":"","ref":"bondy_session.html#t:peer/0","title":"bondy_session.peer/0","type":"type"},{"doc":"","ref":"bondy_session.html#t:properties/0","title":"bondy_session.properties/0","type":"type"},{"doc":"","ref":"bondy_session.html#t:t/0","title":"bondy_session.t/0","type":"type"},{"doc":"","ref":"bondy_session.html#t:uri/0","title":"bondy_session.uri/0","type":"type"},{"doc":"","ref":"bondy_session_manager.html","title":"bondy_session_manager","type":"module"},{"doc":"","ref":"bondy_session_manager.html#close/1","title":"bondy_session_manager.close/1","type":"function"},{"doc":"","ref":"bondy_session_manager.html#code_change/3","title":"bondy_session_manager.code_change/3","type":"function"},{"doc":"","ref":"bondy_session_manager.html#handle_call/3","title":"bondy_session_manager.handle_call/3","type":"function"},{"doc":"","ref":"bondy_session_manager.html#handle_cast/2","title":"bondy_session_manager.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_session_manager.html#handle_info/2","title":"bondy_session_manager.handle_info/2","type":"function"},{"doc":"","ref":"bondy_session_manager.html#init/1","title":"bondy_session_manager.init/1","type":"function"},{"doc":"Creates a new session provided the RealmUri exists or can be dynamically created. It calls bondy_session:new/4 which will fail with an exception if the realm does not exist or cannot be created. This function also sets up a monitor for the calling process which is assummed to be the client connection process e.g. WAMP connection. In case the connection crashes it performs the cleanup of any session data that should not be retained. -----------------------------------------------------------------------------","ref":"bondy_session_manager.html#open/3","title":"bondy_session_manager.open/3","type":"function"},{"doc":"","ref":"bondy_session_manager.html#pool/0","title":"bondy_session_manager.pool/0","type":"function"},{"doc":"","ref":"bondy_session_manager.html#pool_size/0","title":"bondy_session_manager.pool_size/0","type":"function"},{"doc":"","ref":"bondy_session_manager.html#start_link/2","title":"bondy_session_manager.start_link/2","type":"function"},{"doc":"","ref":"bondy_session_manager.html#terminate/2","title":"bondy_session_manager.terminate/2","type":"function"},{"doc":"","ref":"bondy_session_manager.html#t:uri/0","title":"bondy_session_manager.uri/0","type":"type"},{"doc":"","ref":"bondy_session_manager_sup.html","title":"bondy_session_manager_sup","type":"module"},{"doc":"","ref":"bondy_session_manager_sup.html#init/1","title":"bondy_session_manager_sup.init/1","type":"function"},{"doc":"","ref":"bondy_session_manager_sup.html#start_link/0","title":"bondy_session_manager_sup.start_link/0","type":"function"},{"doc":"This module encapsulates several operations on the ranch library and it is used by all other modules to setup and manage TCP and TLS listeners.","ref":"bondy_ranch_listener.html","title":"bondy_ranch_listener","type":"module"},{"doc":"","ref":"bondy_ranch_listener.html#connections/1","title":"bondy_ranch_listener.connections/1","type":"function"},{"doc":"","ref":"bondy_ranch_listener.html#resume/1","title":"bondy_ranch_listener.resume/1","type":"function"},{"doc":"Conditionally starts a listener wirth reference Ref . References for each listener is defined by the bondy.schema file.","ref":"bondy_ranch_listener.html#start/3","title":"bondy_ranch_listener.start/3","type":"function"},{"doc":"","ref":"bondy_ranch_listener.html#stop/1","title":"bondy_ranch_listener.stop/1","type":"function"},{"doc":"","ref":"bondy_ranch_listener.html#suspend/1","title":"bondy_ranch_listener.suspend/1","type":"function"},{"doc":"Returns the transport and transport options to be used wirh listener Ref . The definition of the listeners in bondy.schema MUST match this structure. - Ref - port - acceptors_pool_size - max_connections - backlog - max_connections - max_connections - socket_opts - keepalive - nodelay - sndbuf - recbuf - buffer - certfile (TLS) - keyfile (TLS) - keyfile (TLS) - versions (TLS)","ref":"bondy_ranch_listener.html#transport_opts/1","title":"bondy_ranch_listener.transport_opts/1","type":"function"},{"doc":"","ref":"bondy_retry.html","title":"bondy_retry","type":"module"},{"doc":"","ref":"bondy_retry.html#fail/1","title":"bondy_retry.fail/1","type":"function"},{"doc":"","ref":"bondy_retry.html#fire/1","title":"bondy_retry.fire/1","type":"function"},{"doc":"Returns the current timer value.","ref":"bondy_retry.html#get/1","title":"bondy_retry.get/1","type":"function"},{"doc":"","ref":"bondy_retry.html#init/2","title":"bondy_retry.init/2","type":"function"},{"doc":"","ref":"bondy_retry.html#succeed/1","title":"bondy_retry.succeed/1","type":"function"},{"doc":"","ref":"bondy_retry.html#t:maybe/1","title":"bondy_retry.maybe/1","type":"type"},{"doc":"","ref":"bondy_retry.html#t:opt/0","title":"bondy_retry.opt/0","type":"type"},{"doc":"","ref":"bondy_retry.html#t:opts/0","title":"bondy_retry.opts/0","type":"type"},{"doc":"","ref":"bondy_retry.html#t:opts_map/0","title":"bondy_retry.opts_map/0","type":"type"},{"doc":"","ref":"bondy_retry.html#t:t/0","title":"bondy_retry.t/0","type":"type"},{"doc":"","ref":"bondy_wamp_tcp.html","title":"bondy_wamp_tcp","type":"module"},{"doc":"","ref":"bondy_wamp_tcp.html#connections/0","title":"bondy_wamp_tcp.connections/0","type":"function"},{"doc":"","ref":"bondy_wamp_tcp.html#resume_listeners/0","title":"bondy_wamp_tcp.resume_listeners/0","type":"function"},{"doc":"Starts the tcp and tls raw socket listeners","ref":"bondy_wamp_tcp.html#start_listeners/0","title":"bondy_wamp_tcp.start_listeners/0","type":"function"},{"doc":"","ref":"bondy_wamp_tcp.html#stop_listeners/0","title":"bondy_wamp_tcp.stop_listeners/0","type":"function"},{"doc":"","ref":"bondy_wamp_tcp.html#suspend_listeners/0","title":"bondy_wamp_tcp.suspend_listeners/0","type":"function"},{"doc":"","ref":"bondy_wamp_tcp.html#tcp_connections/0","title":"bondy_wamp_tcp.tcp_connections/0","type":"function"},{"doc":"","ref":"bondy_wamp_tcp.html#tls_connections/0","title":"bondy_wamp_tcp.tls_connections/0","type":"function"},{"doc":"A ranch handler for the wamp protocol over either tcp or tls transports.","ref":"bondy_wamp_tcp_connection_handler.html","title":"bondy_wamp_tcp_connection_handler","type":"module"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#code_change/3","title":"bondy_wamp_tcp_connection_handler.code_change/3","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#format_status/2","title":"bondy_wamp_tcp_connection_handler.format_status/2","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#handle_call/3","title":"bondy_wamp_tcp_connection_handler.handle_call/3","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#handle_cast/2","title":"bondy_wamp_tcp_connection_handler.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#handle_info/2","title":"bondy_wamp_tcp_connection_handler.handle_info/2","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#init/1","title":"bondy_wamp_tcp_connection_handler.init/1","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#start_link/4","title":"bondy_wamp_tcp_connection_handler.start_link/4","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#terminate/2","title":"bondy_wamp_tcp_connection_handler.terminate/2","type":"function"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#t:frame_type/0","title":"bondy_wamp_tcp_connection_handler.frame_type/0","type":"type"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#t:raw_error/0","title":"bondy_wamp_tcp_connection_handler.raw_error/0","type":"type"},{"doc":"","ref":"bondy_wamp_tcp_connection_handler.html#t:state/0","title":"bondy_wamp_tcp_connection_handler.state/0","type":"type"},{"doc":"A Cowboy WS handler. Each WAMP message is transmitted as a separate WebSocket message (not WebSocket frame) The WAMP protocol MUST BE negotiated during the WebSocket opening handshake between Peers using the WebSocket subprotocol negotiation mechanism. WAMP uses the following WebSocket subprotocol identifiers for unbatched modes: * &quot;wamp.2.json&quot; * &quot;wamp.2.msgpack&quot; With &quot;wamp.2.json&quot;, _all_ WebSocket messages MUST BE of type *text* (UTF8 encoded) and use the JSON message serialization. With &quot;wamp.2.msgpack&quot;, _all_ WebSocket messages MUST BE of type *binary* and use the MsgPack message serialization. To avoid incompatibilities merely due to naming conflicts with WebSocket subprotocol identifiers, implementers SHOULD register identifiers for additional serialization formats with the official WebSocket subprotocol registry.","ref":"bondy_wamp_ws_connection_handler.html","title":"bondy_wamp_ws_connection_handler","type":"module"},{"doc":"","ref":"bondy_wamp_ws_connection_handler.html#init/2","title":"bondy_wamp_ws_connection_handler.init/2","type":"function"},{"doc":"Termination","ref":"bondy_wamp_ws_connection_handler.html#terminate/3","title":"bondy_wamp_ws_connection_handler.terminate/3","type":"function"},{"doc":"Handles frames sent by client","ref":"bondy_wamp_ws_connection_handler.html#websocket_handle/2","title":"bondy_wamp_ws_connection_handler.websocket_handle/2","type":"function"},{"doc":"Handles internal erlang messages and WAMP messages BONDY wants to send to the client. See bondy:send/2 .","ref":"bondy_wamp_ws_connection_handler.html#websocket_info/2","title":"bondy_wamp_ws_connection_handler.websocket_info/2","type":"function"},{"doc":"Initialises the WS connection.","ref":"bondy_wamp_ws_connection_handler.html#websocket_init/1","title":"bondy_wamp_ws_connection_handler.websocket_init/1","type":"function"},{"doc":"","ref":"bondy_wamp_ws_connection_handler.html#t:state/0","title":"bondy_wamp_ws_connection_handler.state/0","type":"type"},{"doc":"","ref":"bondy_edge.html","title":"bondy_edge","type":"module"},{"doc":"","ref":"bondy_edge.html#connections/0","title":"bondy_edge.connections/0","type":"function"},{"doc":"","ref":"bondy_edge.html#resume_listeners/0","title":"bondy_edge.resume_listeners/0","type":"function"},{"doc":"Starts the tcp and tls raw socket listeners","ref":"bondy_edge.html#start_listeners/0","title":"bondy_edge.start_listeners/0","type":"function"},{"doc":"Starts the tcp and tls raw socket listeners","ref":"bondy_edge.html#start_uplinks/0","title":"bondy_edge.start_uplinks/0","type":"function"},{"doc":"","ref":"bondy_edge.html#stop_listeners/0","title":"bondy_edge.stop_listeners/0","type":"function"},{"doc":"","ref":"bondy_edge.html#suspend_listeners/0","title":"bondy_edge.suspend_listeners/0","type":"function"},{"doc":"","ref":"bondy_edge.html#tcp_connections/0","title":"bondy_edge.tcp_connections/0","type":"function"},{"doc":"","ref":"bondy_edge.html#tls_connections/0","title":"bondy_edge.tls_connections/0","type":"function"},{"doc":"","ref":"bondy_edge_exchanges_sup.html","title":"bondy_edge_exchanges_sup","type":"module"},{"doc":"","ref":"bondy_edge_exchanges_sup.html#init/1","title":"bondy_edge_exchanges_sup.init/1","type":"function"},{"doc":"Starts a new exchange provided we would not reach the limit set by the aae_concurrency config parameter. If the limit is reached returns the error tuple {error, concurrency_limit}","ref":"bondy_edge_exchanges_sup.html#start_exchange/3","title":"bondy_edge_exchanges_sup.start_exchange/3","type":"function"},{"doc":"","ref":"bondy_edge_exchanges_sup.html#start_link/0","title":"bondy_edge_exchanges_sup.start_link/0","type":"function"},{"doc":"","ref":"bondy_edge_exchanges_sup.html#stop_exchange/1","title":"bondy_edge_exchanges_sup.stop_exchange/1","type":"function"},{"doc":"","ref":"bondy_edge_session.html","title":"bondy_edge_session","type":"module"},{"doc":"","ref":"bondy_edge_session.html#t:id/0","title":"bondy_edge_session.id/0","type":"type"},{"doc":"","ref":"bondy_edge_session.html#t:t/0","title":"bondy_edge_session.t/0","type":"type"},{"doc":"","ref":"bondy_edge_session.html#t:uri/0","title":"bondy_edge_session.uri/0","type":"type"},{"doc":"EARLY DRAFT implementation of the client-side connection between and edge node (client) and a remote/core node (server).","ref":"bondy_edge_uplink_client.html","title":"bondy_edge_uplink_client","type":"module"},{"doc":"","ref":"bondy_edge_uplink_client.html#callback_mode/0","title":"bondy_edge_uplink_client.callback_mode/0","type":"function"},{"doc":"","ref":"bondy_edge_uplink_client.html#code_change/4","title":"bondy_edge_uplink_client.code_change/4","type":"function"},{"doc":"The edge router established the uplink connection with the core router. At this point the edge router has noy yet joined any realms.","ref":"bondy_edge_uplink_client.html#connected/3","title":"bondy_edge_uplink_client.connected/3","type":"function"},{"doc":"The edge router is trying to establish an uplink connection to the core router. If reconnect is configured it will retry using the reconnect options defined.","ref":"bondy_edge_uplink_client.html#connecting/3","title":"bondy_edge_uplink_client.connecting/3","type":"function"},{"doc":"","ref":"bondy_edge_uplink_client.html#forward/3","title":"bondy_edge_uplink_client.forward/3","type":"function"},{"doc":"","ref":"bondy_edge_uplink_client.html#init/1","title":"bondy_edge_uplink_client.init/1","type":"function"},{"doc":"","ref":"bondy_edge_uplink_client.html#start_link/3","title":"bondy_edge_uplink_client.start_link/3","type":"function"},{"doc":"","ref":"bondy_edge_uplink_client.html#terminate/3","title":"bondy_edge_uplink_client.terminate/3","type":"function"},{"doc":"","ref":"bondy_edge_uplink_client.html#t:maybe/1","title":"bondy_edge_uplink_client.maybe/1","type":"type"},{"doc":"","ref":"bondy_edge_uplink_client.html#t:sessions/0","title":"bondy_edge_uplink_client.sessions/0","type":"type"},{"doc":"","ref":"bondy_edge_uplink_client.html#t:t/0","title":"bondy_edge_uplink_client.t/0","type":"type"},{"doc":"","ref":"bondy_edge_uplink_client.html#t:uri/0","title":"bondy_edge_uplink_client.uri/0","type":"type"},{"doc":"","ref":"bondy_edge_uplink_client_sup.html","title":"bondy_edge_uplink_client_sup","type":"module"},{"doc":"","ref":"bondy_edge_uplink_client_sup.html#init/1","title":"bondy_edge_uplink_client_sup.init/1","type":"function"},{"doc":"","ref":"bondy_edge_uplink_client_sup.html#start_link/0","title":"bondy_edge_uplink_client_sup.start_link/0","type":"function"},{"doc":"EARLY DRAFT implementation of the server-side connection between and edge node (client) and a remote/core node (server).","ref":"bondy_edge_uplink_server.html","title":"bondy_edge_uplink_server","type":"module"},{"doc":"","ref":"bondy_edge_uplink_server.html#callback_mode/0","title":"bondy_edge_uplink_server.callback_mode/0","type":"function"},{"doc":"","ref":"bondy_edge_uplink_server.html#code_change/4","title":"bondy_edge_uplink_server.code_change/4","type":"function"},{"doc":"","ref":"bondy_edge_uplink_server.html#connected/3","title":"bondy_edge_uplink_server.connected/3","type":"function"},{"doc":"","ref":"bondy_edge_uplink_server.html#init/1","title":"bondy_edge_uplink_server.init/1","type":"function"},{"doc":"","ref":"bondy_edge_uplink_server.html#start_link/3","title":"bondy_edge_uplink_server.start_link/3","type":"function"},{"doc":"This will be deprecated with Ranch 2.0","ref":"bondy_edge_uplink_server.html#start_link/4","title":"bondy_edge_uplink_server.start_link/4","type":"function"},{"doc":"","ref":"bondy_edge_uplink_server.html#terminate/3","title":"bondy_edge_uplink_server.terminate/3","type":"function"},{"doc":"This state machine is reponsible for discovering Bondy cluster peers using the defined implementation backend (callback module). Its behaviour can be configured using the cluster.peer_discovery family of bondy.conf options. If the agent is enabled ( cluster.peer_discovery.enabled ) and the Bondy node has not yet joined a cluster, it will lookup for peers using the defined implementation backend callback module ( cluster.peer_discovery.type ).","ref":"bondy_peer_discovery_agent.html","title":"bondy_peer_discovery_agent","type":"behaviour"},{"doc":"","ref":"bondy_peer_discovery_agent.html#callback_mode/0","title":"bondy_peer_discovery_agent.callback_mode/0","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#code_change/4","title":"bondy_peer_discovery_agent.code_change/4","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#disable/0","title":"bondy_peer_discovery_agent.disable/0","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#disabled/3","title":"bondy_peer_discovery_agent.disabled/3","type":"function"},{"doc":"In this state the agent uses the callback module to discover peers by calling its lookup/2 callback.","ref":"bondy_peer_discovery_agent.html#discovering/3","title":"bondy_peer_discovery_agent.discovering/3","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#enable/0","title":"bondy_peer_discovery_agent.enable/0","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#format_status/2","title":"bondy_peer_discovery_agent.format_status/2","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#init/1","title":"bondy_peer_discovery_agent.init/1","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#c:init/1","title":"bondy_peer_discovery_agent.init/1","type":"callback"},{"doc":"","ref":"bondy_peer_discovery_agent.html#joined/3","title":"bondy_peer_discovery_agent.joined/3","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#lookup/0","title":"bondy_peer_discovery_agent.lookup/0","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#c:lookup/2","title":"bondy_peer_discovery_agent.lookup/2","type":"callback"},{"doc":"","ref":"bondy_peer_discovery_agent.html#start/0","title":"bondy_peer_discovery_agent.start/0","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#start_link/0","title":"bondy_peer_discovery_agent.start_link/0","type":"function"},{"doc":"","ref":"bondy_peer_discovery_agent.html#terminate/3","title":"bondy_peer_discovery_agent.terminate/3","type":"function"},{"doc":"An implementation of the bondy_peer_discovery_agent behaviour that uses DNS for service discovery. It is enabled by using the following options in the bondy.conf file bash cluster . peer_discovery_agent . type = bondy_peer_discovery_dns_agent cluster . peer_discovery_agent . config . service_name = my - service - name Where service_name is the service to be used by the DNS lookup.","ref":"bondy_peer_discovery_dns_agent.html","title":"bondy_peer_discovery_dns_agent","type":"module"},{"doc":"","ref":"bondy_peer_discovery_dns_agent.html#init/1","title":"bondy_peer_discovery_dns_agent.init/1","type":"function"},{"doc":"","ref":"bondy_peer_discovery_dns_agent.html#lookup/2","title":"bondy_peer_discovery_dns_agent.lookup/2","type":"function"},{"doc":"An implementation of the bondy_peer_discovery_agent behaviour that uses a static list of node names for service discovery. It is enabled by using the following options in the bondy.conf file bash cluster . peer_discovery_agent . type = bondy_peer_discovery_static_agent cluster . peer_discovery_agent . config . seed = HOSTNAME Where HOSTNAME is the name of a bondy node.","ref":"bondy_peer_discovery_static_agent.html","title":"bondy_peer_discovery_static_agent","type":"module"},{"doc":"","ref":"bondy_peer_discovery_static_agent.html#init/1","title":"bondy_peer_discovery_static_agent.init/1","type":"function"},{"doc":"","ref":"bondy_peer_discovery_static_agent.html#lookup/2","title":"bondy_peer_discovery_static_agent.lookup/2","type":"function"},{"doc":"","ref":"bondy_peer_message.html","title":"bondy_peer_message","type":"module"},{"doc":"","ref":"bondy_peer_message.html#from/1","title":"bondy_peer_message.from/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#id/1","title":"bondy_peer_message.id/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#is_message/1","title":"bondy_peer_message.is_message/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#new/4","title":"bondy_peer_message.new/4","type":"function"},{"doc":"","ref":"bondy_peer_message.html#node/1","title":"bondy_peer_message.node/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#options/1","title":"bondy_peer_message.options/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#payload/1","title":"bondy_peer_message.payload/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#payload_type/1","title":"bondy_peer_message.payload_type/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#realm_uri/1","title":"bondy_peer_message.realm_uri/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#to/1","title":"bondy_peer_message.to/1","type":"function"},{"doc":"","ref":"bondy_peer_message.html#t:t/0","title":"bondy_peer_message.t/0","type":"opaque"},{"doc":"Based on: github.com/lasp-lang/lasp/...lasp_peer_service.erl","ref":"bondy_peer_service.html","title":"bondy_peer_service","type":"behaviour"},{"doc":"Forward message to registered process on the remote side.","ref":"bondy_peer_service.html#forward_message/3","title":"bondy_peer_service.forward_message/3","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:forward_message/3","title":"bondy_peer_service.forward_message/3","type":"callback"},{"doc":"","ref":"bondy_peer_service.html#forward_message/4","title":"bondy_peer_service.forward_message/4","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:forward_message/4","title":"bondy_peer_service.forward_message/4","type":"callback"},{"doc":"","ref":"bondy_peer_service.html#forward_message/5","title":"bondy_peer_service.forward_message/5","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:forward_message/5","title":"bondy_peer_service.forward_message/5","type":"callback"},{"doc":"Prepare node to join a cluster.","ref":"bondy_peer_service.html#join/1","title":"bondy_peer_service.join/1","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:join/1","title":"bondy_peer_service.join/1","type":"callback"},{"doc":"Convert nodename to atom.","ref":"bondy_peer_service.html#join/2","title":"bondy_peer_service.join/2","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:join/2","title":"bondy_peer_service.join/2","type":"callback"},{"doc":"Initiate join. Nodes cannot join themselves.","ref":"bondy_peer_service.html#join/3","title":"bondy_peer_service.join/3","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:join/3","title":"bondy_peer_service.join/3","type":"callback"},{"doc":"Leave the cluster.","ref":"bondy_peer_service.html#leave/0","title":"bondy_peer_service.leave/0","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:leave/0","title":"bondy_peer_service.leave/0","type":"callback"},{"doc":"Leave the cluster.","ref":"bondy_peer_service.html#leave/1","title":"bondy_peer_service.leave/1","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:leave/1","title":"bondy_peer_service.leave/1","type":"callback"},{"doc":"Return manager.","ref":"bondy_peer_service.html#manager/0","title":"bondy_peer_service.manager/0","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:manager/0","title":"bondy_peer_service.manager/0","type":"callback"},{"doc":"Return cluster members.","ref":"bondy_peer_service.html#members/0","title":"bondy_peer_service.members/0","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:members/0","title":"bondy_peer_service.members/0","type":"callback"},{"doc":"Return myself.","ref":"bondy_peer_service.html#mynode/0","title":"bondy_peer_service.mynode/0","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:mynode/0","title":"bondy_peer_service.mynode/0","type":"callback"},{"doc":"Return myself.","ref":"bondy_peer_service.html#myself/0","title":"bondy_peer_service.myself/0","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:myself/0","title":"bondy_peer_service.myself/0","type":"callback"},{"doc":"Return the currently active peer service.","ref":"bondy_peer_service.html#peer_service/0","title":"bondy_peer_service.peer_service/0","type":"function"},{"doc":"The list of cluster members excluding ourselves","ref":"bondy_peer_service.html#peers/0","title":"bondy_peer_service.peers/0","type":"function"},{"doc":"Stop node.","ref":"bondy_peer_service.html#stop/0","title":"bondy_peer_service.stop/0","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:stop/0","title":"bondy_peer_service.stop/0","type":"callback"},{"doc":"Stop node for a given reason.","ref":"bondy_peer_service.html#stop/1","title":"bondy_peer_service.stop/1","type":"function"},{"doc":"","ref":"bondy_peer_service.html#c:stop/1","title":"bondy_peer_service.stop/1","type":"callback"},{"doc":"","ref":"bondy_peer_service.html#t:partisan_peer/0","title":"bondy_peer_service.partisan_peer/0","type":"type"},{"doc":"A gen_server that forwards INVOCATION (their RESULT or ERROR), INTERRUPT and EVENT messages between WAMP clients connected to different Bondy peers (nodes). + -- -- -- -- -- -- -- -- -- -- -- -- - + + -- -- -- -- -- -- -- -- -- -- -- -- - + | node_1 | | node_2 | | | | | | | | | | + -- -- -- -- -- -- -- -- -- -- - + | cast_message | + -- -- -- -- -- -- -- -- -- -- - + | | | partisan_peer_service | | | | partisan_peer_service | | | | _ manager | &lt; + -- -- -- -- -- -- -- -- -- -- + &gt; | _ manager | | | | | | | | | | | + -- -- -- -- -- -- -- -- -- -- - + | | + -- -- -- -- -- -- -- -- -- -- - + | | ^ | | | | ^ | | | v | | v | | | | + -- -- -- -- -- -- -- - + | | + -- -- -- -- -- -- -- - + | | | | | bondy_peer_wamp | | | | bondy_peer_wamp | | | | | | _ relay | | | | _ relay | | | | | | | | | | | | | | | + -- -- -- -- -- -- -- - + | | + -- -- -- -- -- -- -- - + | | | | | | | | | | | | | | | | | | | | | | | | | | | | v | | v | | | + -- -- -- -- -- -- -- -- -- -- - + | | + -- -- -- -- -- -- -- -- -- -- - + | | | Worker | | | | Worker | | | | ( router_pool ) | | | | ( router_pool ) | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | + -- -- -- -- -- -- -- -- -- -- - + | | + -- -- -- -- -- -- -- -- -- -- - + | | ^ | | | | ^ | | | | | | | | | | | v | | v | | | + -- -- -- -- -- -- -- -- -- -- - + | | + -- -- -- -- -- -- -- -- -- -- - + | | | bondy_wamp_ * _ handler | | | | bondy_wamp_ * _ handler | | | | | | | | | | | | | | | | | | | + -- -- -- -- -- -- -- -- -- -- - + | | + -- -- -- -- -- -- -- -- -- -- - + | | ^ | | | | ^ | | | | | | | | | + -- -- -- -- - + -- -- + -- -- -- -- -- + + -- -- -- -- -- + -- - + -- -- -- -- -- + | | | | | | | | CALL | | RESULT | ERROR INVOCATION | | YIELD | | | | | v v | + -- -- -- -- -- -- -- -- -- -- -- -- - + + -- -- -- -- -- -- -- -- -- -- -- -- - + | Caller | | Callee | | | | | | | | | + -- -- -- -- -- -- -- -- -- -- -- -- - + + -- -- -- -- -- -- -- -- -- -- -- -- - +","ref":"bondy_peer_wamp_relay.html","title":"bondy_peer_wamp_relay","type":"module"},{"doc":"","ref":"bondy_peer_wamp_relay.html#async_forward/3","title":"bondy_peer_wamp_relay.async_forward/3","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#broadcast/4","title":"bondy_peer_wamp_relay.broadcast/4","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#code_change/3","title":"bondy_peer_wamp_relay.code_change/3","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#forward/2","title":"bondy_peer_wamp_relay.forward/2","type":"function"},{"doc":"Forwards a wamp message to a peer (cluster node). It returns ok when the remote bondy_peer_wamp_relay acknoledges the reception of the message, but it does not imply the message handler has actually received the message. This only works for PUBLISH, ERROR, INTERRUPT, INVOCATION and RESULT WAMP message types. It will fail with an exception if another type is passed as the third argument. This is equivalent to calling async_forward/3 and then yield/2.","ref":"bondy_peer_wamp_relay.html#forward/3","title":"bondy_peer_wamp_relay.forward/3","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#handle_call/3","title":"bondy_peer_wamp_relay.handle_call/3","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#handle_cast/2","title":"bondy_peer_wamp_relay.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#handle_info/2","title":"bondy_peer_wamp_relay.handle_info/2","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#init/1","title":"bondy_peer_wamp_relay.init/1","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#receive_ack/2","title":"bondy_peer_wamp_relay.receive_ack/2","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#ref/1","title":"bondy_peer_wamp_relay.ref/1","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#start_link/0","title":"bondy_peer_wamp_relay.start_link/0","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#terminate/2","title":"bondy_peer_wamp_relay.terminate/2","type":"function"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:id/0","title":"bondy_peer_wamp_relay.id/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:uri/0","title":"bondy_peer_wamp_relay.uri/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_abort/0","title":"bondy_peer_wamp_relay.wamp_abort/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_authenticate/0","title":"bondy_peer_wamp_relay.wamp_authenticate/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_call/0","title":"bondy_peer_wamp_relay.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_cancel/0","title":"bondy_peer_wamp_relay.wamp_cancel/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_challenge/0","title":"bondy_peer_wamp_relay.wamp_challenge/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_error/0","title":"bondy_peer_wamp_relay.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_event/0","title":"bondy_peer_wamp_relay.wamp_event/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_event_received/0","title":"bondy_peer_wamp_relay.wamp_event_received/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_goodbye/0","title":"bondy_peer_wamp_relay.wamp_goodbye/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_hello/0","title":"bondy_peer_wamp_relay.wamp_hello/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_interrupt/0","title":"bondy_peer_wamp_relay.wamp_interrupt/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_invocation/0","title":"bondy_peer_wamp_relay.wamp_invocation/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_message/0","title":"bondy_peer_wamp_relay.wamp_message/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_publish/0","title":"bondy_peer_wamp_relay.wamp_publish/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_published/0","title":"bondy_peer_wamp_relay.wamp_published/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_register/0","title":"bondy_peer_wamp_relay.wamp_register/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_registered/0","title":"bondy_peer_wamp_relay.wamp_registered/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_result/0","title":"bondy_peer_wamp_relay.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_subscribe/0","title":"bondy_peer_wamp_relay.wamp_subscribe/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_subscribed/0","title":"bondy_peer_wamp_relay.wamp_subscribed/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_subscriber_received/0","title":"bondy_peer_wamp_relay.wamp_subscriber_received/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_unregister/0","title":"bondy_peer_wamp_relay.wamp_unregister/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_unregistered/0","title":"bondy_peer_wamp_relay.wamp_unregistered/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_unsubscribe/0","title":"bondy_peer_wamp_relay.wamp_unsubscribe/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_unsubscribed/0","title":"bondy_peer_wamp_relay.wamp_unsubscribed/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_welcome/0","title":"bondy_peer_wamp_relay.wamp_welcome/0","type":"type"},{"doc":"","ref":"bondy_peer_wamp_relay.html#t:wamp_yield/0","title":"bondy_peer_wamp_relay.wamp_yield/0","type":"type"},{"doc":"This module implements a replacement for OTP's default alarm_handler.","ref":"bondy_alarm_handler.html","title":"bondy_alarm_handler","type":"module"},{"doc":"","ref":"bondy_alarm_handler.html#clear_alarm/1","title":"bondy_alarm_handler.clear_alarm/1","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#code_change/3","title":"bondy_alarm_handler.code_change/3","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#get_alarms/0","title":"bondy_alarm_handler.get_alarms/0","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#handle_call/2","title":"bondy_alarm_handler.handle_call/2","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#handle_event/2","title":"bondy_alarm_handler.handle_event/2","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#handle_info/2","title":"bondy_alarm_handler.handle_info/2","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#init/1","title":"bondy_alarm_handler.init/1","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#set_alarm/1","title":"bondy_alarm_handler.set_alarm/1","type":"function"},{"doc":"","ref":"bondy_alarm_handler.html#terminate/2","title":"bondy_alarm_handler.terminate/2","type":"function"},{"doc":"Implements the event watcher capability as designed by Lager.","ref":"bondy_event_handler_watcher.html","title":"bondy_event_handler_watcher","type":"module"},{"doc":"","ref":"bondy_event_handler_watcher.html#code_change/3","title":"bondy_event_handler_watcher.code_change/3","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#handle_call/3","title":"bondy_event_handler_watcher.handle_call/3","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#handle_cast/2","title":"bondy_event_handler_watcher.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#handle_info/2","title":"bondy_event_handler_watcher.handle_info/2","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#init/1","title":"bondy_event_handler_watcher.init/1","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#start/2","title":"bondy_event_handler_watcher.start/2","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#start/3","title":"bondy_event_handler_watcher.start/3","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#start_link/2","title":"bondy_event_handler_watcher.start_link/2","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#start_link/3","title":"bondy_event_handler_watcher.start_link/3","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher.html#terminate/2","title":"bondy_event_handler_watcher.terminate/2","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher_sup.html","title":"bondy_event_handler_watcher_sup","type":"module"},{"doc":"","ref":"bondy_event_handler_watcher_sup.html#init/1","title":"bondy_event_handler_watcher_sup.init/1","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher_sup.html#start_link/0","title":"bondy_event_handler_watcher_sup.start_link/0","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher_sup.html#start_watcher/2","title":"bondy_event_handler_watcher_sup.start_watcher/2","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher_sup.html#start_watcher/3","title":"bondy_event_handler_watcher_sup.start_watcher/3","type":"function"},{"doc":"","ref":"bondy_event_handler_watcher_sup.html#terminate_watcher/1","title":"bondy_event_handler_watcher_sup.terminate_watcher/1","type":"function"},{"doc":"An event handler to generates WAMP Meta Events based on internal Bondy events","ref":"bondy_event_logger.html","title":"bondy_event_logger","type":"module"},{"doc":"","ref":"bondy_event_logger.html#code_change/3","title":"bondy_event_logger.code_change/3","type":"function"},{"doc":"","ref":"bondy_event_logger.html#handle_call/2","title":"bondy_event_logger.handle_call/2","type":"function"},{"doc":"","ref":"bondy_event_logger.html#handle_event/2","title":"bondy_event_logger.handle_event/2","type":"function"},{"doc":"","ref":"bondy_event_logger.html#handle_info/2","title":"bondy_event_logger.handle_info/2","type":"function"},{"doc":"","ref":"bondy_event_logger.html#init/1","title":"bondy_event_logger.init/1","type":"function"},{"doc":"","ref":"bondy_event_logger.html#terminate/2","title":"bondy_event_logger.terminate/2","type":"function"},{"doc":"This module is used by Bondy to manage event handlers and notify them of events. It implements the &quot;watched&quot; handler capability i.e. add_watched_handler/2,3 , swap_watched_handler/2,3 . In addition, this module mirrors most of the gen_event API and adds variants with two arguments were the first argument is the defaul event manager ( bondy_event_manager ). + -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - + | | | bondy_event_manager | | | + -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - + | | v + -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - + | | | bondy_event_handler_watcher_sup | | | + -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - + | + -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- + | | + -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - + + -- - + -- - + | | | | | bondy_event_handler_watcher 1 | | N | | | | | + -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - + + -- -- -- - + simple_one_for_one","ref":"bondy_event_manager.html","title":"bondy_event_manager","type":"module"},{"doc":"Adds an event handler. Calls gen_event:add_handler(?MODULE, Handler, Args) .","ref":"bondy_event_manager.html#add_handler/2","title":"bondy_event_manager.add_handler/2","type":"function"},{"doc":"Adds an event handler. Calls gen_event:add_handler(Manager, Handler, Args) .","ref":"bondy_event_manager.html#add_handler/3","title":"bondy_event_manager.add_handler/3","type":"function"},{"doc":"Adds a supervised event handler, but also supervises the connection between the event handler and the calling process. Calls gen_event:add_sup_handler(?MODULE, Handler, Args) . %% Use this call if you want the event manager to remove the handler when the calling process terminates.","ref":"bondy_event_manager.html#add_sup_handler/2","title":"bondy_event_manager.add_sup_handler/2","type":"function"},{"doc":"Adds a supervised event handler, but also supervises the connection between the event handler and the calling process. Calls gen_event:add_sup_handler(?MODULE, Handler, Args) . Use this call if you want the event manager to remove the handler when the calling process terminates.","ref":"bondy_event_manager.html#add_sup_handler/3","title":"bondy_event_manager.add_sup_handler/3","type":"function"},{"doc":"Adds a watched event handler. As opposed to add_sup_handler/2 which supervises the calling process, this function calls bondy_event_handler_watcher_sup:start_watcher(Handler, Args) which spawns a supervised process ( bondy_event_handler_watcher ) which calls add_sup_handler/2 . If the handler crashes, bondy_event_handler_watcher will re-install it in the event manager.","ref":"bondy_event_manager.html#add_watched_handler/2","title":"bondy_event_manager.add_watched_handler/2","type":"function"},{"doc":"Adds a supervised event handler. As opposed to add_sup_handler/2 which monitors the calling process, this function calls bondy_event_handler_watcher_sup:start_watcher(Handler, Args) which spawns a supervised process ( bondy_event_handler_watcher ) which calls add_sup_handler/2 . If the handler crashes, bondy_event_handler_watcher will re-install it in the event manager.","ref":"bondy_event_manager.html#add_watched_handler/3","title":"bondy_event_manager.add_watched_handler/3","type":"function"},{"doc":"A util function. Equivalent to calling notify(bondy_event_manager, Event)","ref":"bondy_event_manager.html#notify/1","title":"bondy_event_manager.notify/1","type":"function"},{"doc":"A util function. Equivalent to calling gen_event:notify(bondy_event_manager, Event)","ref":"bondy_event_manager.html#notify/2","title":"bondy_event_manager.notify/2","type":"function"},{"doc":"A util function. Equivalent to calling swap_handler(bondy_event_manager, OldHandler, NewHandler)","ref":"bondy_event_manager.html#swap_handler/2","title":"bondy_event_manager.swap_handler/2","type":"function"},{"doc":"A util function. Equivalent to calling gen_event:swap_handler/3","ref":"bondy_event_manager.html#swap_handler/3","title":"bondy_event_manager.swap_handler/3","type":"function"},{"doc":"A util function. Equivalent to calling swap_sup_handler(bondy_event_manager, OldHandler, NewHandler)","ref":"bondy_event_manager.html#swap_sup_handler/2","title":"bondy_event_manager.swap_sup_handler/2","type":"function"},{"doc":"A util function. Equivalent to calling gen_event:swap_sup_handler/3","ref":"bondy_event_manager.html#swap_sup_handler/3","title":"bondy_event_manager.swap_sup_handler/3","type":"function"},{"doc":"A util function. Equivalent to calling swap_watched_handler(bondy_event_manager, OldHandler, NewHandler)","ref":"bondy_event_manager.html#swap_watched_handler/2","title":"bondy_event_manager.swap_watched_handler/2","type":"function"},{"doc":"Replaces an event handler in event manager Manager in the same way as swap_sup_handler/3 . However, this function calls bondy_event_handler_watcher_sup:start_watcher(Handler, Args) which spawns a supervised process ( bondy_event_handler_watcher ) which is the one calling calls swap_sup_handler/2 . If the handler crashes or terminates with a reason other than normal or shutdown , bondy_event_handler_watcher will re-install it in the event manager.","ref":"bondy_event_manager.html#swap_watched_handler/3","title":"bondy_event_manager.swap_watched_handler/3","type":"function"},{"doc":"A util function. Equivalent to calling sync_notify(bondy_event_manager, Event)","ref":"bondy_event_manager.html#sync_notify/1","title":"bondy_event_manager.sync_notify/1","type":"function"},{"doc":"A util function. Equivalent to calling gen_event:sync_notify(bondy_event_manager, Event)","ref":"bondy_event_manager.html#sync_notify/2","title":"bondy_event_manager.sync_notify/2","type":"function"},{"doc":"An event handler to generates WAMP Meta Events based on internal Bondy events","ref":"bondy_event_wamp_publisher.html","title":"bondy_event_wamp_publisher","type":"module"},{"doc":"","ref":"bondy_event_wamp_publisher.html#code_change/3","title":"bondy_event_wamp_publisher.code_change/3","type":"function"},{"doc":"","ref":"bondy_event_wamp_publisher.html#handle_call/2","title":"bondy_event_wamp_publisher.handle_call/2","type":"function"},{"doc":"","ref":"bondy_event_wamp_publisher.html#handle_event/2","title":"bondy_event_wamp_publisher.handle_event/2","type":"function"},{"doc":"","ref":"bondy_event_wamp_publisher.html#handle_info/2","title":"bondy_event_wamp_publisher.handle_info/2","type":"function"},{"doc":"","ref":"bondy_event_wamp_publisher.html#init/1","title":"bondy_event_wamp_publisher.init/1","type":"function"},{"doc":"","ref":"bondy_event_wamp_publisher.html#terminate/2","title":"bondy_event_wamp_publisher.terminate/2","type":"function"},{"doc":"We follow https://prometheus.io/docs/practices/naming/","ref":"bondy_prometheus.html","title":"bondy_prometheus","type":"module"},{"doc":"","ref":"bondy_prometheus.html#code_change/3","title":"bondy_prometheus.code_change/3","type":"function"},{"doc":"","ref":"bondy_prometheus.html#collect_mf/2","title":"bondy_prometheus.collect_mf/2","type":"function"},{"doc":"","ref":"bondy_prometheus.html#days_duration_buckets/0","title":"bondy_prometheus.days_duration_buckets/0","type":"function"},{"doc":"","ref":"bondy_prometheus.html#deregister_cleanup/1","title":"bondy_prometheus.deregister_cleanup/1","type":"function"},{"doc":"","ref":"bondy_prometheus.html#handle_call/2","title":"bondy_prometheus.handle_call/2","type":"function"},{"doc":"","ref":"bondy_prometheus.html#handle_event/2","title":"bondy_prometheus.handle_event/2","type":"function"},{"doc":"","ref":"bondy_prometheus.html#handle_info/2","title":"bondy_prometheus.handle_info/2","type":"function"},{"doc":"","ref":"bondy_prometheus.html#hours_duration_buckets/0","title":"bondy_prometheus.hours_duration_buckets/0","type":"function"},{"doc":"","ref":"bondy_prometheus.html#init/1","title":"bondy_prometheus.init/1","type":"function"},{"doc":"","ref":"bondy_prometheus.html#microseconds_duration_buckets/0","title":"bondy_prometheus.microseconds_duration_buckets/0","type":"function"},{"doc":"","ref":"bondy_prometheus.html#milliseconds_duration_buckets/0","title":"bondy_prometheus.milliseconds_duration_buckets/0","type":"function"},{"doc":"","ref":"bondy_prometheus.html#minutes_duration_buckets/0","title":"bondy_prometheus.minutes_duration_buckets/0","type":"function"},{"doc":"","ref":"bondy_prometheus.html#report/0","title":"bondy_prometheus.report/0","type":"function"},{"doc":"","ref":"bondy_prometheus.html#seconds_duration_buckets/0","title":"bondy_prometheus.seconds_duration_buckets/0","type":"function"},{"doc":"","ref":"bondy_prometheus.html#terminate/2","title":"bondy_prometheus.terminate/2","type":"function"},{"doc":"","ref":"bondy_prometheus_collector.html","title":"bondy_prometheus_collector","type":"module"},{"doc":"","ref":"bondy_prometheus_collector.html#collect_metrics/2","title":"bondy_prometheus_collector.collect_metrics/2","type":"function"},{"doc":"","ref":"bondy_prometheus_collector.html#collect_mf/2","title":"bondy_prometheus_collector.collect_mf/2","type":"function"},{"doc":"","ref":"bondy_prometheus_collector.html#deregister_cleanup/1","title":"bondy_prometheus_collector.deregister_cleanup/1","type":"function"},{"doc":"Collects Cowboy metrics using metrics stream handler . Exported metrics cowboy_early_errors_total Type: counter. Labels: default - [] , configured via early_errors_labels . Total number of Cowboy early errors, i.e. errors that occur before a request is received. bondy_protocol_upgrades_total Type: counter. Labels: default - [] , configured via protocol_upgrades_labels . Total number of protocol upgrades, i.e. when http connection upgraded to websocket connection. cowboy_requests_total Type: counter. Labels: default - [method, reason, status_class] , configured via request_labels . Total number of Cowboy requests. cowboy_spawned_processes_total Type: counter. Labels: default - [method, reason, status_class] , configured via request_labels . Total number of spawned processes. cowboy_errors_total Type: counter. Labels: default - [method, reason, error] , configured via error_labels . Total number of Cowboy request errors. cowboy_request_duration_microseconds Type: histogram. Labels: default - [method, reason, status_class] , configured via request_labels . Buckets: default - [0.01, 0.1, 0.25, 0.5, 0.75, 1, 1.5, 2, 4] , configured via duration_buckets . Cowboy request duration. cowboy_receive_body_duration_microseconds Type: histogram. Labels: default - [method, reason, status_class] , configured via request_labels . Buckets: default - [0.01, 0.1, 0.25, 0.5, 0.75, 1, 1.5, 2, 4] , configured via duration_buckets . Request body receiving duration. Configuration Prometheus Cowboy2 instrumenter configured via cowboy_instrumenter key of prometheus app environment. Default configuration: {prometheus, [ ... {cowboy_instrumenter, [{duration_buckets, [0.01, 0.1, 0.25, 0.5, 0.75, 1, 1.5, 2, 4]}, {early_error_labels, []}, {request_labels, [method, reason, status_class]}, {error_labels, [method, reason, error]}, {registry, default}]} ... ]} Labels Builtin: - host, - port, - method, - status, - status_class, - reason, - error. Custom labels can be implemented via module exporting label_value/2 function. First argument will be label name, second is Metrics data from metrics stream handler . Set this module to labels_module configuration option.","ref":"bondy_prometheus_cowboy_collector.html","title":"bondy_prometheus_cowboy_collector","type":"module"},{"doc":"Metrics stream handler callback.","ref":"bondy_prometheus_cowboy_collector.html#observe/1","title":"bondy_prometheus_cowboy_collector.observe/1","type":"function"},{"doc":"Sets all metrics up. Call this when the app starts.","ref":"bondy_prometheus_cowboy_collector.html#setup/0","title":"bondy_prometheus_cowboy_collector.setup/0","type":"function"},{"doc":"","ref":"bondy_telemetry.html","title":"bondy_telemetry","type":"module"},{"doc":"Generates a 128 bit random integer to use as a trace id.","ref":"bondy_telemetry.html#trace_id/0","title":"bondy_telemetry.trace_id/0","type":"function"},{"doc":"This module provides a bridge between WAMP events and OTP events.","ref":"bondy_wamp_event_manager.html","title":"bondy_wamp_event_manager","type":"module"},{"doc":"Subscribe to a WAMP event with a callback function. The function needs to have two arguments representing the topic_uri and the wamp_event() that has been published.","ref":"bondy_wamp_event_manager.html#add_callback/1","title":"bondy_wamp_event_manager.add_callback/1","type":"function"},{"doc":"Adds an event handler. Calls gen_event:add_handler(?MODULE, Handler, Args) . The handler will receive all WAMP events.","ref":"bondy_wamp_event_manager.html#add_handler/2","title":"bondy_wamp_event_manager.add_handler/2","type":"function"},{"doc":"Subscribe to a WAMP event with a supervised callback function. The function needs to have two arguments representing the topic_uri and the wamp_event() that has been published.","ref":"bondy_wamp_event_manager.html#add_sup_callback/1","title":"bondy_wamp_event_manager.add_sup_callback/1","type":"function"},{"doc":"Adds a supervised event handler. Calls gen_event:add_sup_handler(?MODULE, Handler, Args) . The handler will receive all WAMP events.","ref":"bondy_wamp_event_manager.html#add_sup_handler/2","title":"bondy_wamp_event_manager.add_sup_handler/2","type":"function"},{"doc":"","ref":"bondy_wamp_event_manager.html#code_change/3","title":"bondy_wamp_event_manager.code_change/3","type":"function"},{"doc":"","ref":"bondy_wamp_event_manager.html#handle_call/2","title":"bondy_wamp_event_manager.handle_call/2","type":"function"},{"doc":"","ref":"bondy_wamp_event_manager.html#handle_event/2","title":"bondy_wamp_event_manager.handle_event/2","type":"function"},{"doc":"","ref":"bondy_wamp_event_manager.html#handle_info/2","title":"bondy_wamp_event_manager.handle_info/2","type":"function"},{"doc":"","ref":"bondy_wamp_event_manager.html#init/1","title":"bondy_wamp_event_manager.init/1","type":"function"},{"doc":"Notifies all event handlers of the event","ref":"bondy_wamp_event_manager.html#notify/2","title":"bondy_wamp_event_manager.notify/2","type":"function"},{"doc":"","ref":"bondy_wamp_event_manager.html#start_link/0","title":"bondy_wamp_event_manager.start_link/0","type":"function"},{"doc":"","ref":"bondy_wamp_event_manager.html#terminate/2","title":"bondy_wamp_event_manager.terminate/2","type":"function"},{"doc":"","ref":"bondy_backup_wamp_api.html","title":"bondy_backup_wamp_api","type":"module"},{"doc":"","ref":"bondy_backup_wamp_api.html#handle_call/3","title":"bondy_backup_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_backup_wamp_api.html#t:id/0","title":"bondy_backup_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_backup_wamp_api.html#t:uri/0","title":"bondy_backup_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_backup_wamp_api.html#t:wamp_call/0","title":"bondy_backup_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_backup_wamp_api.html#t:wamp_error/0","title":"bondy_backup_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_backup_wamp_api.html#t:wamp_result/0","title":"bondy_backup_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html","title":"bondy_http_gateway_wamp_api","type":"module"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html#handle_call/3","title":"bondy_http_gateway_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html#handle_event/2","title":"bondy_http_gateway_wamp_api.handle_event/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html#t:id/0","title":"bondy_http_gateway_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html#t:uri/0","title":"bondy_http_gateway_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html#t:wamp_call/0","title":"bondy_http_gateway_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html#t:wamp_error/0","title":"bondy_http_gateway_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_wamp_api.html#t:wamp_result/0","title":"bondy_http_gateway_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_oauth2_wamp_api.html","title":"bondy_oauth2_wamp_api","type":"module"},{"doc":"","ref":"bondy_oauth2_wamp_api.html#handle_call/3","title":"bondy_oauth2_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_oauth2_wamp_api.html#t:id/0","title":"bondy_oauth2_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_oauth2_wamp_api.html#t:uri/0","title":"bondy_oauth2_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_oauth2_wamp_api.html#t:wamp_call/0","title":"bondy_oauth2_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_oauth2_wamp_api.html#t:wamp_error/0","title":"bondy_oauth2_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_oauth2_wamp_api.html#t:wamp_result/0","title":"bondy_oauth2_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html","title":"bondy_rbac_group_wamp_api","type":"module"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html#handle_call/3","title":"bondy_rbac_group_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html#handle_event/2","title":"bondy_rbac_group_wamp_api.handle_event/2","type":"function"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html#t:id/0","title":"bondy_rbac_group_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html#t:uri/0","title":"bondy_rbac_group_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html#t:wamp_call/0","title":"bondy_rbac_group_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html#t:wamp_error/0","title":"bondy_rbac_group_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_rbac_group_wamp_api.html#t:wamp_result/0","title":"bondy_rbac_group_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html","title":"bondy_rbac_source_wamp_api","type":"module"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html#handle_call/3","title":"bondy_rbac_source_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html#handle_event/2","title":"bondy_rbac_source_wamp_api.handle_event/2","type":"function"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html#t:id/0","title":"bondy_rbac_source_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html#t:uri/0","title":"bondy_rbac_source_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html#t:wamp_call/0","title":"bondy_rbac_source_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html#t:wamp_error/0","title":"bondy_rbac_source_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_rbac_source_wamp_api.html#t:wamp_result/0","title":"bondy_rbac_source_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html","title":"bondy_rbac_user_wamp_api","type":"module"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html#handle_call/3","title":"bondy_rbac_user_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html#handle_event/2","title":"bondy_rbac_user_wamp_api.handle_event/2","type":"function"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html#t:id/0","title":"bondy_rbac_user_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html#t:uri/0","title":"bondy_rbac_user_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html#t:wamp_call/0","title":"bondy_rbac_user_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html#t:wamp_error/0","title":"bondy_rbac_user_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_rbac_user_wamp_api.html#t:wamp_result/0","title":"bondy_rbac_user_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_rbac_wamp_api.html","title":"bondy_rbac_wamp_api","type":"module"},{"doc":"","ref":"bondy_rbac_wamp_api.html#handle_call/3","title":"bondy_rbac_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_rbac_wamp_api.html#handle_event/2","title":"bondy_rbac_wamp_api.handle_event/2","type":"function"},{"doc":"","ref":"bondy_rbac_wamp_api.html#t:id/0","title":"bondy_rbac_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_rbac_wamp_api.html#t:uri/0","title":"bondy_rbac_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_rbac_wamp_api.html#t:wamp_call/0","title":"bondy_rbac_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_rbac_wamp_api.html#t:wamp_error/0","title":"bondy_rbac_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_rbac_wamp_api.html#t:wamp_result/0","title":"bondy_rbac_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_realm_wamp_api.html","title":"bondy_realm_wamp_api","type":"module"},{"doc":"","ref":"bondy_realm_wamp_api.html#handle_call/3","title":"bondy_realm_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_realm_wamp_api.html#t:id/0","title":"bondy_realm_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_realm_wamp_api.html#t:uri/0","title":"bondy_realm_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_realm_wamp_api.html#t:wamp_call/0","title":"bondy_realm_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_realm_wamp_api.html#t:wamp_error/0","title":"bondy_realm_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_realm_wamp_api.html#t:wamp_result/0","title":"bondy_realm_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_telemetry_wamp_api.html","title":"bondy_telemetry_wamp_api","type":"module"},{"doc":"","ref":"bondy_telemetry_wamp_api.html#handle_call/3","title":"bondy_telemetry_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_telemetry_wamp_api.html#t:id/0","title":"bondy_telemetry_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_telemetry_wamp_api.html#t:uri/0","title":"bondy_telemetry_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_telemetry_wamp_api.html#t:wamp_call/0","title":"bondy_telemetry_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_telemetry_wamp_api.html#t:wamp_error/0","title":"bondy_telemetry_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_telemetry_wamp_api.html#t:wamp_result/0","title":"bondy_telemetry_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_ticket_wamp_api.html","title":"bondy_ticket_wamp_api","type":"module"},{"doc":"","ref":"bondy_ticket_wamp_api.html#handle_call/3","title":"bondy_ticket_wamp_api.handle_call/3","type":"function"},{"doc":"","ref":"bondy_ticket_wamp_api.html#handle_event/2","title":"bondy_ticket_wamp_api.handle_event/2","type":"function"},{"doc":"","ref":"bondy_ticket_wamp_api.html#t:id/0","title":"bondy_ticket_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_ticket_wamp_api.html#t:uri/0","title":"bondy_ticket_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_ticket_wamp_api.html#t:wamp_call/0","title":"bondy_ticket_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_ticket_wamp_api.html#t:wamp_error/0","title":"bondy_ticket_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_ticket_wamp_api.html#t:wamp_result/0","title":"bondy_ticket_wamp_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_wamp_api.html","title":"bondy_wamp_api","type":"behaviour"},{"doc":"","ref":"bondy_wamp_api.html#handle_call/2","title":"bondy_wamp_api.handle_call/2","type":"function"},{"doc":"","ref":"bondy_wamp_api.html#c:handle_call/3","title":"bondy_wamp_api.handle_call/3","type":"callback"},{"doc":"","ref":"bondy_wamp_api.html#t:id/0","title":"bondy_wamp_api.id/0","type":"type"},{"doc":"","ref":"bondy_wamp_api.html#t:uri/0","title":"bondy_wamp_api.uri/0","type":"type"},{"doc":"","ref":"bondy_wamp_api.html#t:wamp_call/0","title":"bondy_wamp_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_wamp_api.html#t:wamp_error/0","title":"bondy_wamp_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_wamp_api.html#t:wamp_result/0","title":"bondy_wamp_api.wamp_result/0","type":"type"},{"doc":"Handles the following META API wamp calls: * &quot;wamp.subscription.list&quot;: Retrieves subscription IDs listed according to match policies. * &quot;wamp.subscription.lookup&quot;: Obtains the subscription (if any) managing a topic, according to some match policy. * &quot;wamp.subscription.match&quot;: Retrieves a list of IDs of subscriptions matching a topic URI, irrespective of match policy. * &quot;wamp.subscription.get&quot;: Retrieves information on a particular subscription. * &quot;wamp.subscription.list_subscribers&quot;: Retrieves a list of session IDs for sessions currently attached to the subscription. * &quot;wamp.subscription.count_subscribers&quot;: Obtains the number of sessions currently attached to the subscription.","ref":"bondy_wamp_meta_api.html","title":"bondy_wamp_meta_api","type":"module"},{"doc":"","ref":"bondy_wamp_meta_api.html#handle_call/2","title":"bondy_wamp_meta_api.handle_call/2","type":"function"},{"doc":"","ref":"bondy_wamp_meta_api.html#handle_invocation/2","title":"bondy_wamp_meta_api.handle_invocation/2","type":"function"},{"doc":"","ref":"bondy_wamp_meta_api.html#t:id/0","title":"bondy_wamp_meta_api.id/0","type":"type"},{"doc":"","ref":"bondy_wamp_meta_api.html#t:uri/0","title":"bondy_wamp_meta_api.uri/0","type":"type"},{"doc":"","ref":"bondy_wamp_meta_api.html#t:wamp_call/0","title":"bondy_wamp_meta_api.wamp_call/0","type":"type"},{"doc":"","ref":"bondy_wamp_meta_api.html#t:wamp_error/0","title":"bondy_wamp_meta_api.wamp_error/0","type":"type"},{"doc":"","ref":"bondy_wamp_meta_api.html#t:wamp_result/0","title":"bondy_wamp_meta_api.wamp_result/0","type":"type"},{"doc":"","ref":"bondy_admin_ping_http_handler.html","title":"bondy_admin_ping_http_handler","type":"module"},{"doc":"","ref":"bondy_admin_ping_http_handler.html#init/2","title":"bondy_admin_ping_http_handler.init/2","type":"function"},{"doc":"","ref":"bondy_admin_ready_http_handler.html","title":"bondy_admin_ready_http_handler","type":"module"},{"doc":"","ref":"bondy_admin_ready_http_handler.html#init/2","title":"bondy_admin_ready_http_handler.init/2","type":"function"},{"doc":"","ref":"bondy_http_gateway.html","title":"bondy_http_gateway","type":"module"},{"doc":"Parses the apis provided by the configuration file ('bondy.api_gateway.config_file'), stores the apis in the metadata store. This call does not load the spec in the HTTP server dispatch tables.","ref":"bondy_http_gateway.html#apply_config/0","title":"bondy_http_gateway.apply_config/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#code_change/3","title":"bondy_http_gateway.code_change/3","type":"function"},{"doc":"Deletes the API Specification object identified by Id . Notice: Triggers a rebuild of the Cowboy dispatch tables.","ref":"bondy_http_gateway.html#delete/1","title":"bondy_http_gateway.delete/1","type":"function"},{"doc":"Returns the current dispatch configured in Cowboy for the given Listener.","ref":"bondy_http_gateway.html#dispatch_table/1","title":"bondy_http_gateway.dispatch_table/1","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#handle_call/3","title":"bondy_http_gateway.handle_call/3","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#handle_cast/2","title":"bondy_http_gateway.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#handle_info/2","title":"bondy_http_gateway.handle_info/2","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#init/1","title":"bondy_http_gateway.init/1","type":"function"},{"doc":"Returns the list of all stored API Specification objects.","ref":"bondy_http_gateway.html#list/0","title":"bondy_http_gateway.list/0","type":"function"},{"doc":"Parses the provided Spec, adds it to the store and calls rebuild_dispatch_tables/0.","ref":"bondy_http_gateway.html#load/1","title":"bondy_http_gateway.load/1","type":"function"},{"doc":"Returns the API Specification object identified by Id .","ref":"bondy_http_gateway.html#lookup/1","title":"bondy_http_gateway.lookup/1","type":"function"},{"doc":"Loads all configured API specs from the metadata store and rebuilds the Cowboy dispatch table by calling cowboy_router:compile/1 and updating the environment.","ref":"bondy_http_gateway.html#rebuild_dispatch_tables/0","title":"bondy_http_gateway.rebuild_dispatch_tables/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#resume_admin_listeners/0","title":"bondy_http_gateway.resume_admin_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#resume_listeners/0","title":"bondy_http_gateway.resume_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#start_admin_listeners/0","title":"bondy_http_gateway.start_admin_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#start_link/0","title":"bondy_http_gateway.start_link/0","type":"function"},{"doc":"Conditionally start the public http and https listeners based on the configuration. This will load any default Bondy api specs. Notice this is not the way to start the admin api listeners see start_admin_listeners() for that.","ref":"bondy_http_gateway.html#start_listeners/0","title":"bondy_http_gateway.start_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#stop_admin_listeners/0","title":"bondy_http_gateway.stop_admin_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#stop_listeners/0","title":"bondy_http_gateway.stop_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#suspend_admin_listeners/0","title":"bondy_http_gateway.suspend_admin_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#suspend_listeners/0","title":"bondy_http_gateway.suspend_listeners/0","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#terminate/2","title":"bondy_http_gateway.terminate/2","type":"function"},{"doc":"","ref":"bondy_http_gateway.html#t:listener/0","title":"bondy_http_gateway.listener/0","type":"type"},{"doc":"This module implements a generic Cowboy rest handler that handles a resource specified using the Bondy API Gateway Specification Format (BAGS), a JSON-based format for describing, producing and consuming RESTful Web Services using Bondy. For every path defined in a BAGS file, Bondy will configure and install a Cowboy route using this module. The initial state of the module responds to a contract between this module and the bondy_http_gateway_api_spec_parser and contains the parsed and preprocessed definition of the paths specification which this module uses to dynamically implement its behaviour. See bondy_http_gateway for a detail description of the Bondy API Gateway Specification Format.","ref":"bondy_http_gateway_rest_handler.html","title":"bondy_http_gateway_rest_handler","type":"module"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#accept/2","title":"bondy_http_gateway_rest_handler.accept/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#allowed_methods/2","title":"bondy_http_gateway_rest_handler.allowed_methods/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#content_types_accepted/2","title":"bondy_http_gateway_rest_handler.content_types_accepted/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#content_types_provided/2","title":"bondy_http_gateway_rest_handler.content_types_provided/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#delete_completed/2","title":"bondy_http_gateway_rest_handler.delete_completed/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#delete_resource/2","title":"bondy_http_gateway_rest_handler.delete_resource/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#from_form_urlencoded/2","title":"bondy_http_gateway_rest_handler.from_form_urlencoded/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#from_json/2","title":"bondy_http_gateway_rest_handler.from_json/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#from_msgpack/2","title":"bondy_http_gateway_rest_handler.from_msgpack/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#init/2","title":"bondy_http_gateway_rest_handler.init/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#is_authorized/2","title":"bondy_http_gateway_rest_handler.is_authorized/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#languages_provided/2","title":"bondy_http_gateway_rest_handler.languages_provided/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#options/2","title":"bondy_http_gateway_rest_handler.options/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#previously_existed/2","title":"bondy_http_gateway_rest_handler.previously_existed/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#rate_limited/2","title":"bondy_http_gateway_rest_handler.rate_limited/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#resource_exists/2","title":"bondy_http_gateway_rest_handler.resource_exists/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#to_json/2","title":"bondy_http_gateway_rest_handler.to_json/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#to_msgpack/2","title":"bondy_http_gateway_rest_handler.to_msgpack/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_rest_handler.html#t:state/0","title":"bondy_http_gateway_rest_handler.state/0","type":"type"},{"doc":"","ref":"bondy_http_gateway_utils.html","title":"bondy_http_gateway_utils","type":"module"},{"doc":"","ref":"bondy_http_gateway_utils.html#location_uri/2","title":"bondy_http_gateway_utils.location_uri/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_utils.html#set_resp_link_header/2","title":"bondy_http_gateway_utils.set_resp_link_header/2","type":"function"},{"doc":"","ref":"bondy_http_gateway_utils.html#set_resp_link_header/4","title":"bondy_http_gateway_utils.set_resp_link_header/4","type":"function"},{"doc":"","ref":"bondy_http_gateway_utils.html#t:state_fun/0","title":"bondy_http_gateway_utils.state_fun/0","type":"type"},{"doc":"","ref":"bondy_oauth2_client.html","title":"bondy_oauth2_client","type":"module"},{"doc":"Adds an API client to realm RealmUri. Creates a new user adding it to the api_clients group.","ref":"bondy_oauth2_client.html#add/2","title":"bondy_oauth2_client.add/2","type":"function"},{"doc":"","ref":"bondy_oauth2_client.html#remove/2","title":"bondy_oauth2_client.remove/2","type":"function"},{"doc":"","ref":"bondy_oauth2_client.html#to_external/1","title":"bondy_oauth2_client.to_external/1","type":"function"},{"doc":"","ref":"bondy_oauth2_client.html#update/3","title":"bondy_oauth2_client.update/3","type":"function"},{"doc":"","ref":"bondy_oauth2_client.html#t:t/0","title":"bondy_oauth2_client.t/0","type":"type"},{"doc":"","ref":"bondy_oauth2_client.html#t:uri/0","title":"bondy_oauth2_client.uri/0","type":"type"},{"doc":"","ref":"bondy_oauth2_resource_owner.html","title":"bondy_oauth2_resource_owner","type":"module"},{"doc":"Adds a resource owner (end-user or system) to realm RealmUri. Creates a new user adding it to the resource_owners group.","ref":"bondy_oauth2_resource_owner.html#add/2","title":"bondy_oauth2_resource_owner.add/2","type":"function"},{"doc":"","ref":"bondy_oauth2_resource_owner.html#change_password/4","title":"bondy_oauth2_resource_owner.change_password/4","type":"function"},{"doc":"","ref":"bondy_oauth2_resource_owner.html#change_password/5","title":"bondy_oauth2_resource_owner.change_password/5","type":"function"},{"doc":"","ref":"bondy_oauth2_resource_owner.html#remove/2","title":"bondy_oauth2_resource_owner.remove/2","type":"function"},{"doc":"","ref":"bondy_oauth2_resource_owner.html#to_external/1","title":"bondy_oauth2_resource_owner.to_external/1","type":"function"},{"doc":"","ref":"bondy_oauth2_resource_owner.html#update/3","title":"bondy_oauth2_resource_owner.update/3","type":"function"},{"doc":"","ref":"bondy_oauth2_resource_owner.html#t:t/0","title":"bondy_oauth2_resource_owner.t/0","type":"type"},{"doc":"","ref":"bondy_oauth2_resource_owner.html#t:uri/0","title":"bondy_oauth2_resource_owner.uri/0","type":"type"},{"doc":"","ref":"bondy_oauth2_rest_handler.html","title":"bondy_oauth2_rest_handler","type":"module"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#accept/2","title":"bondy_oauth2_rest_handler.accept/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#allowed_methods/2","title":"bondy_oauth2_rest_handler.allowed_methods/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#content_types_accepted/2","title":"bondy_oauth2_rest_handler.content_types_accepted/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#content_types_provided/2","title":"bondy_oauth2_rest_handler.content_types_provided/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#init/2","title":"bondy_oauth2_rest_handler.init/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#is_authorized/2","title":"bondy_oauth2_rest_handler.is_authorized/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#options/2","title":"bondy_oauth2_rest_handler.options/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#provide/2","title":"bondy_oauth2_rest_handler.provide/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#rate_limited/2","title":"bondy_oauth2_rest_handler.rate_limited/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#resource_existed/2","title":"bondy_oauth2_rest_handler.resource_existed/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#resource_exists/2","title":"bondy_oauth2_rest_handler.resource_exists/2","type":"function"},{"doc":"","ref":"bondy_oauth2_rest_handler.html#t:state/0","title":"bondy_oauth2_rest_handler.state/0","type":"type"},{"doc":"","ref":"bondy_backup.html","title":"bondy_backup","type":"module"},{"doc":"Backups up the database in the directory indicated by Path.","ref":"bondy_backup.html#backup/1","title":"bondy_backup.backup/1","type":"function"},{"doc":"","ref":"bondy_backup.html#code_change/3","title":"bondy_backup.code_change/3","type":"function"},{"doc":"","ref":"bondy_backup.html#handle_call/3","title":"bondy_backup.handle_call/3","type":"function"},{"doc":"","ref":"bondy_backup.html#handle_cast/2","title":"bondy_backup.handle_cast/2","type":"function"},{"doc":"","ref":"bondy_backup.html#handle_info/2","title":"bondy_backup.handle_info/2","type":"function"},{"doc":"","ref":"bondy_backup.html#init/1","title":"bondy_backup.init/1","type":"function"},{"doc":"Restores a backup log.","ref":"bondy_backup.html#restore/1","title":"bondy_backup.restore/1","type":"function"},{"doc":"","ref":"bondy_backup.html#start_link/0","title":"bondy_backup.start_link/0","type":"function"},{"doc":"","ref":"bondy_backup.html#status/0","title":"bondy_backup.status/0","type":"function"},{"doc":"","ref":"bondy_backup.html#status/1","title":"bondy_backup.status/1","type":"function"},{"doc":"","ref":"bondy_backup.html#terminate/2","title":"bondy_backup.terminate/2","type":"function"},{"doc":"","ref":"bondy_backup.html#t:info/0","title":"bondy_backup.info/0","type":"type"},{"doc":"","ref":"bondy_backup.html#t:status/0","title":"bondy_backup.status/0","type":"type"},{"doc":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. &quot;License&quot; shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. &quot;Licensor&quot; shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. &quot;Legal Entity&quot; shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, &quot;control&quot; means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. &quot;You&quot; (or &quot;Your&quot;) shall mean an individual or Legal Entity exercising permissions granted by this License. &quot;Source&quot; form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. &quot;Object&quot; form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. &quot;Work&quot; shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). &quot;Derivative Works&quot; shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. &quot;Contribution&quot; shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, &quot;submitted&quot; means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as &quot;Not a Contribution.&quot; &quot;Contributor&quot; shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a &quot;NOTICE&quot; text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets &quot;{}&quot; replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same &quot;printed page&quot; as the copyright notice for easier identification within third-party archives. Copyright (c) 2020 Leapsight. All rights reserved. Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"license.html","title":"LICENSE","type":"extras"},{"doc":"The Distributed WAMP Router and API Gateway Bondy is an open source, distributed, scaleable and robust networking platform for microservices and IoT applications written in Erlang. It implements the open Web Application Messaging Protocol (WAMP) offering both Publish and Subscribe (PubSub) and routed Remote Procedure Calls (RPC) comunication patterns. Bondy is Apache2 licensed. :warning: Notice for Contributors Active development is done at Bondy's Gitlab repository ( https://gitlab.com/leapsight/bondy). &lt;br&gt;&lt;br&gt;If you are reading this file at Bondy's Github repository, notice this is a mirror that is unidirectionally synced to Gitlab's i.e. no commits or PRs done in Github will be synced to the main Gitlab repository .","ref":"readme.html","title":"Bondy","type":"extras"},{"doc":"For our work-in-progress documentation go to http://docs.getbondy.io .","ref":"readme.html#documentation","title":"Bondy - Documentation","type":"extras"},{"doc":"Requirements Erlang 23.3.4.7 or later Rebar3 3.17.0 or later openssl libssl Libsodium On Linux apt-get update -y apt-get -y install build-essential libssl-dev openssl libsodium-dev Run a first node We will start a node named bondy1@127.0.0.1 which uses the following variables from the config file ( config/test/node_1_vars.config ). Transport Description Port HTTP REST API GATEWAY 18080 HTTP REST API GATEWAY 18083 HTTP REST Admin API 18081 HTTPS REST Admin API 18084 Websockets WAMP 18080 TCP WAMP Raw Socket 18082 TLS WAMP Raw Socket 18085 make node1 Create a Realm WAMP is a session-based protocol. Each session belongs to a Realm. curl -X &quot;POST&quot; &quot;http://localhost:18081/realms/&quot; \\ -H 'Content-Type: application/json; charset=utf-8' \\ -H 'Accept: application/json; charset=utf-8' \\ -d $'{ &quot;uri&quot;: &quot;com.myrealm&quot;, &quot;description&quot;: &quot;My First Realm&quot; }' Disable Security We will disable security to avoid setting up credentials at this moment. curl -X &quot;DELETE&quot; &quot;http://localhost:18081/realms/com.myrealm/security_enabled&quot; \\ -H 'Content-Type: application/json; charset=utf-8' \\ -H 'Accept: application/json; charset=utf-8' Run a second node We start a second node named bondy2@127.0.0.1 which uses the following variables from the config file ( config/test/node_2_vars.config ). Transport Description Port HTTP REST API GATEWAY 18180 HTTP REST API GATEWAY 18183 HTTP REST Admin API 18181 HTTPS REST Admin API 18184 Websockets WAMP 18180 TCP WAMP Raw Socket 18182 TLS WAMP Raw Socket 18185 make node2 Connect the two nodes In bondy1@127.0.0.1 erlang's shell type: ( bondy2 @ 127.0 . 0.1 ) 1 &gt; bondy_peer_service : join ( &#39;bondy2@127.0.0.1&#39; ) . All new state changes will be propagated in real-time through gossip. One minute after joining the cluster, the Active Anti-entropy service will trigger an exchange after which the Realm we have created in bondy1@127.0.0.1 will have been replicated to bondy2@127.0.0.1 .","ref":"readme.html#quick-start","title":"Bondy - Quick Start","type":"extras"},{"doc":"http://docs.getbondy.io . WAMP Specification #bondy on slack (coming soon!) Follow us on twitter @leapsight Recorded webinars Implementing a polyglot microservices architecture &lt;br&gt;Date: 10 July 2019 Copyright (c) 2016-2021 Leapsight. All rights reserved.","ref":"readme.html#resources","title":"Bondy - Resources","type":"extras"},{"doc":"","ref":"changelog.html","title":"CHANGELOG","type":"extras"},{"doc":"Added General Upgraded to OTP 24 Security WAMP Cryptosign authentication WAMP Ticket-based authentication Same Sign-on and Single Sign-on (SSO Realms) Realm Prototypes Added libsodium (enacl lib) Bondy Edge Fixed Fixes group ordering issue in processing of security (realm) configuration files. bondy_realm topological ordering of groups within each realm according to their group membership relationship. If any cycles are found amongst groups, an error is raised. Existing groups referred by name in the group's 'group' property are not fetched, so cycles might still be created once the new groups are stored on the database. Fixes a concurrency issue with busy clients, in particular when they end up calling themselves. This was produced by an unnecesary used of internal acknowledgments which have been removed WAMP Erlang encoding now enforces WAMP-compatible data structures and tries to convert certain types e.g. pids while it fails with others. Changed Realm database representation User database representation Error types and description improvements Logging improvements Removed high cardinality labels in promethues metrics (before we would tag each WAMP message stats with realm, session, message type etc. this is not good for stats databases like Promethues). Added RBAC context caching to avoid computing the user grants on every request.","ref":"changelog.html#1-0-0-beta","title":"CHANGELOG - 1.0.0-beta","type":"extras"},{"doc":"Security The RBAC context cache is not evicted or refreshed when a user is assigned to new realms or granted new permissions.","ref":"changelog.html#known-issues","title":"CHANGELOG - Known Issues","type":"extras"},{"doc":"Added bondy.subscription.list procedure First verstion of Retained messages Added a non-standard WAMP Authentication method oauth2 based on OAuth2 JWT Tokens Is equivalent to WAMP-Ticket authentication method but expects the secret to be a JWT produced by Bondy OAuth2 authid property value needs to be present and needs to match the JWT’s sub property value Added Bondy specific load balancing strategies through the standard REGISTER.Options.invoke option: queue_least_loaded quede_least_loaded_sample jump_consistent_hash (MUST not be used as this is experimental and the implementation will change with upcoming definitions from WAMP Specification) Aded support for WS compression now supports permessage-deflate websocket extension and enabled by default added configuration option wamp.websocket.compression_enabled added configuration option wamp.websocket.deflate.level added configuration option wamp.websocket.deflate.mem_level added configuration option wamp.websocket.deflate.strategy added configuration option wamp.websocket.deflate.server_context_takeover added configuration option wamp.websocket.deflate.client_max_window_bits added configuration option wamp.websocket.idle_timeout added configuration option bondy.wamp_websocket.max_frame_size Not working with Mozilla as it seems to be sending a corrupted PING message Fixed Minor WAMP protocol fixes Several bug fixes during removal of an API Specification Removal did not rebuilt the web server dispatch tables and thus the API removed was still active until reboot. Cleanup of session data when web server processes crash abnormally Changed Upgraded to Erlang 23 Security data structures Security methods (more methods added and a clear distinction between 'anontmous' and 'trust')","ref":"changelog.html#0-9-0","title":"CHANGELOG - 0.9.0","type":"extras"},{"doc":"Added API Gateway The API specification body object now supports any external-friendly data type e.g. erlang tuples, pids, references excluded. Fixes a bug in the validation of the response body which failed in case the body was not a MOPS expression, a binary or map. Now all external-friendly types are allows e.g. numbers, booleans, strings, binaries, maps, lists and MOPS expressions. This allows to return static content i.e. not a result of evaluating a MOPS expression in any given type of action. Upgraded MOPS which has better error reporting and support for a new function random(N) which returns N random members from a list. If the value random is applied is static, this will yield the same results on every request. Fixed API Gateway Minor fixes to enhance error handling and logging Fixed a case where an invalid API Specification can crash the gateway process during startup Configuration Fixed an error in which private/default lager configuration would override user configuration (bondy.conf) OAuth2 Fixed a bug on the removal of refresh token indices during refresh token revocation. Clustering Fixed missing handler for WAMP ERROR(CALL) messages forwarded by a peer node Changed Configuration The WAMP raw socket serialiser slot assignment is now configurable. Bondy provides Erlang (erl) and BERT serialisers in addition to JSON and Messagepack. This change allows the user to configure to which of the 13 available slots (3..15) are those serialisers mapped to.","ref":"changelog.html#0-8-8","title":"CHANGELOG - 0.8.8","type":"extras"},{"doc":"Added Added a controlled phased startup process Bondy now starts in phases allowing to block on several steps using configuration parameters. The main benefit is to avoid starting up the WAMP client socket listeners before serveral subsystems have finish initialisation and/or some processes have been completed. startup.wait_for_store_partitions - controls whether to block further stages until all db partitions have been initialised, this includes loading all data into those entities stored in ram and disk. Default is on . startup.wait_for_store_hashtrees - defines whether Bondy will wait for the db hashtrees to be built before continuing with initialisation. Default is on . startup.wait_for_store_aae_exchange - Defines whether Bondy will wait for the first active anti-entropy exchange to be finished before continuing with initialisation. These only works if Bondy is part of a cluster i.e. when Peer Discovery and Automatic Cluster join is enabled. The Bondy Admin HTTP API listeners are started as soon as the store partitions and other subsystems are initilised. This allows for liveness probes to be able to check on Bondy and/or admin users to inspect and/or operate while the other phases are running. Fixed Several fixes to Security Configuration file format sources.usernames now takes a string &quot;any&quot; of a list of usernames, including &quot;anonymous&quot; grants.roles now takes a string &quot;any&quot; of a list of rolenames, including &quot;anonymous&quot;","ref":"changelog.html#0-8-7","title":"CHANGELOG - 0.8.7","type":"extras"},{"doc":"First implementation of Peer Discovery and Automatic Cluster join. Implementation of DNS srv based discovery tested to work with Kubernetes DNS Finished Bondy Broker schema specification Added authorization controls for all WAMP verbs (register, unregister, call, cancel, publish, subscribe and unsubscribe). Authorization is managed by the existing Security subsystem which now can be configured using JSON files defined in the bondy.conf file (in addition to the WAMP and HTTP/REST APIs). Fixed WAMPRA (with salted password) authentication method. This requires a rehash of the existing passwords. If you are migrating from an existing Bondy installation, the migration occurs lazily on the new user login (as we need the user to provide the password for Bondy to be able to rehash, as Bondy never stores clear text passwords). Refactoring of configuration via bondy.conf Removed legacy config options, Renamed a few a config options and introduced new ones to support static configuration via JSON files and new features like Peer Discovery and Automatic Cluster join.","ref":"changelog.html#0-8-6","title":"CHANGELOG - 0.8.6","type":"extras"},{"doc":"Migration to OTP 21.3 or higher. Upgraded all dependencies to support OTP 21","ref":"changelog.html#0-8-2","title":"CHANGELOG - 0.8.2","type":"extras"},{"doc":"This version includes a complete redesign of event management and instrumentation. The new bondy_event_manager is now the way for the different subsystems to asynchronously publish events (notifications) and offload all instrumentation to event handlers: bondy_promethues is an event handler that implements all promethues instrumentation bondy_wamp_meta_events is an event handler that selectively re-published bondy events to WAMP Meta events. New Modules bondy_event_manager implements a form of supervised handlers similar to lager (logging library), by spawning a &quot;watcher&quot; processes per handler (module) under a supervision tree and restarting it when it crashes. bondy_alarm_handler replaces sasl’s default alarm_handler. Deprecated Modules bondy_stats containing legacy exometer instrumentation was removed.","ref":"changelog.html#0-8-1","title":"CHANGELOG - 0.8.1","type":"extras"},{"doc":"This version introduces an incompatibility with previous versions data storage. If you want to upgrade an existing installation you will need to use the bondy_backup module's functions or the Admin Backup API. Upgrade to plum_db 0.2.0 which introduces prefix types to determine which storage type to use with the following types supported: ram (ets-based storage), disk (leveledb) and ram_disk(ets and leveldb). Registry uses ram storage type All security resources use ram_disk storage type Api Gateway (specs) and OAuth2 tokens use disk storage type Handling of migration in bondy_backup. To migrate from v0.7.1 perform a backup on Bondy v0.7.1 and then restore it on Bondy v0.7.2.","ref":"changelog.html#0-8-0","title":"CHANGELOG - 0.8.0","type":"extras"},{"doc":"New Trie data structure for bondy_registry Bondy now uses Leapsight's art library to implement the registry index structure use to match RPC calls and PubSub subscriptions. art provides a single-writter, multi-reader Radix Trie following the Adaptive Radix Tree algorithm. The implementation uses one gen_server and one ets table per trie and currently supports WAMP exact and prefix matching strategies. wildcard matching support is on its way. Internal wamp subscriptions We have implemented a first version of an internal WAMP subscription so that Bondy internally can subscribe to WAMP events. This is done through new functions in bondy_broker and the new module bondy_broker_events OAuth 2 Security Major changes to security subsytem including harmonisation of APIs, deduplication and bug fixes. Use new internal wamp subscriptions to avoid coupling Bondy Security with Bondy API Gateway &amp; OAuth. Bondy Security modules publishe wamp events on entity actions e.g. user creation, deletion, etc. Bondy API Gateway modules and bondy_api_gateway_client subscribe to the user delete events to cleanup OAuth tokens Fixed a bug where internal security operations will not trigger token revocation. Bondy API Gateway modules, i.e. are now implemented by calling Bondy Security modules e.g. bondy_security_user instead of calling bondy_security (former Basho Riak Core Security) directly. This will help in the refactoring of bondy_security and in addition all event publishing is centralised in bondy_security_user. Implemented additional index for tokens to enable deletion of all users’ tokens Added two db maintenance functions to (i) remove dangling tokens and (ii) rebuild the indices on an existing db Added additional Internal wamp events to subsystems e.g. bondy_realm and bondy_backup","ref":"changelog.html#0-7-1","title":"CHANGELOG - 0.7.1","type":"extras"},{"doc":"Clustering Completion of clustering implementation using partisan library (at the moment supporting the default peer service only, hyparview to be considered in the future) bondy_router can now route WAMP messages across nodes. The internal load balancer prefers local callees by default, only when a local callee is not found for a procedure the invocation is routed to another node. Load balancer state is local and not replicated. Future global load balancing strategies based on ant-colony optimisation to be considered in the future. bondy-admin (bondy_cli) implementation of cluster management commands (join, leave, kick-out and members) Storage and Replication new storage based on plum_db which uses lasp-lang/plumtree and lasp-lang/partisan to support data replication provides more concurrency than plumtree and removes the capacity limitation imposed by the use of dets API Gateway API Specs are replicated using plum_db. A single bondy_api_gateway gen_server process rebuilds the Cowboy dispatch table when API Spec updates are received from other nodes in the cluster (using plum_db pubsub capabilities) Registry The registry entries are replicated using plum_db. This is not ideal as we are using disk for transient data but it is a temporary solution for replication and AAE, as we are planning to change the registry by a new implementation of a trie data structure at which point we might use plumtree and partisan directly avoiding storing to disk. A single bondy_registry gen_server process rebuilds the in-memory indices when entry updates are received from other nodes in the cluster (using plum_db pubsub capabilities) bondy_backup A new module that allows to backup the contents of the database to a file, and restore it. Allows to migrate from previous versions that use plumtree (dets) to plum_db","ref":"changelog.html#0-7-0","title":"CHANGELOG - 0.7.0","type":"extras"},{"doc":"General Removed unused modules Minor error description fixes Code tidy up Depencies cowboy, hackney, jsx, sidejob, promethus, lager and other dependencies upgraded Oauth2 Revoke refresh_token Added client_device_id optional parameter for token request which will generate an inde mapping a Username/ClientDeviceId to a refresh_token to enabled revoking token by Username/ClientDeviceId. JWT.iat property using unix erlang:system_time/1 instead of erlang:monotonic_time/1 (as users might want to use this property) Token expiration is now configured via cuttlefish API Gateway JSON errors no longer include the status_code property (this was redundant with HTTP Status Code and were sometimes inconsistent) Added http_method in forward actions to enable transforming the upstream HTTP request method e.g. a GET can be transformed to a POST API Gateway Spec now allows to use a mop expression for WAMP procedure URIs New mops functions: min, max and nth on lists (equivalent to the lists module functions) Testing Fixed mops suite bugs Added oauth2 refresh_token CRUD test case, covering creation, refresh and revoke by token and by user/client_device_id","ref":"changelog.html#0-6-6","title":"CHANGELOG - 0.6.6","type":"extras"},{"doc":"Upgraded Cowboy dependency to 2.1.0 Upgraded promethues_cowboy to latest and added cowboy metrics to prometheus endpoint Minor changes in function naming for enhanced understanding Minor fixes in options and defaults","ref":"changelog.html#0-6-3","title":"CHANGELOG - 0.6.3","type":"extras"},{"doc":"","ref":"wamp.html","title":"Web Application Messaging Protocol","type":"extras"}]